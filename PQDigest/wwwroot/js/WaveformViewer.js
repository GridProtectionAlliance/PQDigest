(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["WaveformViewer"],{

/***/ "./tsx/WaveformViewer/BrowseEvents.tsx":
/*!*********************************************!*\
  !*** ./tsx/WaveformViewer/BrowseEvents.tsx ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
//******************************************************************************************************
//  BrowseEvents.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/11/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};

var BrowseEvents = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(null), 2), nextID = _b[0], setNextID = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(null), 2), backID = _c[0], setBackID = _c[1];
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        var handle1 = GetEventID(false, all);
        var handle2 = GetEventID(true, all);
        handle1.done(function (next) { return setNextID(next == undefined || next.length == 0 ? null : next[0]['ID']); });
        handle2.done(function (back) { return setBackID(back == undefined || back.length == 0 ? null : back[0]['ID']); });
        return function () {
            if (handle1.abort != undefined)
                handle1.abort();
            if (handle2.abort != undefined)
                handle2.abort();
        };
    }, [props.EventID, all]);
    function GetEventID(n, a) {
        return $.ajax({
            type: "GET",
            url: homePath + "api/OpenXDA/Event/" + (n ? 'Next' : 'Previous') + "Event/" + (a ? 'AllMeters' : 'Meter') + "/" + props.EventID,
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: true,
            async: true
        });
    }
    try {
        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null,
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "form-check" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("label", { className: "form-check-label" },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("input", { type: "checkbox", style: { marginLeft: -15 }, className: "form-check-input", checked: all, onChange: function () { return setAll(!all); } }),
                    "All Meters")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("table", { className: "table" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tbody", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null,
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", { href: backID == null ? null : homePath + "WaveformViewer?EventID=" + backID }, "Previous")),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null,
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", { href: nextID == null ? null : homePath + "WaveformViewer?EventID=" + nextID }, "Next")))))));
    }
    catch (_d) {
        return null;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (BrowseEvents);


/***/ }),

/***/ "./tsx/WaveformViewer/ComparableEvents.tsx":
/*!*************************************************!*\
  !*** ./tsx/WaveformViewer/ComparableEvents.tsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
//******************************************************************************************************
//  ComparableEvents.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/12/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};

var ComparableEvents = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), comparableEvents = _a[0], setComparableEvents = _a[1];
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        var handle1 = GetComparableEvents();
        handle1.done(function (events) { return setComparableEvents(events); });
        return function () {
            if (handle1.abort != undefined)
                handle1.abort();
        };
    }, [props.EventID]);
    function GetComparableEvents() {
        return $.ajax({
            type: "GET",
            url: homePath + "api/OpenXDA/Event/ComparableEvents/" + props.EventID,
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: true,
            async: true
        });
    }
    try {
        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("select", { className: "form-control", value: props.ComparableEventID, onChange: function (evt) { return props.OnChange(parseInt(evt.target.value)); } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "0" }, "None"),
            comparableEvents.map(function (ces) { return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { key: ces.ID, value: ces.ID },
                ces.Meter,
                " (",
                ces.Difference,
                " ms)"); })));
    }
    catch (_b) {
        return null;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (ComparableEvents);


/***/ }),

/***/ "./tsx/WaveformViewer/Info.tsx":
/*!*************************************!*\
  !*** ./tsx/WaveformViewer/Info.tsx ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
//******************************************************************************************************
//  Info.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/12/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};

var Info = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(null), 2), info = _a[0], setInfo = _a[1];
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        var handle1 = GetEventInfo();
        handle1.done(function (info) { return setInfo(info[0]); });
        return function () {
            if (handle1.abort != undefined)
                handle1.abort();
        };
    }, [props.EventID]);
    function GetEventInfo() {
        return $.ajax({
            type: "GET",
            url: homePath + "api/OpenXDA/Event/Info/" + props.EventID,
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: true,
            async: true
        });
    }
    try {
        if (info == null)
            return null;
        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("table", { className: "table" },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tbody", null,
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Meter"),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.Meter)),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Time"),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null,
                        moment(info.StartTime).format('MM/DD/YYYY HH:mm'),
                        "\u00A0(CST)")),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Type"),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.EventType)),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Phase"),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.Phase)),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Duration"),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.Duration)),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Magnitude"),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.Magnitude)),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Depth"),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.SagDepth)))));
    }
    catch (_b) {
        return null;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (Info);


/***/ }),

/***/ "./tsx/WaveformViewer/Legend.tsx":
/*!***************************************!*\
  !*** ./tsx/WaveformViewer/Legend.tsx ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
//******************************************************************************************************
//  Legend.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/05/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};

var Legend = function (props) {
    if (props.Paths.length == 0)
        return null;
    else if (props.Type == 'Voltage')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(VoltageLegend, __assign({}, props));
    else if (props.Type == 'Current')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(CurrentLegend, __assign({}, props));
    else if (props.Type == 'Frequency')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(FrequencyLegend, __assign({}, props));
    else if (props.Type == 'Power')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(PowerLegend, __assign({}, props));
    else if (props.Type == 'RapidVoltageChange')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(RapidVoltageChangeLegend, __assign({}, props));
    else if (props.Type == 'SpecifiedHarmonic')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SpecifiedHarmonicLegend, __assign({}, props));
    else if (props.Type == 'SymmetricalComponents')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SymmetricalComponentsLegend, __assign({}, props));
    else if (props.Type == 'THD')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(THDLegend, __assign({}, props));
    else if (props.Type == 'Unbalance')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(UnbalanceLegend, __assign({}, props));
    return null;
};
var VoltageLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), wf = _b[0], setWf = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), rms = _c[0], setRMS = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), amp = _d[0], setAmp = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), ph = _e[0], setPh = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), an = _f[0], setAn = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), bn = _g[0], setBn = _g[1];
    var _h = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), cn = _h[0], setCn = _h[1];
    var _j = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), ab = _j[0], setAb = _j[1];
    var _k = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), bc = _k[0], setBc = _k[1];
    var _l = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), ca = _l[0], setCa = _l[1];
    var _m = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _m[0], setShowLegend = _m[1];
    var prefix = 'V';
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setWf(!all);
                        setRMS(!all);
                        setAmp(!all);
                        setPh(!all);
                        setAn(!all);
                        setBn(!all);
                        setCn(!all);
                        setAb(!all);
                        setBc(!all);
                        setCa(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: wf ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('wf') >= 0 && x.Show == wf; }).forEach(function (x) { return props.CallBack(x); });
                        setWf(!wf);
                    } }, "Wf"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: rms ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('rms') >= 0 && x.Show == rms; }).forEach(function (x) { return props.CallBack(x); });
                        setRMS(!rms);
                    } }, "RMS"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: amp ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('amp') >= 0 && x.Show == amp; }).forEach(function (x) { return props.CallBack(x); });
                        setAmp(!amp);
                    } }, "Amp"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ph ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('ph') >= 0 && x.Show == ph; }).forEach(function (x) { return props.CallBack(x); });
                        setPh(!ph);
                    } }, "Ph")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: an ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'AN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('an') >= 0 && x.Show == an; }).forEach(function (x) { return props.CallBack(x); });
                        setAn(!an);
                    } },
                    prefix,
                    "AN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: bn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'BN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('bn') >= 0 && x.Show == bn; }).forEach(function (x) { return props.CallBack(x); });
                        setBn(!bn);
                    } },
                    prefix,
                    "BN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: cn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'CN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('cn') >= 0 && x.Show == cn; }).forEach(function (x) { return props.CallBack(x); });
                        setCn(!cn);
                    } },
                    prefix,
                    "CN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ab ? 1 : 0.5, backgroundColor: props.GetColor(prefix + "AB") }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('ab') >= 0 && x.Show == ab; }).forEach(function (x) { return props.CallBack(x); });
                        setAb(!ab);
                    } },
                    prefix,
                    "AB"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "AB", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "AB"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "AB", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "AB"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "AB", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "AB"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "AB", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "AB"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: bc ? 1 : 0.5, backgroundColor: props.GetColor(prefix + "BC") }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('bc') >= 0 && x.Show == bc; }).forEach(function (x) { return props.CallBack(x); });
                        setBc(!bc);
                    } },
                    prefix,
                    "BC"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "BC", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "BC"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "BC", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "BC"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "BC", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "BC"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "BC", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "BC"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ca ? 1 : 0.5, backgroundColor: props.GetColor(prefix + "CA") }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('ca') >= 0 && x.Show == ca; }).forEach(function (x) { return props.CallBack(x); });
                        setCa(!ca);
                    } },
                    prefix,
                    "CA"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "CA", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "CA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "CA", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "CA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "CA", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "CA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "CA", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "CA"; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
var CurrentLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), wf = _b[0], setWf = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), rms = _c[0], setRMS = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), amp = _d[0], setAmp = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), ph = _e[0], setPh = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), an = _f[0], setAn = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), bn = _g[0], setBn = _g[1];
    var _h = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), cn = _h[0], setCn = _h[1];
    var _j = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _j[0], setShowLegend = _j[1];
    var _k = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), ng = _k[0], setNg = _k[1];
    var _l = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), res = _l[0], setRes = _l[1];
    var prefix = 'I';
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setWf(!all);
                        setRMS(!all);
                        setAmp(!all);
                        setPh(!all);
                        setAn(!all);
                        setBn(!all);
                        setCn(!all);
                        setRes(!all);
                        setNg(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: wf ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('wf') >= 0 && x.Show == wf; }).forEach(function (x) { return props.CallBack(x); });
                        setWf(!wf);
                    } }, "Wf"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: rms ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('rms') >= 0 && x.Show == rms; }).forEach(function (x) { return props.CallBack(x); });
                        setRMS(!rms);
                    } }, "RMS"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: amp ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('amp') >= 0 && x.Show == amp; }).forEach(function (x) { return props.CallBack(x); });
                        setAmp(!amp);
                    } }, "Amp"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ph ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('ph') >= 0 && x.Show == ph; }).forEach(function (x) { return props.CallBack(x); });
                        setPh(!ph);
                    } }, "Ph")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: an ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'AN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('an') >= 0 && x.Show == an; }).forEach(function (x) { return props.CallBack(x); });
                        setAn(!an);
                    } },
                    prefix,
                    "AN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: bn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'BN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('bn') >= 0 && x.Show == bn; }).forEach(function (x) { return props.CallBack(x); });
                        setBn(!bn);
                    } },
                    prefix,
                    "BN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: cn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'CN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('cn') >= 0 && x.Show == cn; }).forEach(function (x) { return props.CallBack(x); });
                        setCn(!cn);
                    } },
                    prefix,
                    "CN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ng ? 1 : 0.5, backgroundColor: props.GetColor(prefix + "NG") }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('ng') >= 0 && x.Show == ng; }).forEach(function (x) { return props.CallBack(x); });
                        setNg(!ng);
                    } },
                    prefix,
                    "NG"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "NG", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "NG"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "NG", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "NG"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "NG", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "NG"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "NG", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "NG"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: res ? 1 : 0.5, backgroundColor: props.GetColor(prefix + "RES") }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('res') >= 0 && x.Show == res; }).forEach(function (x) { return props.CallBack(x); });
                        setRes(!res);
                    } },
                    prefix,
                    "RES"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "RES", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "RES"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "RES", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "RES"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "RES", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "RES"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "RES", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "RES"; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
var FrequencyLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _a[0], setShowLegend = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _b[0], setAll = _b[1];
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 150, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setAll(!all);
                    } }, "All")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "VA", Path: props.Paths.find(function (x) { return x.Key == "VA"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "VB", Path: props.Paths.find(function (x) { return x.Key == "VB"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "VC", Path: props.Paths.find(function (x) { return x.Key == "VC"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Average", Path: props.Paths.find(function (x) { return x.Key == "Average"; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
var PowerLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _a[0], setShowLegend = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _b[0], setAll = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), active = _c[0], setActive = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), apparent = _d[0], setApparent = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), reactive = _e[0], setReactive = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), powerFactor = _f[0], setPowerFactor = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), an = _g[0], setAn = _g[1];
    var _h = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), bn = _h[0], setBn = _h[1];
    var _j = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), cn = _j[0], setCn = _j[1];
    var _k = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), total = _k[0], setTotal = _k[1];
    var prefix = 'I';
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setActive(!all);
                        setApparent(!all);
                        setReactive(!all);
                        setPowerFactor(!all);
                        setAn(!all);
                        setBn(!all);
                        setCn(!all);
                        setTotal(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: active ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('w') >= 0 && x.Show == active; }).forEach(function (x) { return props.CallBack(x); });
                        setActive(!active);
                    } }, "W"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: apparent ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/-VA[^R]?$/g) != null && x.Show == apparent; }).forEach(function (x) { return props.CallBack(x); });
                        setApparent(!apparent);
                    } }, "VA"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: reactive ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/-VAR$/g) != null && x.Show == reactive; }).forEach(function (x) { return props.CallBack(x); });
                        setReactive(!reactive);
                    } }, "VAR"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: powerFactor ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('pf') >= 0 && x.Show == powerFactor; }).forEach(function (x) { return props.CallBack(x); });
                        setPowerFactor(!powerFactor);
                    } }, "PF")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: an ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'AN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('an') >= 0 && x.Show == an; }).forEach(function (x) { return props.CallBack(x); });
                        setAn(!an);
                    } }, "AN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "AN-W", Path: props.Paths.find(function (x) { return x.Key == "AN-W"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "AN-VA", Path: props.Paths.find(function (x) { return x.Key == "AN-VA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "AN-VAR", Path: props.Paths.find(function (x) { return x.Key == "AN-VAR"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "AN-PF", Path: props.Paths.find(function (x) { return x.Key == "AN-PF"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: bn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'BN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('bn') >= 0 && x.Show == bn; }).forEach(function (x) { return props.CallBack(x); });
                        setBn(!bn);
                    } }, "BN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "BN-W", Path: props.Paths.find(function (x) { return x.Key == "BN-W"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "BN-VA", Path: props.Paths.find(function (x) { return x.Key == "BN-VA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "BN-VAR", Path: props.Paths.find(function (x) { return x.Key == "BN-VAR"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "BN-PF", Path: props.Paths.find(function (x) { return x.Key == "BN-PF"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: cn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'CN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('cn') >= 0 && x.Show == cn; }).forEach(function (x) { return props.CallBack(x); });
                        setCn(!cn);
                    } }, "CN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "CN-W", Path: props.Paths.find(function (x) { return x.Key == "CN-W"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "CN-VA", Path: props.Paths.find(function (x) { return x.Key == "CN-VA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "CN-VAR", Path: props.Paths.find(function (x) { return x.Key == "CN-VAR"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "CN-PF", Path: props.Paths.find(function (x) { return x.Key == "CN-PF"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: total ? 1 : 0.5, backgroundColor: props.GetColor("Total") }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('total') >= 0 && x.Show == total; }).forEach(function (x) { return props.CallBack(x); });
                        setTotal(!total);
                    } }, "Total"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Total-W", Path: props.Paths.find(function (x) { return x.Key == "Total-W"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Total-VA", Path: props.Paths.find(function (x) { return x.Key == "Total-VA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Total-VAR", Path: props.Paths.find(function (x) { return x.Key == "Total-VAR"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Total-PF", Path: props.Paths.find(function (x) { return x.Key == "Total-PF"; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
var RapidVoltageChangeLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), ln = _b[0], setLn = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), ll = _c[0], setLl = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), a = _d[0], setA = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), b = _e[0], setB = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), c = _f[0], setC = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _g[0], setShowLegend = _g[1];
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setLn(!all);
                        setLl(!all);
                        setA(!all);
                        setB(!all);
                        setC(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ln ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/V[ABC]N/g) != null && x.Show == ln; }).forEach(function (x) { return props.CallBack(x); });
                        setLn(!ln);
                    } }, "LN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ll ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/V[ABC][ABC]/g) != null && x.Show == ll; }).forEach(function (x) { return props.CallBack(x); });
                        setLl(!ll);
                    } }, "LL")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: a ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/VA[BN]/g) != null && x.Show == a; }).forEach(function (x) { return props.CallBack(x); });
                        setA(!a);
                    } }, "A"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VAN', Path: props.Paths.find(function (x) { return x.Key == 'VAN'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VAB', Path: props.Paths.find(function (x) { return x.Key == 'VAB'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: b ? 1 : 0.5, backgroundColor: props.GetColor('VBN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/VB[CN]/g) != null && x.Show == b; }).forEach(function (x) { return props.CallBack(x); });
                        setB(!b);
                    } }, "B"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VBN', Path: props.Paths.find(function (x) { return x.Key == 'VBN'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VBC', Path: props.Paths.find(function (x) { return x.Key == 'VBC'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: c ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/VC[AN]/g) != null && x.Show == c; }).forEach(function (x) { return props.CallBack(x); });
                        setC(!c);
                    } }, "C"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VCN', Path: props.Paths.find(function (x) { return x.Key == 'VCN'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VCA', Path: props.Paths.find(function (x) { return x.Key == 'VCA'; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
var SpecifiedHarmonicLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), vMag = _b[0], setVMag = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), vAng = _c[0], setVAng = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), iMag = _d[0], setIMag = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), iAng = _e[0], setIAng = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), a = _f[0], setA = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), b = _g[0], setB = _g[1];
    var _h = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), c = _h[0], setC = _h[1];
    var _j = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _j[0], setShowLegend = _j[1];
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setVMag(!all);
                        setVAng(!all);
                        setIMag(!all);
                        setIAng(!all);
                        setA(!all);
                        setB(!all);
                        setC(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: vMag ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/V[ABC]N Mag/g) != null && x.Show == vMag; }).forEach(function (x) { return props.CallBack(x); });
                        setVMag(!vMag);
                    } }, "V Mag"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: vAng ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/V[ABC][ABC] Ang/g) != null && x.Show == vAng; }).forEach(function (x) { return props.CallBack(x); });
                        setVAng(!vAng);
                    } }, "V Ang"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: iMag ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/I[ABC]N Mag/g) != null && x.Show == iMag; }).forEach(function (x) { return props.CallBack(x); });
                        setIMag(!iMag);
                    } }, "I Mag"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: iAng ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/I[ABC][ABC] Ang/g) != null && x.Show == iAng; }).forEach(function (x) { return props.CallBack(x); });
                        setIAng(!iAng);
                    } }, "I Ang")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: a ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/[VI]AN/g) != null && x.Show == a; }).forEach(function (x) { return props.CallBack(x); });
                        setA(!a);
                    } }, "A"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VAN Mag', Path: props.Paths.find(function (x) { return x.Key == 'VAN Mag'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VAN Ang', Path: props.Paths.find(function (x) { return x.Key == 'VAN Ang'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'IAN Mag', Path: props.Paths.find(function (x) { return x.Key == 'IAN Mag'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'IAN Ang', Path: props.Paths.find(function (x) { return x.Key == 'IAN Ang'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: b ? 1 : 0.5, backgroundColor: props.GetColor('VBN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/[VI]BN/g) != null && x.Show == b; }).forEach(function (x) { return props.CallBack(x); });
                        setB(!b);
                    } }, "B"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VBN Mag', Path: props.Paths.find(function (x) { return x.Key == 'VBN Mag'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VBN Ang', Path: props.Paths.find(function (x) { return x.Key == 'VBN Ang'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'IBN Mag', Path: props.Paths.find(function (x) { return x.Key == 'IBN Mag'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'IBN Ang', Path: props.Paths.find(function (x) { return x.Key == 'IBN Ang'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: c ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/[VI]CN/g) != null && x.Show == c; }).forEach(function (x) { return props.CallBack(x); });
                        setC(!c);
                    } }, "C"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VCN Mag', Path: props.Paths.find(function (x) { return x.Key == 'VCN Mag'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VCN Ang', Path: props.Paths.find(function (x) { return x.Key == 'VCN Ang'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'ICN Mag', Path: props.Paths.find(function (x) { return x.Key == 'ICN Mag'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'ICN Ang', Path: props.Paths.find(function (x) { return x.Key == 'ICN Ang'; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
var SymmetricalComponentsLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), v = _b[0], setV = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), i = _c[0], setI = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), s0 = _d[0], setS0 = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), s1 = _e[0], setS1 = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), s2 = _f[0], setS2 = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _g[0], setShowLegend = _g[1];
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setV(!all);
                        setI(!all);
                        setS0(!all);
                        setS1(!all);
                        setS2(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: v ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/Voltage/g) != null && x.Show == v; }).forEach(function (x) { return props.CallBack(x); });
                        setV(!v);
                    } }, "V"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: i ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/Current/g) != null && x.Show == i; }).forEach(function (x) { return props.CallBack(x); });
                        setI(!i);
                    } }, "I")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: s0 ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/S0/g) != null && x.Show == s0; }).forEach(function (x) { return props.CallBack(x); });
                        setS0(!s0);
                    } }, "S0"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'V S0', Path: props.Paths.find(function (x) { return x.Key == 'Voltage S0'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'I S0', Path: props.Paths.find(function (x) { return x.Key == 'Current S0'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: s1 ? 1 : 0.5, backgroundColor: props.GetColor('VBN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/S1/g) != null && x.Show == s1; }).forEach(function (x) { return props.CallBack(x); });
                        setS1(!s1);
                    } }, "S1"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'V S1', Path: props.Paths.find(function (x) { return x.Key == 'Voltage S1'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'I S1', Path: props.Paths.find(function (x) { return x.Key == 'Current S1'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: s2 ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/S2/g) != null && x.Show == s2; }).forEach(function (x) { return props.CallBack(x); });
                        setS2(!s2);
                    } }, "S2"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'V S2', Path: props.Paths.find(function (x) { return x.Key == 'Voltage S2'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'I S2', Path: props.Paths.find(function (x) { return x.Key == 'Current S2'; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
var THDLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), v = _b[0], setV = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), i = _c[0], setI = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), a = _d[0], setA = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), b = _e[0], setB = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), c = _f[0], setC = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _g[0], setShowLegend = _g[1];
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setV(!all);
                        setI(!all);
                        setA(!all);
                        setB(!all);
                        setC(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: v ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/V[ABC]N/g) != null && x.Show == v; }).forEach(function (x) { return props.CallBack(x); });
                        setV(!v);
                    } }, "V"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: i ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/I[ABC]N/g) != null && x.Show == i; }).forEach(function (x) { return props.CallBack(x); });
                        setI(!i);
                    } }, "I")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: a ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/[VI]AN/g) != null && x.Show == a; }).forEach(function (x) { return props.CallBack(x); });
                        setA(!a);
                    } }, "A"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VAN', Path: props.Paths.find(function (x) { return x.Key == 'VAN'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'IAN', Path: props.Paths.find(function (x) { return x.Key == 'IAN'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: b ? 1 : 0.5, backgroundColor: props.GetColor('VBN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/[VI]BN/g) != null && x.Show == b; }).forEach(function (x) { return props.CallBack(x); });
                        setB(!b);
                    } }, "B"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VBN', Path: props.Paths.find(function (x) { return x.Key == 'VBN'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'IBN', Path: props.Paths.find(function (x) { return x.Key == 'IBN'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: c ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/[VI]CN/g) != null && x.Show == c; }).forEach(function (x) { return props.CallBack(x); });
                        setC(!c);
                    } }, "C"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'VCN', Path: props.Paths.find(function (x) { return x.Key == 'VCN'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'ICN', Path: props.Paths.find(function (x) { return x.Key == 'ICN'; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
var UnbalanceLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), v = _b[0], setV = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), i = _c[0], setI = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), s0s1 = _d[0], setS0s1 = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), s2s1 = _e[0], setS2s1 = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _f[0], setShowLegend = _f[1];
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setV(!all);
                        setI(!all);
                        setS0s1(!all);
                        setS2s1(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: v ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/Voltage/g) != null && x.Show == v; }).forEach(function (x) { return props.CallBack(x); });
                        setV(!v);
                    } }, "V"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: i ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/Current/g) != null && x.Show == i; }).forEach(function (x) { return props.CallBack(x); });
                        setI(!i);
                    } }, "I")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: s0s1 ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/S0/g) != null && x.Show == s0s1; }).forEach(function (x) { return props.CallBack(x); });
                        setS0s1(!s0s1);
                    } }, "S0/S1"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'V S0/S1', Path: props.Paths.find(function (x) { return x.Key == 'S0/S1 Voltage'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'I S0/S1', Path: props.Paths.find(function (x) { return x.Key == 'S0/S1 Current'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: s2s1 ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/S2/g) != null && x.Show == s2s1; }).forEach(function (x) { return props.CallBack(x); });
                        setS2s1(!s2s1);
                    } }, "S2/S1"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'V S2/S1', Path: props.Paths.find(function (x) { return x.Key == 'S2/S1 Voltage'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: 'I S2/S1', Path: props.Paths.find(function (x) { return x.Key == 'S2/S1 Current'; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
var Button = function (props) {
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: {
            backgroundColor: props.Path == undefined ? 'black' : props.Path.Color,
            opacity: props.Path == undefined || props.Path.Show ? 1 : 0.5
        }, disabled: props.Path == undefined, onClick: function (evt) { return props.CallBack(props.Path); } }, props.Key));
};
/* harmony default export */ __webpack_exports__["default"] = (Legend);


/***/ }),

/***/ "./tsx/WaveformViewer/PolarChart.tsx":
/*!*******************************************!*\
  !*** ./tsx/WaveformViewer/PolarChart.tsx ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3 */ "d3");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(d3__WEBPACK_IMPORTED_MODULE_1__);
//******************************************************************************************************
//  PolarChart.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/06/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************


var PolarChart = function (props) {
    try {
        var chartHeight = props.Height - 150;
        if (props.VoltageData.length == 0 || props.CurrentData.length == 0)
            return null;
        var vData = props.VoltageData.map(function (x) {
            var data = x.Data[Object(d3__WEBPACK_IMPORTED_MODULE_1__["bisect"])(x.Data.map(function (x) { return x[0]; }), props.Time)];
            return { Key: x.Key, Value: data != undefined ? data[1] : undefined, Color: x.Color };
        });
        var vMax = parseFloat(Object(d3__WEBPACK_IMPORTED_MODULE_1__["max"])(vData.filter(function (x) { return x.Key.indexOf('RMS-V') >= 0; }).map(function (x) { return x.Value; })).toString());
        var iData = props.CurrentData.map(function (x) {
            var data = x.Data[Object(d3__WEBPACK_IMPORTED_MODULE_1__["bisect"])(x.Data.map(function (x) { return x[0]; }), props.Time)];
            return { Key: x.Key, Value: data != undefined ? data[1] : undefined, Color: x.Color };
        });
        var iMax = parseFloat(Object(d3__WEBPACK_IMPORTED_MODULE_1__["max"])(iData.filter(function (x) { return x.Key.indexOf('RMS-I') >= 0; }).map(function (x) { return x.Value; })).toString());
        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null,
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg", { width: props.Width, height: chartHeight },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("circle", { cx: props.Width / 2, cy: chartHeight / 2, r: chartHeight * 0.3, stroke: "lightgrey", strokeWidth: "1", fill: 'white', fillOpacity: "0" }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("circle", { cx: props.Width / 2, cy: chartHeight / 2, r: chartHeight * 0.45, stroke: "lightgrey", strokeWidth: "1", fill: 'white', fillOpacity: "0" }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("line", { x1: props.Width / 2, y1: "0", x2: props.Width / 2, y2: chartHeight, style: { stroke: 'lightgrey', strokeWidth: 2 } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("line", { x1: props.Width / 2 - chartHeight / 2, y1: chartHeight / 2, x2: props.Width / 2 + chartHeight / 2, y2: chartHeight / 2, style: { stroke: 'lightgrey', strokeWidth: 2 } }),
                vData.find(function (x) { return x.Key == 'RMS-VAN'; }) != undefined && vData.find(function (x) { return x.Key == 'Ph-VAN'; }) != undefined ?
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: DrawVectorSVG(props.Width / 2, chartHeight / 2, chartHeight / 2, vData.find(function (x) { return x.Key == 'RMS-VAN'; }).Value, vMax, vData.find(function (x) { return x.Key == 'Ph-VAN'; }).Value), style: { stroke: vData.find(function (x) { return x.Key == 'Ph-VAN'; }).Color, strokeWidth: 3 } })
                    : null,
                vData.find(function (x) { return x.Key == 'RMS-VBN'; }) != undefined && vData.find(function (x) { return x.Key == 'Ph-VBN'; }) != undefined ?
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: DrawVectorSVG(props.Width / 2, chartHeight / 2, chartHeight / 2, vData.find(function (x) { return x.Key == 'RMS-VBN'; }).Value, vMax, vData.find(function (x) { return x.Key == 'Ph-VBN'; }).Value), style: { stroke: vData.find(function (x) { return x.Key == 'Ph-VBN'; }).Color, strokeWidth: 3 } })
                    : null,
                vData.find(function (x) { return x.Key == 'RMS-VCN'; }) != undefined && vData.find(function (x) { return x.Key == 'Ph-VCN'; }) != undefined ?
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: DrawVectorSVG(props.Width / 2, chartHeight / 2, chartHeight / 2, vData.find(function (x) { return x.Key == 'RMS-VCN'; }).Value, vMax, vData.find(function (x) { return x.Key == 'Ph-VCN'; }).Value), style: { stroke: vData.find(function (x) { return x.Key == 'Ph-VCN'; }).Color, strokeWidth: 3 } })
                    : null,
                iData.find(function (x) { return x.Key == 'RMS-IAN'; }) != undefined && iData.find(function (x) { return x.Key == 'Ph-IAN'; }) != undefined ?
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: DrawVectorSVG(props.Width / 2, chartHeight / 2, chartHeight / 2, iData.find(function (x) { return x.Key == 'RMS-IAN'; }).Value, iMax, iData.find(function (x) { return x.Key == 'Ph-IAN'; }).Value), style: { stroke: iData.find(function (x) { return x.Key == 'Ph-IAN'; }).Color, strokeWidth: 3 } })
                    : null,
                iData.find(function (x) { return x.Key == 'RMS-IBN'; }) != undefined && iData.find(function (x) { return x.Key == 'Ph-IBN'; }) != undefined ?
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: DrawVectorSVG(props.Width / 2, chartHeight / 2, chartHeight / 2, iData.find(function (x) { return x.Key == 'RMS-IBN'; }).Value, iMax, iData.find(function (x) { return x.Key == 'Ph-IBN'; }).Value), style: { stroke: iData.find(function (x) { return x.Key == 'Ph-IBN'; }).Color, strokeWidth: 3 } })
                    : null,
                iData.find(function (x) { return x.Key == 'RMS-ICN'; }) != undefined && iData.find(function (x) { return x.Key == 'Ph-ICN'; }) != undefined ?
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: DrawVectorSVG(props.Width / 2, chartHeight / 2, chartHeight / 2, iData.find(function (x) { return x.Key == 'RMS-ICN'; }).Value, iMax, iData.find(function (x) { return x.Key == 'Ph-ICN'; }).Value), style: { stroke: iData.find(function (x) { return x.Key == 'Ph-ICN'; }).Color, strokeWidth: 3 } })
                    : null),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("table", { className: "table" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("thead", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", null),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", null, "VAN"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", null, "VBN"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", null, "VCN"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", null, "IAN"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", null, "IBN"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", null, "ICN"))),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tbody", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Mag"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, vData.find(function (x) { return x.Key == 'RMS-VAN'; }) != undefined ? vData.find(function (x) { return x.Key == 'RMS-VAN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, vData.find(function (x) { return x.Key == 'RMS-VBN'; }) != undefined ? vData.find(function (x) { return x.Key == 'RMS-VBN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, vData.find(function (x) { return x.Key == 'RMS-VCN'; }) != undefined ? vData.find(function (x) { return x.Key == 'RMS-VCN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, iData.find(function (x) { return x.Key == 'RMS-IAN'; }) != undefined ? iData.find(function (x) { return x.Key == 'RMS-IAN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, iData.find(function (x) { return x.Key == 'RMS-IBN'; }) != undefined ? iData.find(function (x) { return x.Key == 'RMS-IBN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, iData.find(function (x) { return x.Key == 'RMS-ICN'; }) != undefined ? iData.find(function (x) { return x.Key == 'RMS-ICN'; }).Value.toFixed(0) : '')),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Ang"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, vData.find(function (x) { return x.Key == 'Ph-VAN'; }) != undefined ? vData.find(function (x) { return x.Key == 'Ph-VAN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, vData.find(function (x) { return x.Key == 'Ph-VBN'; }) != undefined ? vData.find(function (x) { return x.Key == 'Ph-VBN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, vData.find(function (x) { return x.Key == 'Ph-VCN'; }) != undefined ? vData.find(function (x) { return x.Key == 'Ph-VCN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, iData.find(function (x) { return x.Key == 'Ph-IAN'; }) != undefined ? iData.find(function (x) { return x.Key == 'Ph-IAN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, iData.find(function (x) { return x.Key == 'Ph-IBN'; }) != undefined ? iData.find(function (x) { return x.Key == 'Ph-IBN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, iData.find(function (x) { return x.Key == 'Ph-ICN'; }) != undefined ? iData.find(function (x) { return x.Key == 'Ph-ICN'; }).Value.toFixed(0) : ''))))));
    }
    catch (_a) {
        return null;
    }
};
function DrawVectorSVG(x0, y0, radius, mag, max, angle) {
    if (mag == undefined || max == undefined || angle == undefined)
        return '';
    var x = (mag / max) * Math.cos(angle * Math.PI / 180);
    var y = (mag / max) * Math.sin(angle * Math.PI / 180);
    return "M " + x0 + " " + y0 + " L " + (x0 + radius * x) + " " + (y0 - radius * y) + " Z";
}
/* harmony default export */ __webpack_exports__["default"] = (PolarChart);


/***/ }),

/***/ "./tsx/WaveformViewer/WaveformViewer.tsx":
/*!***********************************************!*\
  !*** ./tsx/WaveformViewer/WaveformViewer.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _WaveformViewerD3Chart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WaveformViewerD3Chart */ "./tsx/WaveformViewer/WaveformViewerD3Chart.tsx");
/* harmony import */ var _Legend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Legend */ "./tsx/WaveformViewer/Legend.tsx");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ "../node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3 */ "d3");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(d3__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _PolarChart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./PolarChart */ "./tsx/WaveformViewer/PolarChart.tsx");
/* harmony import */ var _BrowseEvents__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BrowseEvents */ "./tsx/WaveformViewer/BrowseEvents.tsx");
/* harmony import */ var _Info__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Info */ "./tsx/WaveformViewer/Info.tsx");
/* harmony import */ var _ComparableEvents__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ComparableEvents */ "./tsx/WaveformViewer/ComparableEvents.tsx");
//******************************************************************************************************
//  WaveformViewer.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  07/30/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};









var WaveformViewer = function (props) {
    var infoWidth = 300;
    var pointsWidth = 500;
    var waveformWidth = window.innerWidth - infoWidth - pointsWidth - 10;
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(0), 2), compareEventID = _a[0], setCompareEventID = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), voltageData = _b[0], setVoltageData = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), currentData = _c[0], setCurrentData = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), analyticData = _d[0], setAnaltyicData = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), compareVoltageData = _e[0], setCompareVoltageData = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), compareCurrentData = _f[0], setCompareCurrentData = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), compareAnaltyicData = _g[0], setCompareAnaltyicData = _g[1];
    var _h = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState('Frequency'), 2), analytic = _h[0], setAnalytic = _h[1];
    var _j = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(5), 2), harmonic = _j[0], setHarmonic = _j[1];
    var _k = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState('Click'), 2), chartAction = _k[0], setChartAction = _k[1];
    var _l = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(-1), 2), hover = _l[0], setHover = _l[1];
    var _m = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(-1), 2), click = _m[0], setClick = _m[1];
    var _o = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState({ X: { Min: null, Max: null }, Y: { Min: null, Max: null } }), 2), extents = _o[0], setExtents = _o[1];
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        var handle1 = GetWaveformData('Current', props.EventID);
        handle1.done(function (data) {
            var returnData = Object.keys(data).map(function (key) { return { Key: GetKey('Current', key), Show: ShowPath('Current', key), Color: GetColor(key), Data: data[key] }; });
            setCurrentData(returnData);
        });
        var handle2 = GetWaveformData('Voltage', props.EventID);
        handle2.done(function (data) {
            var returnData = Object.keys(data).map(function (key) { return { Key: GetKey('Voltage', key), Show: ShowPath('Voltage', key), Color: GetColor(key), Data: data[key] }; });
            setVoltageData(returnData);
        });
        return function () {
            if (handle1.abort != undefined)
                handle1.abort();
            if (handle2.abort != undefined)
                handle2.abort();
        };
    }, [props.EventID]);
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        var handle = GetAnalyticData(analytic, props.EventID);
        handle.done(function (data) {
            var returnData = Object.keys(data).map(function (key) { return { Key: GetKey(analytic, key), Show: ShowPath(analytic, key), Color: GetColor(key), Data: data[key] }; });
            setAnaltyicData(returnData);
        });
        return function () {
            if (handle.abort != undefined)
                handle.abort();
        };
    }, [props.EventID, analytic, harmonic]);
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        if (compareEventID == 0) {
            setCompareVoltageData([]);
            setCompareCurrentData([]);
            setCompareAnaltyicData([]);
            return;
        }
        var handle1 = GetWaveformData('Current', compareEventID);
        handle1.done(function (data) {
            var returnData = Object.keys(data).map(function (key) { return { Key: GetKey('Current', key), Show: false, Color: GetCompareColor(key), Data: data[key] }; });
            setCompareCurrentData(returnData);
        });
        var handle2 = GetWaveformData('Voltage', compareEventID);
        handle2.done(function (data) {
            var returnData = Object.keys(data).map(function (key) { return { Key: GetKey('Voltage', key), Show: false, Color: GetCompareColor(key), Data: data[key] }; });
            setCompareVoltageData(returnData);
        });
        return function () {
            if (handle1.abort != undefined)
                handle1.abort();
            if (handle2.abort != undefined)
                handle2.abort();
        };
    }, [compareEventID]);
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        var handle = GetAnalyticData(analytic, compareEventID);
        handle.done(function (data) {
            var returnData = Object.keys(data).map(function (key) { return { Key: GetKey(analytic, key), Show: false, Color: GetCompareColor(key), Data: data[key] }; });
            setCompareAnaltyicData(returnData);
        });
        return function () {
            if (handle.abort != undefined)
                handle.abort();
        };
    }, [compareEventID, analytic, harmonic]);
    function GetWaveformData(type, id) {
        return $.ajax({
            type: "GET",
            url: homePath + "api/OpenXDA/Event/Waveform/" + id + "/" + type + "/" + waveformWidth,
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: true,
            async: true
        });
    }
    function GetAnalyticData(type, id) {
        return $.ajax({
            type: "GET",
            url: homePath + "api/OpenXDA/Event/Analytic/" + type + "/" + id + (type == 'SpecifiedHarmonic' ? '/' + harmonic : '') + "/" + waveformWidth,
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: true,
            async: true
        });
    }
    function HandleReset() {
        setExtents({ X: { Min: null, Max: null }, Y: { Min: null, Max: null } });
    }
    function HandleChartAction(value) {
        if (chartAction == 'Click' && typeof (value) == 'number') {
            setClick(value);
        }
        else if (typeof (value) == 'object')
            setExtents(value);
    }
    function HandleExportCSV() {
        var req = new XMLHttpRequest();
        req.open("GET", homePath + "api/OpenXDA/Event/CSV/" + props.EventID, true);
        req.responseType = "blob";
        req.onload = function (event) {
            var blob = req.response;
            var fileName = req.getResponseHeader("fileName"); //if you have the fileName header available
            var link = document.createElement('a');
            link.href = window.URL.createObjectURL(blob);
            link.download = fileName;
            link.click();
        };
        req.send();
    }
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "row", style: { height: "100%", margin: '5px 5px 5px 5px ' } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "", style: { padding: '0px 2px 0px 0px', width: infoWidth } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, "Info"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 296) / 2 + 25, height: (window.innerHeight - 296) / 2 + 25, overflowY: 'hidden' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Info__WEBPACK_IMPORTED_MODULE_7__["default"], { EventID: props.EventID }))),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, "Browse Events"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 296) / 4 - 75, height: (window.innerHeight - 296) / 4 - 75, overflowY: 'hidden' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_BrowseEvents__WEBPACK_IMPORTED_MODULE_6__["default"], { EventID: props.EventID }))),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, "Compare"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 296) / 4 + 50, height: (window.innerHeight - 296) / 4 + 50, overflowY: 'hidden' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ComparableEvents__WEBPACK_IMPORTED_MODULE_8__["default"], { EventID: props.EventID, ComparableEventID: compareEventID, OnChange: function (id) { return setCompareEventID(id); } })))),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "", style: { padding: '0px 2px 0px 0px', width: waveformWidth } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header", style: { paddingBottom: 9, paddingTop: 9 } },
                    "Waveforms",
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "pull-right" },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "form-check-inline" },
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("label", { className: "form-check-label" },
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("input", { type: "radio", className: "form-check-input", checked: chartAction == 'Click', onChange: function (evt) { return setChartAction('Click'); } }),
                                "Click")),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "form-check-inline" },
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("label", { className: "form-check-label" },
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("input", { type: "radio", className: "form-check-input", checked: chartAction == 'Pan', onChange: function (evt) { return setChartAction('Pan'); } }),
                                "Pan")),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "form-check-inline" },
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("label", { className: "form-check-label" },
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("input", { type: "radio", className: "form-check-input", checked: chartAction == 'ZoomX', onChange: function (evt) { return setChartAction('ZoomX'); } }),
                                "Zoom")),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { onClick: HandleReset }, "Reset"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { onClick: HandleExportCSV }, "Export CSV"))),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: 2 * (window.innerHeight - 246) / 3, height: 2 * (window.innerHeight - 246) / 3, overflowY: 'hidden' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { height: (window.innerHeight - 246) / 3, position: 'relative' } },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend__WEBPACK_IMPORTED_MODULE_2__["default"], { Type: 'Voltage', Paths: voltageData, CompareData: false, GetColor: GetColor, CallBack: function (path) {
                                var newPaths = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.clone(voltageData);
                                var newPath = newPaths.find(function (x) { return x.Key == path.Key; });
                                newPath.Show = !path.Show;
                                setVoltageData(newPaths);
                            } }),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend__WEBPACK_IMPORTED_MODULE_2__["default"], { Type: 'Voltage', Paths: compareVoltageData, CompareData: true, GetColor: GetCompareColor, CallBack: function (path) {
                                var newPaths = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.clone(compareVoltageData);
                                var newPath = newPaths.find(function (x) { return x.Key == path.Key; });
                                newPath.Show = !path.Show;
                                setCompareVoltageData(newPaths);
                            } }),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_WaveformViewerD3Chart__WEBPACK_IMPORTED_MODULE_1__["default"], { EventID: props.EventID, Data: voltageData, CompareData: compareVoltageData, ChartAction: chartAction, Extent: extents, Units: "Volts", DataType: "Time", Height: (window.innerHeight - 246) / 3, Width: waveformWidth - 4, Margin: { Top: 10, Bottom: 30, Left: 50, Right: 1 }, Hover: hover, SetHover: function (value) { return setHover(value); }, Click: click, HandleChartAction: HandleChartAction })),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { height: (window.innerHeight - 246) / 3, position: 'relative' } },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend__WEBPACK_IMPORTED_MODULE_2__["default"], { Type: 'Current', Paths: currentData, CompareData: false, GetColor: GetColor, CallBack: function (path) {
                                var newPaths = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.clone(currentData);
                                var newPath = newPaths.find(function (x) { return x.Key == path.Key; });
                                newPath.Show = !path.Show;
                                setCurrentData(newPaths);
                            } }),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend__WEBPACK_IMPORTED_MODULE_2__["default"], { Type: 'Current', Paths: compareCurrentData, CompareData: true, GetColor: GetCompareColor, CallBack: function (path) {
                                var newPaths = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.clone(compareCurrentData);
                                var newPath = newPaths.find(function (x) { return x.Key == path.Key; });
                                newPath.Show = !path.Show;
                                setCompareCurrentData(newPaths);
                            } }),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_WaveformViewerD3Chart__WEBPACK_IMPORTED_MODULE_1__["default"], { EventID: props.EventID, Data: currentData, CompareData: compareCurrentData, ChartAction: chartAction, Extent: extents, Units: "Amps", DataType: "Time", Height: (window.innerHeight - 246) / 3, Width: waveformWidth - 4, Margin: { Top: 10, Bottom: 30, Left: 50, Right: 1 }, Hover: hover, SetHover: function (value) { return setHover(value); }, Click: click, HandleChartAction: HandleChartAction })))),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("select", { value: analytic, onChange: function (evt) { return setAnalytic(evt.target.value); }, style: { width: 200 } },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "Power" }, "Power"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "Frequency" }, "Frequency"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "RapidVoltageChange" }, "Rapid Voltage Change"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "SpecifiedHarmonic" }, "Specified Harmonic"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "SymmetricalComponents" }, "Symmetrical Components"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "THD" }, "Total Harmonic Distortion"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "Unbalance" }, "Unbalance")),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("select", { value: harmonic, onChange: function (evt) { return setHarmonic(parseInt(evt.target.value)); }, hidden: analytic != 'SpecifiedHarmonic' }, Array.from(Array(40), function (x, i) { return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { key: i, value: i }, i); }))),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 246) / 3, height: (window.innerHeight - 246) / 3, overflowY: 'hidden' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { height: (window.innerHeight - 246) / 3, position: 'relative' } },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend__WEBPACK_IMPORTED_MODULE_2__["default"], { Type: analytic, Paths: analyticData, CompareData: false, GetColor: GetColor, CallBack: function (path) {
                                var newPaths = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.clone(analyticData);
                                var newPath = newPaths.find(function (x) { return x.Key == path.Key; });
                                newPath.Show = !path.Show;
                                setAnaltyicData(newPaths);
                            } }),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend__WEBPACK_IMPORTED_MODULE_2__["default"], { Type: analytic, Paths: compareAnaltyicData, CompareData: true, GetColor: GetCompareColor, CallBack: function (path) {
                                var newPaths = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.clone(compareAnaltyicData);
                                var newPath = newPaths.find(function (x) { return x.Key == path.Key; });
                                newPath.Show = !path.Show;
                                setCompareAnaltyicData(newPaths);
                            } }),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_WaveformViewerD3Chart__WEBPACK_IMPORTED_MODULE_1__["default"], { EventID: props.EventID, Data: analyticData, CompareData: compareAnaltyicData, ChartAction: chartAction, Extent: extents, Units: GetUnits(analytic), DataType: "Time", Height: (window.innerHeight - 246) / 3, Width: waveformWidth - 4, Margin: { Top: 10, Bottom: 30, Left: 50, Right: 1 }, Hover: hover, SetHover: function (value) { return setHover(value); }, Click: click, HandleChartAction: HandleChartAction }))))),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "", style: { padding: '0px 2px 0px 0px', width: pointsWidth } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, click < 0 ? 'Click to get values ...' : 'Values at ' + moment.utc(click).format('MM/DD/YYYY HH:mm:ss.SSSS') + ' (CST)'),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 246) / 2, height: (window.innerHeight - 246) / 2, overflowY: 'auto' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("table", { className: "table" },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tbody", null,
                            voltageData.filter(function (x) { return x.Show; }).map(function (x) {
                                try {
                                    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", { key: x.Key },
                                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, x.Key),
                                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, x.Data[Object(d3__WEBPACK_IMPORTED_MODULE_4__["bisect"])(x.Data.map(function (x) { return x[0]; }), click)][1].toFixed(2)));
                                }
                                catch (_a) {
                                    return null;
                                }
                            }),
                            currentData.filter(function (x) { return x.Show; }).map(function (x) {
                                try {
                                    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", { key: x.Key },
                                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, x.Key),
                                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, x.Data[Object(d3__WEBPACK_IMPORTED_MODULE_4__["bisect"])(x.Data.map(function (x) { return x[0]; }), click)][1].toFixed(2)));
                                }
                                catch (_a) {
                                    return null;
                                }
                            }))))),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, "Phasor"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 246) / 2, height: (window.innerHeight - 246) / 2, overflowY: 'hidden' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_PolarChart__WEBPACK_IMPORTED_MODULE_5__["default"], { Height: (window.innerHeight - 246) / 2, Width: pointsWidth - 5, Time: click, VoltageData: voltageData, CurrentData: currentData }))))));
};
function GetUnits(type) {
    if (type == 'Frequency')
        return 'Hz';
    else if (type == 'Power')
        return 'W/VA/pf/VAR';
    else if (type == 'RapidVoltageChange')
        return 'Volts';
    else if (type == 'SpecifiedHarmonic')
        return 'Volts/Amps/Degrees';
    else if (type == 'SymmetricalComponents')
        return 'Volts/Amps';
    else if (type == 'THD')
        return 'Volts/Amps';
    else if (type == 'Unbalance')
        return '';
    else
        return '';
}
function ShowPath(type, label) {
    if (type == 'Voltage' || type == 'Current' || type == 'RapidVoltageChange') {
        if (label.match(/^[VI][ABC]N$/g) != null)
            return true;
    }
    else if (type == 'Frequency' && label == 'Average')
        return true;
    else if (type == 'Power') {
        if (label.match(/Active Power/g) != null)
            return true;
    }
    else if (type == 'SpecifiedHarmonic') {
        if (label.match(/V[ABC]N Mag/g) != null)
            return true;
    }
    else if (type == 'SymmetricalComponents' && label.indexOf('Voltage') >= 0)
        return true;
    else if (type == 'THD' && label.indexOf('V') >= 0)
        return true;
    else if (type == 'Unbalance' && label.indexOf('Voltage') >= 0)
        return true;
    return false;
}
function GetKey(type, label) {
    var prefix = type == 'Voltage' ? 'V' : 'I';
    if ((type == 'Voltage' || type == 'Current') && label == prefix + "AN")
        return "Wf-" + prefix + "AN";
    if ((type == 'Voltage' || type == 'Current') && label == prefix + "BN")
        return "Wf-" + prefix + "BN";
    if ((type == 'Voltage' || type == 'Current') && label == prefix + "CN")
        return "Wf-" + prefix + "CN";
    if ((type == 'Voltage' || type == 'Current') && label == prefix + "AB")
        return "Wf-" + prefix + "AB";
    if ((type == 'Voltage' || type == 'Current') && label == prefix + "BC")
        return "Wf-" + prefix + "BC";
    if ((type == 'Voltage' || type == 'Current') && label == prefix + "CA")
        return "Wf-" + prefix + "CA";
    if (label == prefix + "NG")
        return "Wf-" + prefix + "NG";
    if (label == prefix + "RES")
        return "Wf-" + prefix + "RES";
    if (label == prefix + "AN RMS")
        return "RMS-" + prefix + "AN";
    if (label == prefix + "BN RMS")
        return "RMS-" + prefix + "BN";
    if (label == prefix + "CN RMS")
        return "RMS-" + prefix + "CN";
    if (label == prefix + "AB RMS")
        return "RMS-" + prefix + "AB";
    if (label == prefix + "BC RMS")
        return "RMS-" + prefix + "BC";
    if (label == prefix + "CA RMS")
        return "RMS-" + prefix + "CA";
    if (label == prefix + "NG RMS")
        return "RMS-" + prefix + "NG";
    if (label == prefix + "RES RMS")
        return "RMS-" + prefix + "RES";
    if (label == prefix + "AN Phase")
        return "Ph-" + prefix + "AN";
    if (label == prefix + "BN Phase")
        return "Ph-" + prefix + "BN";
    if (label == prefix + "CN Phase")
        return "Ph-" + prefix + "CN";
    if (label == prefix + "AB Phase")
        return "Ph-" + prefix + "AB";
    if (label == prefix + "BC Phase")
        return "Ph-" + prefix + "BC";
    if (label == prefix + "CA Phase")
        return "Ph-" + prefix + "CA";
    if (label == prefix + "NG Phase")
        return "Ph-" + prefix + "NG";
    if (label == prefix + "RES Phase")
        return "Ph-" + prefix + "RES";
    if (label == prefix + "AN Amplitude")
        return "Amp-" + prefix + "AN";
    if (label == prefix + "BN Amplitude")
        return "Amp-" + prefix + "BN";
    if (label == prefix + "CN Amplitude")
        return "Amp-" + prefix + "CN";
    if (label == prefix + "AB Amplitude")
        return "Amp-" + prefix + "AB";
    if (label == prefix + "BC Amplitude")
        return "Amp-" + prefix + "BC";
    if (label == prefix + "CA Amplitude")
        return "Amp-" + prefix + "CA";
    if (label == prefix + "NG Amplitude")
        return "Amp-" + prefix + "NG";
    if (label == prefix + "RES Amplitude")
        return "Amp-" + prefix + "RES";
    if (label == "AN Active Power")
        return "AN-W";
    if (label == "BN Active Power")
        return "BN-W";
    if (label == "CN Active Power")
        return "CN-W";
    if (label == "Total Active Power")
        return "Total-W";
    if (label == "AN Apparent Power")
        return "AN-VA";
    if (label == "BN Apparent Power")
        return "BN-VA";
    if (label == "CN Apparent Power")
        return "CN-VA";
    if (label == "Total Apparent Power")
        return "Total-VA";
    if (label == "AN Reactive Power")
        return "AN-VAR";
    if (label == "BN Reactive Power")
        return "BN-VAR";
    if (label == "CN Reactive Power")
        return "CN-VAR";
    if (label == "Total Reactive Power")
        return "Total-VAR";
    if (label == "AN Power Factor")
        return "AN-PF";
    if (label == "BN Power Factor")
        return "BN-PF";
    if (label == "CN Power Factor")
        return "CN-PF";
    if (label == "Total Power Factor")
        return "Total-PF";
    else
        return label;
}
function GetColor(label) {
    if (label.indexOf('VA') >= 0)
        return '#A30000';
    if (label.indexOf('VB') >= 0)
        return '#0029A3';
    if (label.indexOf('VC') >= 0)
        return '#007A29';
    if (label.indexOf('VN') >= 0)
        return '#c3c3c3';
    if (label.indexOf('IA') >= 0)
        return '#FF0000';
    if (label.indexOf('IB') >= 0)
        return '#0066CC';
    if (label.indexOf('IC') >= 0)
        return '#33CC33';
    if (label.indexOf('AN') >= 0)
        return '#FF0000';
    if (label.indexOf('BN') >= 0)
        return '#0066CC';
    if (label.indexOf('CN') >= 0)
        return '#33CC33';
    if (label.indexOf('NG') >= 0)
        return '#c3c3c3';
    if (label.indexOf('RES') >= 0)
        return '#ffc107';
    if (label.indexOf('Average') >= 0)
        return '#9A52A4';
    if (label.indexOf('Total') >= 0)
        return '#9A52A4';
    if (label.indexOf('S0') >= 0)
        return '#A30000';
    if (label.indexOf('S2') >= 0)
        return '#007A29';
    if (label.indexOf('S1') >= 0)
        return '#0029A3';
    else {
        var ranNumOne = Math.floor(Math.random() * 256).toString(16);
        var ranNumTwo = Math.floor(Math.random() * 256).toString(16);
        var ranNumThree = Math.floor(Math.random() * 256).toString(16);
        return "#" + (ranNumOne.length > 1 ? ranNumOne : "0" + ranNumOne) + (ranNumTwo.length > 1 ? ranNumTwo : "0" + ranNumTwo) + (ranNumThree.length > 1 ? ranNumThree : "0" + ranNumThree);
    }
}
function GetCompareColor(label) {
    if (label.indexOf('VA') >= 0)
        return '#E3A909';
    if (label.indexOf('VB') >= 0)
        return '#9800A3';
    if (label.indexOf('VC') >= 0)
        return '#707A00';
    if (label.indexOf('VN') >= 0)
        return '#c3c3c3';
    if (label.indexOf('IA') >= 0)
        return '#FF8000';
    if (label.indexOf('IB') >= 0)
        return '#CF12E0';
    if (label.indexOf('IC') >= 0)
        return '#FFFF00';
    if (label.indexOf('AN') >= 0)
        return '#FF8000';
    if (label.indexOf('BN') >= 0)
        return '#CF12E0';
    if (label.indexOf('CN') >= 0)
        return '#FFFF00';
    if (label.indexOf('NG') >= 0)
        return '#636161';
    if (label.indexOf('RES') >= 0)
        return '#07FFFF';
    if (label.indexOf('Average') >= 0)
        return '#A45289';
    if (label.indexOf('Total') >= 0)
        return '#A45289';
    if (label.indexOf('S0') >= 0)
        return '#E3A909';
    if (label.indexOf('S1') >= 0)
        return '#9800A3';
    if (label.indexOf('S2') >= 0)
        return '#707A00';
    else {
        var ranNumOne = Math.floor(Math.random() * 256).toString(16);
        var ranNumTwo = Math.floor(Math.random() * 256).toString(16);
        var ranNumThree = Math.floor(Math.random() * 256).toString(16);
        return "#" + (ranNumOne.length > 1 ? ranNumOne : "0" + ranNumOne) + (ranNumTwo.length > 1 ? ranNumTwo : "0" + ranNumTwo) + (ranNumThree.length > 1 ? ranNumThree : "0" + ranNumThree);
    }
}
/* harmony default export */ __webpack_exports__["default"] = (WaveformViewer);


/***/ }),

/***/ "./tsx/WaveformViewer/WaveformViewerD3Chart.tsx":
/*!******************************************************!*\
  !*** ./tsx/WaveformViewer/WaveformViewerD3Chart.tsx ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3 */ "d3");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(d3__WEBPACK_IMPORTED_MODULE_1__);
//******************************************************************************************************
//  EventSearchPreviewD3Chart.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  02/20/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};


var WaveformViewerD3Chart = function (props) {
    var chart = react__WEBPACK_IMPORTED_MODULE_0___default.a.useRef(null);
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(null), 2), xStart = _a[0], setXStart = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(null), 2), xEnd = _b[0], setXEnd = _b[1];
    function OnHover(evt) {
        evt.preventDefault();
        props.SetHover(evt.nativeEvent.offsetX);
    }
    function HandleChartAction(evt) {
        evt.preventDefault();
        if (props.ChartAction == 'Click')
            props.HandleChartAction(x.invert(evt.nativeEvent.offsetX));
        else if (props.ChartAction == 'Pan')
            OnPan(evt);
        else if (props.ChartAction == 'ZoomX')
            OnZoom(evt);
    }
    function OnPan(evt) {
        evt.persist();
        $(chart.current).on('mousemove', function (e) {
            props.HandleChartAction({
                X: {
                    Min: x.invert(x.range()[0] + evt.clientX - e.clientX),
                    Max: x.invert(x.range()[1] + evt.clientX - e.clientX)
                }, Y: props.Extent.Y
            });
        });
    }
    function StopDrag(evt) {
        evt.preventDefault();
        $(chart.current).off('mousemove');
        if (props.ChartAction == "ZoomX") {
            props.HandleChartAction({
                X: {
                    Min: Math.min(x.invert(xStart), x.invert(xEnd)),
                    Max: Math.max(x.invert(xStart), x.invert(xEnd))
                }, Y: props.Extent.Y
            });
            setXStart(null);
            setXEnd(null);
        }
    }
    function OnZoom(evt) {
        evt.persist();
        setXStart(evt.nativeEvent.offsetX);
        $(chart.current).on('mousemove', function (e) {
            setXEnd(e.offsetX);
        });
    }
    var x = Object(d3__WEBPACK_IMPORTED_MODULE_1__["scaleLinear"])().rangeRound([props.Margin.Left, props.Width - props.Margin.Right]);
    var y = Object(d3__WEBPACK_IMPORTED_MODULE_1__["scaleLinear"])().rangeRound([props.Height - props.Margin.Bottom, props.Margin.Top]);
    var yextent = [1000000, -1000000];
    var xextent = [0, 1];
    if (props.Data.length > 0)
        xextent = [props.Data[0].Data[0][0], props.Data[0].Data[props.Data[0].Data.length - 1][0]];
    if (props.Extent.X.Min != null)
        xextent = [props.Extent.X.Min, xextent[1]];
    if (props.Extent.X.Max != null)
        xextent = [xextent[0], props.Extent.X.Max];
    $.each(props.Data.filter(function (x) { return x.Show; }), function (index, value) {
        var newyexent = Object(d3__WEBPACK_IMPORTED_MODULE_1__["extent"])(value.Data.filter(function (y) { return y[0] >= xextent[0] && y[0] <= xextent[1]; }), function (d) { return d[1]; });
        if (newyexent[0] != undefined && parseFloat(newyexent[0].toString()) < yextent[0])
            yextent[0] = parseFloat(newyexent[0].toString());
        if (newyexent[1] != undefined && parseFloat(newyexent[1].toString()) > yextent[1])
            yextent[1] = parseFloat(newyexent[1].toString());
    });
    $.each(props.CompareData.filter(function (x) { return x.Show; }), function (index, value) {
        var newyexent = Object(d3__WEBPACK_IMPORTED_MODULE_1__["extent"])(value.Data.filter(function (y) { return y[0] >= xextent[0] && y[0] <= xextent[1]; }), function (d) { return d[1]; });
        if (newyexent[0] != undefined && parseFloat(newyexent[0].toString()) < yextent[0])
            yextent[0] = parseFloat(newyexent[0].toString());
        if (newyexent[1] != undefined && parseFloat(newyexent[1].toString()) > yextent[1])
            yextent[1] = parseFloat(newyexent[1].toString());
    });
    var yspan = yextent[1] - yextent[0];
    yextent = [yextent[0] - yspan / 10, yextent[1] + yspan / 10];
    y.domain(yextent);
    x.domain(xextent);
    var linefunc = Object(d3__WEBPACK_IMPORTED_MODULE_1__["line"])().x(function (d) { return x(d[0]); }).y(function (d) { return y(d[1]); });
    var newPaths = [];
    $.each(props.Data.filter(function (x) { return x.Show; }), function (index, value) {
        newPaths.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { key: value.Key, fill: 'none', strokeLinejoin: 'round', strokeWidth: '1.5', stroke: value.Color, d: linefunc(value.Data.filter(function (d) { return d[0] >= x.domain()[0] && d[0] <= x.domain()[1]; })) }));
    });
    var comparePaths = [];
    $.each(props.CompareData.filter(function (x) { return x.Show; }), function (index, value) {
        comparePaths.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { key: value.Key, fill: 'none', strokeLinejoin: 'round', strokeWidth: '1.5', stroke: value.Color, d: linefunc(value.Data.filter(function (d) { return d[0] >= x.domain()[0] && d[0] <= x.domain()[1]; })) }));
    });
    var xTicks = [];
    var span = x.domain()[1] - x.domain()[0];
    for (var i = x.domain()[0]; i < x.domain()[1]; i += span / 7) {
        xTicks.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g", { key: i, className: "tick", transform: "translate(" + x(i) + "," + (props.Height - props.Margin.Bottom) + ")", style: { opacity: i < x.domain()[0] || i > x.domain()[1] ? 0 : 1 } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: "M 0,6 V -6", style: { stroke: 'black' }, strokeWidth: 0.5 }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("text", { fill: "black", fontSize: "small", y: "20", textAnchor: 'middle' }, moment('1970-01-01T00:00:00').add(i, 'milliseconds').format(props.DataType == 'Time' ? 'ss.SSS' : 'HH:ss'))));
    }
    var yTicks = [];
    var ySpan = (y.domain()[0] < 0 ? y.domain()[1] : y.domain()[1] - y.domain()[0]);
    var yMin = (y.domain()[0] < 0 ? 0 : y.domain()[0]);
    var divisor = 1;
    if (ySpan > 1000000)
        divisor = 1000000;
    if (ySpan > 1000)
        divisor = 1000;
    for (var i = yMin; i < y.domain()[1]; i += ySpan / (y.domain()[0] < 0 ? 3 : 6)) {
        yTicks.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g", { key: i },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g", { key: i + 'pos', className: "tick", transform: "translate(" + props.Margin.Left + "," + y(i) + ")", style: { opacity: i < y.domain()[0] || i > y.domain()[1] ? 0 : 1 } },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: "M 6, 0 H -6", style: { stroke: 'black' }, strokeWidth: 0.5 }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("text", { fill: "black", fontSize: "small", x: "-15", dy: "0.32em", textAnchor: 'middle' }, (i / divisor).toFixed(0) + (divisor == 1000 ? 'k' : '') + (divisor == 1000000 ? 'M' : ''))),
            (y.domain()[0] < 0 && i != 0 ?
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g", { key: i + 'neg', className: "tick", transform: "translate(" + props.Margin.Left + "," + y(-i) + ")", style: { opacity: i < y.domain()[0] || i > y.domain()[1] ? 0 : 1 } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: "M 6, 0 H -6", style: { stroke: 'black' }, strokeWidth: 0.5 }),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("text", { fill: "black", fontSize: "small", x: "-15", dy: "0.32em", textAnchor: 'middle' }, -(i / divisor).toFixed(0) + (divisor == 1000 ? 'k' : '') + (divisor == 1000000 ? 'M' : ''))) : null)));
    }
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg", { ref: chart, width: props.Width, height: props.Height, onMouseOver: OnHover, onMouseDown: HandleChartAction, onMouseUp: StopDrag, style: { fill: 'none' } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { stroke: 'black', strokeWidth: '0.5px', d: "M " + props.Margin.Left + " " + props.Margin.Top + " H " + (props.Width - props.Margin.Right) + " V " + (props.Height - props.Margin.Bottom) + " H " + props.Margin.Left + " V " + props.Margin.Top, style: { shapeRendering: 'crispEdges' } }),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("text", { fill: "black", fontSize: "small", transform: "rotate(-90 0,0)", y: 15, x: -(props.Height + 35) / 2 }, props.Units),
        newPaths,
        comparePaths,
        xTicks,
        yTicks,
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { stroke: 'black', d: "M " + props.Hover + "," + props.Margin.Top + " V " + (props.Height - props.Margin.Bottom), style: { stroke: 'black', opacity: props.Hover < props.Margin.Left ? 0 : 1 }, strokeWidth: 0.5 }),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { stroke: 'black', d: "M " + x(props.Click) + "," + props.Margin.Top + " V " + (props.Height - props.Margin.Bottom), style: { stroke: 'red', opacity: x(props.Click) < props.Margin.Left ? 0 : 1 }, strokeWidth: 1 }),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("text", { fill: "black", fontSize: "small", x: props.Width / 2, y: props.Height - 5 }, "Time"),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("rect", { stroke: 'black', x: Math.min(xStart, xEnd), y: props.Margin.Top, width: Math.abs(xEnd - xStart), height: props.Height - props.Margin.Top - props.Margin.Bottom, style: { stroke: 'grey', fill: 'grey', opacity: 0.5 } })));
};
/* harmony default export */ __webpack_exports__["default"] = (WaveformViewerD3Chart);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90c3gvV2F2ZWZvcm1WaWV3ZXIvQnJvd3NlRXZlbnRzLnRzeCIsIndlYnBhY2s6Ly8vLi90c3gvV2F2ZWZvcm1WaWV3ZXIvQ29tcGFyYWJsZUV2ZW50cy50c3giLCJ3ZWJwYWNrOi8vLy4vdHN4L1dhdmVmb3JtVmlld2VyL0luZm8udHN4Iiwid2VicGFjazovLy8uL3RzeC9XYXZlZm9ybVZpZXdlci9MZWdlbmQudHN4Iiwid2VicGFjazovLy8uL3RzeC9XYXZlZm9ybVZpZXdlci9Qb2xhckNoYXJ0LnRzeCIsIndlYnBhY2s6Ly8vLi90c3gvV2F2ZWZvcm1WaWV3ZXIvV2F2ZWZvcm1WaWV3ZXIudHN4Iiwid2VicGFjazovLy8uL3RzeC9XYXZlZm9ybVZpZXdlci9XYXZlZm9ybVZpZXdlckQzQ2hhcnQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQSx3R0FBd0c7QUFDeEcsMkJBQTJCO0FBQzNCLEVBQUU7QUFDRixxRUFBcUU7QUFDckUsRUFBRTtBQUNGLHdHQUF3RztBQUN4Ryx3R0FBd0c7QUFDeEcsc0dBQXNHO0FBQ3RHLHdGQUF3RjtBQUN4RixFQUFFO0FBQ0YsMENBQTBDO0FBQzFDLEVBQUU7QUFDRix3R0FBd0c7QUFDeEcsd0dBQXdHO0FBQ3hHLDRFQUE0RTtBQUM1RSxFQUFFO0FBQ0YsOEJBQThCO0FBQzlCLHdHQUF3RztBQUN4Ryw2QkFBNkI7QUFDN0IsbURBQW1EO0FBQ25ELEVBQUU7QUFDRix3R0FBd0c7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRTlFO0FBRTFCLElBQU0sWUFBWSxHQUFHLFVBQUMsS0FBMEI7SUFDdEMsZ0ZBQThDLEVBQTdDLFdBQUcsRUFBRSxjQUF3QyxDQUFDO0lBQy9DLCtFQUFrRCxFQUFqRCxjQUFNLEVBQUUsaUJBQXlDLENBQUM7SUFDbkQsK0VBQWtELEVBQWpELGNBQU0sRUFBRSxpQkFBeUMsQ0FBQztJQUV6RCw0Q0FBSyxDQUFDLFNBQVMsQ0FBQztR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QUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxXQUFXLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxXQUFXLEdBQUcsR0FBRyxFQUFFLE1BQU0sRUFBQyxXQUFXLEVBQUMsV0FBVyxFQUFDLEdBQUcsRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLFdBQVcsRUFBQyxHQUFHLEdBQUc7Z0JBQzFJLHVFQUFRLEVBQUUsRUFBRSxLQUFLLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxFQUFFLEVBQUUsV0FBVyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsV0FBVyxHQUFHLElBQUksRUFBRSxNQUFNLEVBQUMsV0FBVyxFQUFDLFdBQVcsRUFBQyxHQUFHLEVBQUMsSUFBSSxFQUFDLE9BQU8sRUFBQyxXQUFXLEVBQUMsR0FBRyxHQUFHO2dCQUMzSSxxRUFBTSxFQUFFLEVBQUUsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFDLEdBQUcsRUFBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxDQUFDLEVBQUUsR0FBSTtnQkFDMUgscUVBQU0sRUFBRSxFQUFFLEtBQUssQ0FBQyxLQUFLLEdBQUcsQ0FBQyxHQUFHLFdBQVcsR0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLFdBQVcsR0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxLQUFLLEdBQUcsQ0FBQyxHQUFHLFdBQVcsR0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLFdBQVcsR0FBRyxDQUFDLEVBQUUsS0FBSyxFQUFFLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsQ0FBQyxFQUFFLEdBQUk7Z0JBTS9LLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxFQUFsQixDQUFrQixDQUFDLElBQUksU0FBUyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksUUFBUSxFQUFqQixDQUFpQixDQUFDLElBQUksU0FBUyxDQUFDLENBQUM7b0JBQ2xHLHFFQUFNLENBQUMsRUFBRSxhQUFhLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsV0FBVyxHQUFHLENBQUMsRUFBRSxXQUFXLEdBQUcsQ0FBQyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxFQUFsQixDQUFrQixDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQUMsSUFBSSxRQUFDLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQUMsSUFBSSxRQUFDLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsQ0FBQyxFQUFFLEdBQUk7b0JBRXJQLENBQUMsQ0FBQyxJQUFJO2dCQUNULEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxFQUFsQixDQUFrQixDQUFDLElBQUksU0FBUyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksUUFBUSxFQUFqQixDQUFpQixDQUFDLElBQUksU0FBUyxDQUFDLENBQUM7b0JBQ2xHLHFFQUFNLENBQUMsRUFBRSxhQUFhLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsV0FBVyxHQUFHLENBQUMsRUFBRSxXQUFXLEdBQUcsQ0FBQyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxFQUFsQixDQUFrQixDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQUMsSUFBSSxRQUFDLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQUMsSUFBSSxRQUFDLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsQ0FBQyxFQUFFLEdBQUk7b0JBRXJQLENBQUMsQ0FBQyxJQUFJO2dCQUNULEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxFQUFsQixDQUFrQixDQUFDLElBQUksU0FBUyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksUUFBUSxFQUFqQixDQUFpQixDQUFDLElBQUksU0FBUyxDQUFDLENBQUM7b0JBQ2xHLHFFQUFNLENBQUMsRUFBRSxhQUFhLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsV0FBVyxHQUFHLENBQUMsRUFBRSxXQUFXLEdBQUcsQ0FBQyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxFQUFsQixDQUFrQixDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQUMsSUFBSSxRQUFDLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQUMsSUFBSSxRQUFDLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsQ0FBQyxFQUFFLEdBQUk7b0JBRXJQLENBQUMsQ0FBQyxJQUFJO2dCQUNULEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxFQUFsQixDQUFrQixDQUFDLElBQUksU0FBUyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksUUFBUSxFQUFqQixDQUFpQixDQUFDLElBQUksU0FBUyxDQUFDLENBQUM7b0JBQ2xHLHFFQUFNLENBQUMsRUFBRSxhQUFhLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsV0FBVyxHQUFHLENBQUMsRUFBRSxXQUFXLEdBQUcsQ0FBQyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxFQUFsQixDQUFrQixDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQUMsSUFBSSxRQUFDLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQUMsSUFBSSxRQUFDLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsQ0FBQyxFQUFFLEdBQUk7b0JBRXJQLENBQUMsQ0FBQyxJQUFJO2dCQUNULEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxFQUFsQixDQUFrQixDQUFDLElBQUksU0FBUyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksUUFBUSxFQUFqQixDQUFpQixDQUFDLElBQUksU0FBUyxDQUFDLENBQUM7b0JBQ2xHLHFFQUFNLENBQUMsRUFBRSxhQUFhLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsV0FBVyxHQUFHLENBQUMsRUFBRSxXQUFXLEdBQUcsQ0FBQyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxFQUFsQixDQUFrQixDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQUMsSUFBSSxRQUFDLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQUMsSUFBSSxRQUFDLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsQ0FBQyxFQUFFLEdBQUk7b0JBRXJQLENBQUMsQ0FBQyxJQUFJO2dCQUNULEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxFQUFsQixDQUFrQixDQUFDLElBQUksU0FBUyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksUUFBUSxFQUFqQixDQUFpQixDQUFDLElBQUksU0FBUyxDQUFDLENBQUM7b0JBQ2xHLHFFQUFNLENBQUMsRUFBRSxhQUFhLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsV0FBVyxHQUFHLENBQUMsRUFBRSxXQUFXLEdBQUcsQ0FBQyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxHQUFHLElBQUksU0FBUyxFQUFsQixDQUFrQixDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQUMsSUFBSSxRQUFDLENBQUMsR0FBRyxJQUFJLFFBQVEsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFD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QU0sT0FBSTtRQUFFLE9BQU8sUUFBTSxNQUFNLE9BQUksQ0FBQztJQUNqRyxJQUFJLENBQUMsSUFBSSxJQUFJLFNBQVMsSUFBSSxJQUFJLElBQUksU0FBUyxDQUFFLElBQUksS0FBSyxJQUFPLE1BQU0sT0FBSTtRQUFFLE9BQU8sUUFBTSxNQUFNLE9BQUksQ0FBQztJQUNqRyxJQUFJLENBQUMsSUFBSSxJQUFJLFNBQVMsSUFBSSxJQUFJLElBQUksU0FBUyxDQUFFLElBQUksS0FBSyxJQUFPLE1BQU0sT0FBSTtRQUFFLE9BQU8sUUFBTSxNQUFNLE9BQUksQ0FBQztJQUNqRyxJQUFJLENBQUMsSUFBSSxJQUFJLFNBQVMsSUFBSSxJQUFJLElBQUksU0FBUyxDQUFFLElBQUksS0FBSyxJQUFPLE1BQU0sT0FBSTtRQUFFLE9BQU8sUUFBTSxNQUFNLE9BQUksQ0FBQztJQUNqRyxJQUFJLENBQUMsSUFBSSxJQUFJLFNBQVMsSUFBSSxJQUFJLElBQUksU0FBUyxDQUFFLElBQUksS0FBSyxJQUFPLE1BQU0sT0FBSTtRQUFFLE9BQU8sUUFBTSxNQUFNLE9BQUksQ0FBQztJQUNqRyxJQUFJLENBQUMsSUFBSSxJQUFJLFNBQVMsSUFBSSxJQUFJLElBQUksU0FBUyxDQUFFLElBQUksS0FBSyxJQUFPLE1BQU0sT0FBSTtRQUFFLE9BQU8sUUFBTSxNQUFNLE9BQUksQ0FBQztJQUNqRyxJQUFJLEtBQUssSUFBTyxNQUFNLE9BQUk7UUFBRSxPQUFPLFFBQU0sTUFBTSxPQUFJLENBQUM7SUFDcEQsSUFBSSxLQUFLLElBQU8sTUFBTSxRQUFLO1FBQUUsT0FBTyxRQUFNLE1BQU0sUUFBSyxDQUFDO0lBQ3RELElBQUksS0FBSyxJQUFPLE1BQU0sV0FBUTtRQUFFLE9BQU8sU0FBTyxNQUFNLE9BQUksQ0FBQztJQUN6RCxJQUFJLEtBQUssSUFBTyxNQUFNLFdBQVE7UUFBRSxPQUFPLFNBQU8sTUFBTSxPQUFJLENBQUM7SUFDekQsSUFBSSxLQUFLLElBQU8sTUFBTSxXQUFRO1FBQUUsT0FBTyxTQUFPLE1BQU0sT0FBSSxDQUFDO0lB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QyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUFFLE9BQU8sU0FBUyxDQUFDO0lBQy9DLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQUUsT0FBTyxTQUFTLENBQUM7SUFDL0MsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7UUFBRSxPQUFPLFNBQVMsQ0FBQztJQUMvQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUFFLE9BQU8sU0FBUyxDQUFDO0lBQ2hELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO1FBQUUsT0FBTyxTQUFTLENBQUM7SUFDcEQsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7UUFBRSxPQUFPLFNBQVMsQ0FBQztJQUNsRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUFFLE9BQU8sU0FBUyxDQUFDO0lBQy9DLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQUUsT0FBTyxTQUFTLENBQUM7SUFDL0MsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7UUFBRSxPQUFPLFNBQVMsQ0FBQztTQUUxQztRQUNELElBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUM3RCxJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDN0QsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRS9ELE9BQU8sTUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxXQUFXLENBQUcsQ0FBQztLQUN6TDtBQUNMLENBQUM7QUFFRCxTQUFTLGVBQWUsQ0FBQyxLQUFLO0lBQzFCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQUUsT0FBTyxTQUFTLENBQUM7SUFDL0MsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7UUFBRSxPQUFPLFNBQVMsQ0FBQztJQUMvQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUFFLE9BQU8sU0FBUyxDQUFDO0lBQy9DLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQUUsT0FBTyxTQUFTLENBQUM7SUFDL0MsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7UUFBRSxPQUFPLFNBQVMsQ0FBQztJQUMvQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUFFLE9BQU8sU0FBUyxDQUFDO0lBQy9DLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQUUsT0FBTyxTQUFTLENBQUM7SUFDL0MsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7UUFBRSxPQUFPLFNBQVMsQ0FBQztJQUMvQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUFFLE9BQU8sU0FBUyxDQUFDO0lBQy9DLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQUUsT0FBTyxTQUFTLENBQUM7SUFDL0MsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7UUFBRSxPQUFPLFNBQVMsQ0FBQztJQUMvQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUFFLE9BQU8sU0FBUyxDQUFDO0lBQ2hELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO1FBQUUsT0FBTyxTQUFTLENBQUM7SUFDcEQsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7UUFBRSxPQUFPLFNBQVMsQ0FBQztJQUNsRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUFFLE9BQU8sU0FBUyxDQUFDO0lBQy9DLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQUUsT0FBTyxTQUFTLENBQUM7SUFDL0MsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7UUFBRSxPQUFPLFNBQVMsQ0FBQztTQUUxQztRQUNELElBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUM3RCxJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDN0Qs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Q0FBQyxVQUFVLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUN4RixJQUFJLENBQUMsR0FBRyxzREFBVyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFekYsSUFBSSxPQUFPLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNsQyxJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUVyQixJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUM7UUFDckIsT0FBTyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFL0YsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksSUFBSTtRQUMxQixPQUFPLEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFL0MsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksSUFBSTtRQUMxQixPQUFPLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFHL0MsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFDLElBQUksUUFBQyxDQUFDLElBQUksRUFBTixDQUFNLENBQUMsRUFBRSxVQUFDLEtBQUssRUFBRSxLQUFLO1FBQ2hELElBQUksU0FBUyxHQUFHLGlEQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBQyxJQUFJLFFBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBeEMsQ0FBd0MsQ0FBQyxFQUFFLFdBQUMsSUFBSSxRQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUosQ0FBSSxDQUFDLENBQUM7UUFFcEcsSUFBSSxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksU0FBUyxJQUFJLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbkksSUFBSSxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksU0FBUyxJQUFJLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDdkksQ0FBQyxDQUFDLENBQUM7SUFFSCxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLFdBQUMsSUFBSSxRQUFDLENBQUMsSUFBSSxFQUFOLENB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QUMsT0FBTyxFQUFDLENBQUMsRUFBRSxPQUFLLEtBQUssQ0FBQyxLQUFLLFNBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLFlBQU0sS0FBSyxDQUFDLE1BQU0sR0FBRSxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBRSxFQUFFLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxXQUFXLEVBQUUsR0FBRyxHQUFTO1FBQzVNLHFFQUFNLE1BQU0sRUFBQyxPQUFPLEVBQUMsQ0FBQyxFQUFFLE9BQUssQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsU0FBSSxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsWUFBTSxLQUFLLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxXQUFXLEVBQUUsQ0FBQyxHQUFTO1FBRWpOLHFFQUFNLElBQUksRUFBQyxPQUFPLEVBQUMsUUFBUSxFQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxXQUFhO1FBRXhGLHFFQUFNLE1BQU0sRUFBQyxPQUFPLEVBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsR0FBUyxDQUNoTyxDQUNiLENBQUM7QUFDTixDQUFDO0FBRWMsb0ZBQXFCLEVBQUMiLCJmaWxlIjoiV2F2ZWZvcm1WaWV3ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4vLyAgQnJvd3NlRXZlbnRzLnRzeCAtIEdidGNcclxuLy9cclxuLy8gIENvcHlyaWdodCDCqSAyMDIwLCBHcmlkIFByb3RlY3Rpb24gQWxsaWFuY2UuICBBbGwgUmlnaHRzIFJlc2VydmVkLlxyXG4vL1xyXG4vLyAgTGljZW5zZWQgdG8gdGhlIEdyaWQgUHJvdGVjdGlvbiBBbGxpYW5jZSAoR1BBKSB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIFNlZVxyXG4vLyAgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLlxyXG4vLyAgVGhlIEdQQSBsaWNlbnNlcyB0aGlzIGZpbGUgdG8geW91IHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoTUlUKSwgdGhlIFwiTGljZW5zZVwiOyB5b3UgbWF5IG5vdCB1c2UgdGhpc1xyXG4vLyAgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQ6XHJcbi8vXHJcbi8vICAgICAgaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVFxyXG4vL1xyXG4vLyAgVW5sZXNzIGFncmVlZCB0byBpbiB3cml0aW5nLCB0aGUgc3ViamVjdCBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxyXG4vLyAgXCJBUy1JU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gUmVmZXIgdG8gdGhlXHJcbi8vICBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucy5cclxuLy9cclxuLy8gIENvZGUgTW9kaWZpY2F0aW9uIEhpc3Rvcnk6XHJcbi8vICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vICAwOC8xMS8yMDIwIC0gQmlsbHkgRXJuZXN0XHJcbi8vICAgICAgIEdlbmVyYXRlZCBvcmlnaW5hbCB2ZXJzaW9uIG9mIHNvdXJjZSBjb2RlLlxyXG4vL1xyXG4vLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmNvbnN0IEJyb3dzZUV2ZW50cyA9IChwcm9wczogeyBFdmVudElEOiBudW1iZXIgfSkgPT4ge1xyXG4gICAgY29uc3QgW2FsbCwgc2V0QWxsXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtuZXh0SUQsIHNldE5leHRJRF0gPSBSZWFjdC51c2VTdGF0ZTxudW1iZXI+KG51bGwpO1xyXG4gICAgY29uc3QgW2JhY2tJRCwgc2V0QmFja0lEXSA9IFJlYWN0LnVzZVN0YXRlPG51bWJlcj4obnVsbCk7XHJcblxyXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBsZXQgaGFuZGxlMSA9IEdldEV2ZW50SUQoZmFsc2UsIGFsbCk7XHJcbiAgICAgICAgbGV0IGhhbmRsZTIgPSBHZXRFdmVudElEKHRydWUsIGFsbCk7XHJcbiAgICAgICAgaGFuZGxlMS5kb25lKG5leHQgPT4gc2V0TmV4dElEKG5leHQgPT0gdW5kZWZpbmVkIHx8IG5leHQubGVuZ3RoID09IDAgPyBudWxsIDogbmV4dFswXVsnSUQnXSkpO1xyXG4gICAgICAgIGhhbmRsZTIuZG9uZShiYWNrID0+IHNldEJhY2tJRChiYWNrID09IHVuZGVmaW5lZCB8fCBiYWNrLmxlbmd0aCA9PSAwID8gbnVsbCA6IGJhY2tbMF1bJ0lEJ10pKTtcclxuXHJcbiAgICAgICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgICAgICAgaWYgKGhhbmRsZTEuYWJvcnQgIT0gdW5kZWZpbmVkKSBoYW5kbGUxLmFib3J0KCk7XHJcbiAgICAgICAgICAgIGlmIChoYW5kbGUyLmFib3J0ICE9IHVuZGVmaW5lZCkgaGFuZGxlMi5hYm9ydCgpO1xyXG4gICAgICAgIH1cclxuICAgIH0sIFtwcm9wcy5FdmVudElELCBhbGxdKTtcclxuXHJcbiAgICBmdW5jdGlvbiBHZXRFdmVudElEKG46IGJvb2xlYW4sIGE6IGJvb2xlYW4gKTogSlF1ZXJ5LmpxWEhSPG9iamVjdFtdPiB7XHJcbiAgICAgICAgcmV0dXJuICQuYWpheCh7XHJcbiAgICAgICAgICAgIHR5cGU6IFwiR0VUXCIsXHJcbiAgICAgICAgICAgIHVybDogYCR7aG9tZVBhdGh9YXBpL09wZW5YREEvRXZlbnQvJHtuID8gJ05leHQnOiAnUHJldmlvdXMnfUV2ZW50LyR7YT8gJ0FsbE1ldGVycyc6J01ldGVyJ30vJHtwcm9wcy5FdmVudElEfWAsXHJcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcIixcclxuICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcclxuICAgICAgICAgICAgY2FjaGU6IHRydWUsXHJcbiAgICAgICAgICAgIGFzeW5jOiB0cnVlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWNoZWNrXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImZvcm0tY2hlY2stbGFiZWxcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIHN0eWxlPXt7bWFyZ2luTGVmdDogLTE1fX0gY2xhc3NOYW1lPVwiZm9ybS1jaGVjay1pbnB1dFwiIGNoZWNrZWQ9e2FsbH0gb25DaGFuZ2U9eygpID0+IHNldEFsbCghYWxsKX0vPkFsbCBNZXRlcnNcclxuICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInRhYmxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PGEgaHJlZj17YmFja0lEID09IG51bGwgPyBudWxsIDogYCR7aG9tZVBhdGh9V2F2ZWZvcm1WaWV3ZXI/RXZlbnRJRD0ke2JhY2tJRH1gfT5QcmV2aW91czwvYT48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxhIGhyZWY9e25leHRJRCA9PSBudWxsID8gbnVsbCA6IGAke2hvbWVQYXRofVdhdmVmb3JtVmlld2VyP0V2ZW50SUQ9JHtuZXh0SUR9YH0+TmV4dDwvYT48L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG4gICAgY2F0Y2gge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEJyb3dzZUV2ZW50czsiLCIvLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4vLyAgQ29tcGFyYWJsZUV2ZW50cy50c3ggLSBHYnRjXHJcbi8vXHJcbi8vICBDb3B5cmlnaHQgwqkgMjAyMCwgR3JpZCBQcm90ZWN0aW9uIEFsbGlhbmNlLiAgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuLy9cclxuLy8gIExpY2Vuc2VkIHRvIHRoZSBHcmlkIFByb3RlY3Rpb24gQWxsaWFuY2UgKEdQQSkgdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWVcclxuLy8gIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC5cclxuLy8gIFRoZSBHUEEgbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHRoZSBcIkxpY2Vuc2VcIjsgeW91IG1heSBub3QgdXNlIHRoaXNcclxuLy8gIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0OlxyXG4vL1xyXG4vLyAgICAgIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVRcclxuLy9cclxuLy8gIFVubGVzcyBhZ3JlZWQgdG8gaW4gd3JpdGluZywgdGhlIHN1YmplY3Qgc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuLy8gIFwiQVMtSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFJlZmVyIHRvIHRoZVxyXG4vLyAgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMuXHJcbi8vXHJcbi8vICBDb2RlIE1vZGlmaWNhdGlvbiBIaXN0b3J5OlxyXG4vLyAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAgMDgvMTIvMjAyMCAtIEJpbGx5IEVybmVzdFxyXG4vLyAgICAgICBHZW5lcmF0ZWQgb3JpZ2luYWwgdmVyc2lvbiBvZiBzb3VyY2UgY29kZS5cclxuLy9cclxuLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuY29uc3QgQ29tcGFyYWJsZUV2ZW50cyA9IChwcm9wczogeyBFdmVudElEOiBudW1iZXIsIENvbXBhcmFibGVFdmVudElEOiBudW1iZXIsIE9uQ2hhbmdlOiAoaWQ6IG51bWJlcikgPT4gdm9pZCB9KSA9PiB7XHJcbiAgICBjb25zdCBbY29tcGFyYWJsZUV2ZW50cywgc2V0Q29tcGFyYWJsZUV2ZW50c10gPSBSZWFjdC51c2VTdGF0ZTx7SUQ6IG51bWJlciwgTWV0ZXI6IHN0cmluZywgRGlmZmVyZW5jZTogbnVtYmVyfVtdPihbXSk7XHJcblxyXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBsZXQgaGFuZGxlMSA9IEdldENvbXBhcmFibGVFdmVudHMoKTtcclxuICAgICAgICBoYW5kbGUxLmRvbmUoZXZlbnRzID0+IHNldENvbXBhcmFibGVFdmVudHMoZXZlbnRzKSk7XHJcblxyXG4gICAgICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChoYW5kbGUxLmFib3J0ICE9IHVuZGVmaW5lZCkgaGFuZGxlMS5hYm9ydCgpO1xyXG4gICAgICAgIH1cclxuICAgIH0sIFtwcm9wcy5FdmVudElEXSk7XHJcblxyXG4gICAgZnVuY3Rpb24gR2V0Q29tcGFyYWJsZUV2ZW50cygpOiBKUXVlcnkuanFYSFI8e0lEOiBudW1iZXIsIE1ldGVyOiBzdHJpbmcsIERpZmZlcmVuY2U6IG51bWJlcn1bXT4ge1xyXG4gICAgICAgIHJldHVybiAkLmFqYXgoe1xyXG4gICAgICAgICAgICB0eXBlOiBcIkdFVFwiLFxyXG4gICAgICAgICAgICB1cmw6IGAke2hvbWVQYXRofWFwaS9PcGVuWERBL0V2ZW50L0NvbXBhcmFibGVFdmVudHMvJHtwcm9wcy5FdmVudElEfWAsXHJcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcIixcclxuICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcclxuICAgICAgICAgICAgY2FjaGU6IHRydWUsXHJcbiAgICAgICAgICAgIGFzeW5jOiB0cnVlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPHNlbGVjdCBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIiB2YWx1ZT17cHJvcHMuQ29tcGFyYWJsZUV2ZW50SUR9IG9uQ2hhbmdlPXsoZXZ0KSA9PiBwcm9wcy5PbkNoYW5nZShwYXJzZUludChldnQudGFyZ2V0LnZhbHVlKSl9PlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjBcIj5Ob25lPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29tcGFyYWJsZUV2ZW50cy5tYXAoY2VzID0+IDxvcHRpb24ga2V5PXtjZXMuSUR9IHZhbHVlPXtjZXMuSUR9PntjZXMuTWV0ZXJ9ICh7Y2VzLkRpZmZlcmVuY2V9IG1zKTwvb3B0aW9uPilcclxuICAgICAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcbiAgICBjYXRjaCB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ29tcGFyYWJsZUV2ZW50czsiLCIvLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4vLyAgSW5mby50c3ggLSBHYnRjXHJcbi8vXHJcbi8vICBDb3B5cmlnaHQgwqkgMjAyMCwgR3JpZCBQcm90ZWN0aW9uIEFsbGlhbmNlLiAgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuLy9cclxuLy8gIExpY2Vuc2VkIHRvIHRoZSBHcmlkIFByb3RlY3Rpb24gQWxsaWFuY2UgKEdQQSkgdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWVcclxuLy8gIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC5cclxuLy8gIFRoZSBHUEEgbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHRoZSBcIkxpY2Vuc2VcIjsgeW91IG1heSBub3QgdXNlIHRoaXNcclxuLy8gIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0OlxyXG4vL1xyXG4vLyAgICAgIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVRcclxuLy9cclxuLy8gIFVubGVzcyBhZ3JlZWQgdG8gaW4gd3JpdGluZywgdGhlIHN1YmplY3Qgc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuLy8gIFwiQVMtSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFJlZmVyIHRvIHRoZVxyXG4vLyAgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMuXHJcbi8vXHJcbi8vICBDb2RlIE1vZGlmaWNhdGlvbiBIaXN0b3J5OlxyXG4vLyAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAgMDgvMTIvMjAyMCAtIEJpbGx5IEVybmVzdFxyXG4vLyAgICAgICBHZW5lcmF0ZWQgb3JpZ2luYWwgdmVyc2lvbiBvZiBzb3VyY2UgY29kZS5cclxuLy9cclxuLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBPcGVuWERBIH0gZnJvbSAnLi4vZ2xvYmFsJztcclxuXHJcbmNvbnN0IEluZm8gPSAocHJvcHM6IHsgRXZlbnRJRDogbnVtYmVyIH0pID0+IHtcclxuICAgIGNvbnN0IFtpbmZvLCBzZXRJbmZvXSA9IFJlYWN0LnVzZVN0YXRlPE9wZW5YREEuRXZlbnQuSW5mbz4obnVsbCk7XHJcblxyXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBsZXQgaGFuZGxlMSA9IEdldEV2ZW50SW5mbygpO1xyXG4gICAgICAgIGhhbmRsZTEuZG9uZShpbmZvID0+IHNldEluZm8oaW5mb1swXSkpO1xyXG5cclxuICAgICAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoaGFuZGxlMS5hYm9ydCAhPSB1bmRlZmluZWQpIGhhbmRsZTEuYWJvcnQoKTtcclxuICAgICAgICB9XHJcbiAgICB9LCBbcHJvcHMuRXZlbnRJRF0pO1xyXG5cclxuICAgIGZ1bmN0aW9uIEdldEV2ZW50SW5mbygpOiBKUXVlcnkuanFYSFI8T3BlblhEQS5FdmVudC5JbmZvW10+IHtcclxuICAgICAgICByZXR1cm4gJC5hamF4KHtcclxuICAgICAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICAgICAgdXJsOiBgJHtob21lUGF0aH1hcGkvT3BlblhEQS9FdmVudC9JbmZvLyR7cHJvcHMuRXZlbnRJRH1gLFxyXG4gICAgICAgICAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04XCIsXHJcbiAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsXHJcbiAgICAgICAgICAgIGNhY2hlOiB0cnVlLFxyXG4gICAgICAgICAgICBhc3luYzogdHJ1ZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICB0cnkge1xyXG4gICAgICAgIGlmIChpbmZvID09IG51bGwpIHJldHVybiBudWxsO1xyXG5cclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwidGFibGVcIj5cclxuICAgICAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgICAgICA8dHI+PHRkPk1ldGVyPC90ZD48dGQ+e2luZm8uTWV0ZXJ9PC90ZD48L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0cj48dGQ+VGltZTwvdGQ+PHRkPnttb21lbnQoaW5mby5TdGFydFRpbWUpLmZvcm1hdCgnTU0vREQvWVlZWSBISDptbScpfSZuYnNwOyhDU1QpPC90ZD48L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0cj48dGQ+VHlwZTwvdGQ+PHRkPntpbmZvLkV2ZW50VHlwZX08L3RkPjwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZD5QaGFzZTwvdGQ+PHRkPntpbmZvLlBoYXNlfTwvdGQ+PC90cj5cclxuICAgICAgICAgICAgICAgICAgICA8dHI+PHRkPkR1cmF0aW9uPC90ZD48dGQ+e2luZm8uRHVyYXRpb259PC90ZD48L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0cj48dGQ+TWFnbml0dWRlPC90ZD48dGQ+e2luZm8uTWFnbml0dWRlfTwvdGQ+PC90cj5cclxuICAgICAgICAgICAgICAgICAgICA8dHI+PHRkPkRlcHRoPC90ZD48dGQ+e2luZm8uU2FnRGVwdGh9PC90ZD48L3RyPlxyXG4gICAgICAgICAgICAgICAgPC90Ym9keT5cclxuICAgICAgICAgICAgPC90YWJsZT5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG4gICAgY2F0Y2gge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEluZm87IiwiLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuLy8gIExlZ2VuZC50c3ggLSBHYnRjXHJcbi8vXHJcbi8vICBDb3B5cmlnaHQgwqkgMjAyMCwgR3JpZCBQcm90ZWN0aW9uIEFsbGlhbmNlLiAgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuLy9cclxuLy8gIExpY2Vuc2VkIHRvIHRoZSBHcmlkIFByb3RlY3Rpb24gQWxsaWFuY2UgKEdQQSkgdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWVcclxuLy8gIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC5cclxuLy8gIFRoZSBHUEEgbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHRoZSBcIkxpY2Vuc2VcIjsgeW91IG1heSBub3QgdXNlIHRoaXNcclxuLy8gIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0OlxyXG4vL1xyXG4vLyAgICAgIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVRcclxuLy9cclxuLy8gIFVubGVzcyBhZ3JlZWQgdG8gaW4gd3JpdGluZywgdGhlIHN1YmplY3Qgc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuLy8gIFwiQVMtSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFJlZmVyIHRvIHRoZVxyXG4vLyAgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMuXHJcbi8vXHJcbi8vICBDb2RlIE1vZGlmaWNhdGlvbiBIaXN0b3J5OlxyXG4vLyAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAgMDgvMDUvMjAyMCAtIEJpbGx5IEVybmVzdFxyXG4vLyAgICAgICBHZW5lcmF0ZWQgb3JpZ2luYWwgdmVyc2lvbiBvZiBzb3VyY2UgY29kZS5cclxuLy9cclxuLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IFBRRGlnZXN0IH0gZnJvbSAnLi4vZ2xvYmFsJztcclxuXHJcbmNvbnN0IExlZ2VuZCA9IChwcm9wczoge1xyXG4gICAgVHlwZTogJ1ZvbHRhZ2UnIHwgJ0N1cnJlbnQnIHwgUFFEaWdlc3QuQW5hbHR5aWMsXHJcbiAgICBQYXRoczogeyBLZXk6IHN0cmluZywgU2hvdzogYm9vbGVhbiwgQ29sb3I6IHN0cmluZywgRGF0YTogW251bWJlciwgbnVtYmVyXVtdIH1bXSxcclxuICAgIENhbGxCYWNrOiAocGF0aDogeyBLZXk6IHN0cmluZywgU2hvdzogYm9vbGVhbiwgQ29sb3I6IHN0cmluZywgRGF0YTogW251bWJlciwgbnVtYmVyXVtdIH0pID0+IHZvaWQsXHJcbiAgICBDb21wYXJlRGF0YTogYm9vbGVhbixcclxuICAgIEdldENvbG9yOiAoa2V5OiBzdHJpbmcpID0+IHN0cmluZ1xyXG59KSA9PiB7XHJcbiAgICBpZiAocHJvcHMuUGF0aHMubGVuZ3RoID09IDApIHJldHVybiBudWxsO1xyXG4gICAgZWxzZSBpZiAocHJvcHMuVHlwZSA9PSAnVm9sdGFnZScpIHJldHVybiA8Vm9sdGFnZUxlZ2VuZCB7Li4ucHJvcHN9IC8+XHJcbiAgICBlbHNlIGlmIChwcm9wcy5UeXBlID09ICdDdXJyZW50JykgcmV0dXJuIDxDdXJyZW50TGVnZW5kIHsuLi5wcm9wc30gLz5cclxuICAgIGVsc2UgaWYgKHByb3BzLlR5cGUgPT0gJ0ZyZXF1ZW5jeScpIHJldHVybiA8RnJlcXVlbmN5TGVnZW5kIHsuLi5wcm9wc30gLz5cclxuICAgIGVsc2UgaWYgKHByb3BzLlR5cGUgPT0gJ1Bvd2VyJykgcmV0dXJuIDxQb3dlckxlZ2VuZCB7Li4ucHJvcHN9IC8+XHJcbiAgICBlbHNlIGlmIChwcm9wcy5UeXBlID09ICdSYXBpZFZvbHRhZ2VDaGFuZ2UnKSByZXR1cm4gPFJhcGlkVm9sdGFnZUNoYW5nZUxlZ2VuZCB7Li4ucHJvcHN9IC8+XHJcbiAgICBlbHNlIGlmIChwcm9wcy5UeXBlID09ICdTcGVjaWZpZWRIYXJtb25pYycpIHJldHVybiA8U3BlY2lmaWVkSGFybW9uaWNMZWdlbmQgey4uLnByb3BzfSAvPlxyXG4gICAgZWxzZSBpZiAocHJvcHMuVHlwZSA9PSAnU3ltbWV0cmljYWxDb21wb25lbnRzJykgcmV0dXJuIDxTeW1tZXRyaWNhbENvbXBvbmVudHNMZWdlbmQgey4uLnByb3BzfSAvPlxyXG4gICAgZWxzZSBpZiAocHJvcHMuVHlwZSA9PSAnVEhEJykgcmV0dXJuIDxUSERMZWdlbmQgey4uLnByb3BzfSAvPlxyXG4gICAgZWxzZSBpZiAocHJvcHMuVHlwZSA9PSAnVW5iYWxhbmNlJykgcmV0dXJuIDxVbmJhbGFuY2VMZWdlbmQgey4uLnByb3BzfSAvPlxyXG5cclxuICAgIHJldHVybiBudWxsO1xyXG59XHJcblxyXG5jb25zdCBWb2x0YWdlTGVnZW5kID0gKHByb3BzOiB7XHJcbiAgICBQYXRoczogeyBLZXk6IHN0cmluZywgU2hvdzogYm9vbGVhbiwgQ29sb3I6IHN0cmluZywgRGF0YTogW251bWJlciwgbnVtYmVyXVtdIH1bXSxcclxuICAgIENhbGxCYWNrOiAocGF0aDogeyBLZXk6IHN0cmluZywgU2hvdzogYm9vbGVhbiwgQ29sb3I6IHN0cmluZywgRGF0YTogW251bWJlciwgbnVtYmVyXVtdIH0pID0+IHZvaWQsXHJcbiAgICBDb21wYXJlRGF0YTogYm9vbGVhbixcclxuICAgIEdldENvbG9yOiAoa2V5OiBzdHJpbmcpID0+IHN0cmluZ1xyXG59KSA9PiB7XHJcblxyXG4gICAgY29uc3QgW2FsbCwgc2V0QWxsXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFt3Ziwgc2V0V2ZdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gICAgY29uc3QgW3Jtcywgc2V0Uk1TXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFthbXAsIHNldEFtcF0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbcGgsIHNldFBoXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFthbiwgc2V0QW5dID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gICAgY29uc3QgW2JuLCBzZXRCbl0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbY24sIHNldENuXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFthYiwgc2V0QWJdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gICAgY29uc3QgW2JjLCBzZXRCY10gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbY2EsIHNldENhXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtzaG93TGVnZW5kLCBzZXRTaG93TGVnZW5kXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuXHJcbiAgICBjb25zdCBwcmVmaXggPSAnVic7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgcG9zaXRpb246ICdyZWxhdGl2ZScsIHpJbmRleDogMTAwMCB9fT5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtIGRyb3Bkb3duLXRvZ2dsZVwiIHN0eWxlPXt7IHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogODYsIHJpZ2h0OiAocHJvcHMuQ29tcGFyZURhdGEgPyA4NiA6IDApIH19IG9uQ2xpY2s9eygpID0+IHNldFNob3dMZWdlbmQoIXNob3dMZWdlbmQpfT57cHJvcHMuQ29tcGFyZURhdGEgPyAnQ29tcGFyZScgOiAnTGVnZW5kJ308L2J1dHRvbj5cclxuXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwLXZlcnRpY2FsXCIgc3R5bGU9e3sgZGlzcGxheTogc2hvd0xlZ2VuZCA/ICdibG9jaycgOiAnbm9uZScsIHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogNDAwLCByaWdodDogMCwgdG9wOiA0MCwgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnIH19PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogYWxsID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguU2hvdyA9PSBhbGwpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFdmKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRSTVMoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEFtcCghYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGgoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEFuKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRCbighYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0Q24oIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEFiKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRCYyghYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0Q2EoIWFsbCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRBbGwoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+QWxsPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IHdmID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5LnRvTG93ZXJDYXNlKCkuaW5kZXhPZignd2YnKSA+PSAwICYmIHguU2hvdyA9PSB3ZikuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRXZighd2YpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PldmPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IHJtcyA/IDEgOiAwLjUgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ3JtcycpID49IDAgJiYgeC5TaG93ID09IHJtcykuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRSTVMoIXJtcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+Uk1TPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGFtcCA/IDEgOiAwLjUgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ2FtcCcpID49IDAgJiYgeC5TaG93ID09IGFtcCkuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRBbXAoIWFtcCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+QW1wPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IHBoID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5LnRvTG93ZXJDYXNlKCkuaW5kZXhPZigncGgnKSA+PSAwICYmIHguU2hvdyA9PSBwaCkuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRQaCghcGgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PlBoPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCIgPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBhbiA/IDEgOiAwLjUsIGJhY2tncm91bmRDb2xvcjogcHJvcHMuR2V0Q29sb3IocHJlZml4ICsgJ0FOJykgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ2FuJykgPj0gMCAmJiB4LlNob3cgPT0gYW4pLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QW4oIWFuKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT57cHJlZml4fUFOPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BXZi0ke3ByZWZpeH1BTmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgV2YtJHtwcmVmaXh9QU5gKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFJNUy0ke3ByZWZpeH1BTmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgUk1TLSR7cHJlZml4fUFOYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BBbXAtJHtwcmVmaXh9QU5gfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYEFtcC0ke3ByZWZpeH1BTmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgUGgtJHtwcmVmaXh9QU5gfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFBoLSR7cHJlZml4fUFOYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGJuID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBwcm9wcy5HZXRDb2xvcihwcmVmaXggKyAnQk4nKSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5LnRvTG93ZXJDYXNlKCkuaW5kZXhPZignYm4nKSA+PSAwICYmIHguU2hvdyA9PSBibikuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRCbighYm4pO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PntwcmVmaXh9Qk48L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFdmLSR7cHJlZml4fUJOYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBXZi0ke3ByZWZpeH1CTmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgUk1TLSR7cHJlZml4fUJOYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBSTVMtJHtwcmVmaXh9Qk5gKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YEFtcC0ke3ByZWZpeH1CTmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgQW1wLSR7cHJlZml4fUJOYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BQaC0ke3ByZWZpeH1CTmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgUGgtJHtwcmVmaXh9Qk5gKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogY24gPyAxIDogMC41LCBiYWNrZ3JvdW5kQ29sb3I6IHByb3BzLkdldENvbG9yKHByZWZpeCArICdDTicpIH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCdjbicpID49IDAgJiYgeC5TaG93ID09IGNuKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldENuKCFjbik7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+e3ByZWZpeH1DTjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgV2YtJHtwcmVmaXh9Q05gfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFdmLSR7cHJlZml4fUNOYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BSTVMtJHtwcmVmaXh9Q05gfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFJNUy0ke3ByZWZpeH1DTmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgQW1wLSR7cHJlZml4fUNOYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBBbXAtJHtwcmVmaXh9Q05gKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFBoLSR7cHJlZml4fUNOYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBQaC0ke3ByZWZpeH1DTmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBhYiA/IDEgOiAwLjUsIGJhY2tncm91bmRDb2xvcjogcHJvcHMuR2V0Q29sb3IoYCR7cHJlZml4fUFCYCkgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ2FiJykgPj0gMCAmJiB4LlNob3cgPT0gYWIpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QWIoIWFiKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT57cHJlZml4fUFCPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BXZi0ke3ByZWZpeH1BQmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgV2YtJHtwcmVmaXh9QUJgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFJNUy0ke3ByZWZpeH1BQmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgUk1TLSR7cHJlZml4fUFCYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BBbXAtJHtwcmVmaXh9QUJgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYEFtcC0ke3ByZWZpeH1BQmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgUGgtJHtwcmVmaXh9QUJgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFBoLSR7cHJlZml4fUFCYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGJjID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBwcm9wcy5HZXRDb2xvcihgJHtwcmVmaXh9QkNgKSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5LnRvTG93ZXJDYXNlKCkuaW5kZXhPZignYmMnKSA+PSAwICYmIHguU2hvdyA9PSBiYykuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRCYyghYmMpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PntwcmVmaXh9QkM8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFdmLSR7cHJlZml4fUJDYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBXZi0ke3ByZWZpeH1CQ2ApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgUk1TLSR7cHJlZml4fUJDYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBSTVMtJHtwcmVmaXh9QkNgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YEFtcC0ke3ByZWZpeH1CQ2B9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgQW1wLSR7cHJlZml4fUJDYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BQaC0ke3ByZWZpeH1CQ2B9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgUGgtJHtwcmVmaXh9QkNgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogY2EgPyAxIDogMC41LCBiYWNrZ3JvdW5kQ29sb3I6IHByb3BzLkdldENvbG9yKGAke3ByZWZpeH1DQWApIH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCdjYScpID49IDAgJiYgeC5TaG93ID09IGNhKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldENhKCFjYSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+e3ByZWZpeH1DQTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgV2YtJHtwcmVmaXh9Q0FgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFdmLSR7cHJlZml4fUNBYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BSTVMtJHtwcmVmaXh9Q0FgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFJNUy0ke3ByZWZpeH1DQWApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgQW1wLSR7cHJlZml4fUNBYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBBbXAtJHtwcmVmaXh9Q0FgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFBoLSR7cHJlZml4fUNBYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBQaC0ke3ByZWZpeH1DQWApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuXHJcbn1cclxuXHJcbmNvbnN0IEN1cnJlbnRMZWdlbmQgPSAocHJvcHM6IHtcclxuICAgIFBhdGhzOiB7IEtleTogc3RyaW5nLCBTaG93OiBib29sZWFuLCBDb2xvcjogc3RyaW5nLCBEYXRhOiBbbnVtYmVyLCBudW1iZXJdW10gfVtdLFxyXG4gICAgQ2FsbEJhY2s6IChwYXRoOiB7IEtleTogc3RyaW5nLCBTaG93OiBib29sZWFuLCBDb2xvcjogc3RyaW5nLCBEYXRhOiBbbnVtYmVyLCBudW1iZXJdW10gfSkgPT4gdm9pZCxcclxuICAgIENvbXBhcmVEYXRhOiBib29sZWFuLFxyXG4gICAgR2V0Q29sb3I6IChrZXk6IHN0cmluZykgPT4gc3RyaW5nXHJcbn0pID0+IHtcclxuXHJcbiAgICBjb25zdCBbYWxsLCBzZXRBbGxdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gICAgY29uc3QgW3dmLCBzZXRXZl0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbcm1zLCBzZXRSTVNdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gICAgY29uc3QgW2FtcCwgc2V0QW1wXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtwaCwgc2V0UGhdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gICAgY29uc3QgW2FuLCBzZXRBbl0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbYm4sIHNldEJuXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtjbiwgc2V0Q25dID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gICAgY29uc3QgW3Nob3dMZWdlbmQsIHNldFNob3dMZWdlbmRdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gICAgY29uc3QgW25nLCBzZXROZ10gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbcmVzLCBzZXRSZXNdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG5cclxuICAgIGNvbnN0IHByZWZpeCA9ICdJJztcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBzdHlsZT17eyBwb3NpdGlvbjogJ3JlbGF0aXZlJywgekluZGV4OiAxMDAwIH19PlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc20gZHJvcGRvd24tdG9nZ2xlXCIgc3R5bGU9e3sgcG9zaXRpb246ICdhYnNvbHV0ZScsIHdpZHRoOiA4NiwgcmlnaHQ6IChwcm9wcy5Db21wYXJlRGF0YSA/IDg2IDogMCkgfX0gb25DbGljaz17KCkgPT4gc2V0U2hvd0xlZ2VuZCghc2hvd0xlZ2VuZCl9Pntwcm9wcy5Db21wYXJlRGF0YSA/ICdDb21wYXJlJyA6ICdMZWdlbmQnfTwvYnV0dG9uPlxyXG5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXAtdmVydGljYWxcIiBzdHlsZT17eyBkaXNwbGF5OiBzaG93TGVnZW5kID8gJ2Jsb2NrJyA6ICdub25lJywgcG9zaXRpb246ICdhYnNvbHV0ZScsIHdpZHRoOiA0MDAsIHJpZ2h0OiAwLCB0b3A6IDQwLCBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScgfX0+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBhbGwgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5TaG93ID09IGFsbCkuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0V2YoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFJNUyghYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QW1wKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRQaCghYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QW4oIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEJuKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRDbighYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UmVzKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXROZyghYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QWxsKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PkFsbDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiB3ZiA/IDEgOiAwLjUgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ3dmJykgPj0gMCAmJiB4LlNob3cgPT0gd2YpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0V2YoIXdmKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5XZjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBybXMgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCdybXMnKSA+PSAwICYmIHguU2hvdyA9PSBybXMpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0Uk1TKCFybXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PlJNUzwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBhbXAgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCdhbXAnKSA+PSAwICYmIHguU2hvdyA9PSBhbXApLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QW1wKCFhbXApO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PkFtcDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBwaCA/IDEgOiAwLjUgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ3BoJykgPj0gMCAmJiB4LlNob3cgPT0gcGgpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGgoIXBoKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5QaDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiID5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogYW4gPyAxIDogMC41LCBiYWNrZ3JvdW5kQ29sb3I6IHByb3BzLkdldENvbG9yKHByZWZpeCArICdBTicpIH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCdhbicpID49IDAgJiYgeC5TaG93ID09IGFuKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEFuKCFhbik7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+e3ByZWZpeH1BTjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgV2YtJHtwcmVmaXh9QU5gfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFdmLSR7cHJlZml4fUFOYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BSTVMtJHtwcmVmaXh9QU5gfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFJNUy0ke3ByZWZpeH1BTmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgQW1wLSR7cHJlZml4fUFOYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBBbXAtJHtwcmVmaXh9QU5gKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFBoLSR7cHJlZml4fUFOYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBQaC0ke3ByZWZpeH1BTmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBibiA/IDEgOiAwLjUsIGJhY2tncm91bmRDb2xvcjogcHJvcHMuR2V0Q29sb3IocHJlZml4ICsgJ0JOJykgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ2JuJykgPj0gMCAmJiB4LlNob3cgPT0gYm4pLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0Qm4oIWJuKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT57cHJlZml4fUJOPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BXZi0ke3ByZWZpeH1CTmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgV2YtJHtwcmVmaXh9Qk5gKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFJNUy0ke3ByZWZpeH1CTmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgUk1TLSR7cHJlZml4fUJOYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BBbXAtJHtwcmVmaXh9Qk5gfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYEFtcC0ke3ByZWZpeH1CTmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgUGgtJHtwcmVmaXh9Qk5gfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFBoLSR7cHJlZml4fUJOYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGNuID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBwcm9wcy5HZXRDb2xvcihwcmVmaXggKyAnQ04nKSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5LnRvTG93ZXJDYXNlKCkuaW5kZXhPZignY24nKSA+PSAwICYmIHguU2hvdyA9PSBjbikuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRDbighY24pO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PntwcmVmaXh9Q048L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFdmLSR7cHJlZml4fUNOYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBXZi0ke3ByZWZpeH1DTmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgUk1TLSR7cHJlZml4fUNOYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBSTVMtJHtwcmVmaXh9Q05gKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YEFtcC0ke3ByZWZpeH1DTmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgQW1wLSR7cHJlZml4fUNOYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BQaC0ke3ByZWZpeH1DTmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgUGgtJHtwcmVmaXh9Q05gKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIiA+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IG5nID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBwcm9wcy5HZXRDb2xvcihgJHtwcmVmaXh9TkdgKSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5LnRvTG93ZXJDYXNlKCkuaW5kZXhPZignbmcnKSA+PSAwICYmIHguU2hvdyA9PSBuZykuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXROZyghbmcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PntwcmVmaXh9Tkc8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFdmLSR7cHJlZml4fU5HYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBXZi0ke3ByZWZpeH1OR2ApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgUk1TLSR7cHJlZml4fU5HYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBSTVMtJHtwcmVmaXh9TkdgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YEFtcC0ke3ByZWZpeH1OR2B9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgQW1wLSR7cHJlZml4fU5HYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BQaC0ke3ByZWZpeH1OR2B9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgUGgtJHtwcmVmaXh9TkdgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIiA+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IHJlcyA/IDEgOiAwLjUsIGJhY2tncm91bmRDb2xvcjogcHJvcHMuR2V0Q29sb3IoYCR7cHJlZml4fVJFU2ApIH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCdyZXMnKSA+PSAwICYmIHguU2hvdyA9PSByZXMpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UmVzKCFyZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PntwcmVmaXh9UkVTPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BXZi0ke3ByZWZpeH1SRVNgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFdmLSR7cHJlZml4fVJFU2ApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgUk1TLSR7cHJlZml4fVJFU2B9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgUk1TLSR7cHJlZml4fVJFU2ApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgQW1wLSR7cHJlZml4fVJFU2B9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgQW1wLSR7cHJlZml4fVJFU2ApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgUGgtJHtwcmVmaXh9UkVTYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBQaC0ke3ByZWZpeH1SRVNgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICk7XHJcblxyXG59XHJcblxyXG5jb25zdCBGcmVxdWVuY3lMZWdlbmQgPSAocHJvcHM6IHtcclxuICAgIFBhdGhzOiB7IEtleTogc3RyaW5nLCBTaG93OiBib29sZWFuLCBDb2xvcjogc3RyaW5nLCBEYXRhOiBbbnVtYmVyLCBudW1iZXJdW10gfVtdLFxyXG4gICAgQ2FsbEJhY2s6IChwYXRoOiB7IEtleTogc3RyaW5nLCBTaG93OiBib29sZWFuLCBDb2xvcjogc3RyaW5nLCBEYXRhOiBbbnVtYmVyLCBudW1iZXJdW10gfSkgPT4gdm9pZCxcclxuICAgIENvbXBhcmVEYXRhOiBib29sZWFuLFxyXG4gICAgR2V0Q29sb3I6IChrZXk6IHN0cmluZykgPT4gc3RyaW5nXHJcbn0pID0+IHtcclxuICAgIGNvbnN0IFtzaG93TGVnZW5kLCBzZXRTaG93TGVnZW5kXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFthbGwsIHNldEFsbF0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgcG9zaXRpb246ICdyZWxhdGl2ZScsIHpJbmRleDogMTAwMCB9fT5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtIGRyb3Bkb3duLXRvZ2dsZVwiIHN0eWxlPXt7IHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogODYsIHJpZ2h0OiAocHJvcHMuQ29tcGFyZURhdGEgPyA4NiA6IDApIH19IG9uQ2xpY2s9eygpID0+IHNldFNob3dMZWdlbmQoIXNob3dMZWdlbmQpfT57cHJvcHMuQ29tcGFyZURhdGEgPyAnQ29tcGFyZScgOiAnTGVnZW5kJ308L2J1dHRvbj5cclxuXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwLXZlcnRpY2FsXCIgc3R5bGU9e3sgZGlzcGxheTogc2hvd0xlZ2VuZCA/ICdibG9jaycgOiAnbm9uZScsIHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogMTUwLCByaWdodDogMCwgdG9wOiA0MCwgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnIH19PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogYWxsID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguU2hvdyA9PSBhbGwpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QWxsKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PkFsbDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiID5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFZBYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBWQWApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgVkJgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFZCYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BWQ2B9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgVkNgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIiA+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BBdmVyYWdlYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBBdmVyYWdlYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG5cclxufVxyXG5cclxuY29uc3QgUG93ZXJMZWdlbmQgPSAocHJvcHM6IHtcclxuICAgIFBhdGhzOiB7IEtleTogc3RyaW5nLCBTaG93OiBib29sZWFuLCBDb2xvcjogc3RyaW5nLCBEYXRhOiBbbnVtYmVyLCBudW1iZXJdW10gfVtdLFxyXG4gICAgQ2FsbEJhY2s6IChwYXRoOiB7IEtleTogc3RyaW5nLCBTaG93OiBib29sZWFuLCBDb2xvcjogc3RyaW5nLCBEYXRhOiBbbnVtYmVyLCBudW1iZXJdW10gfSkgPT4gdm9pZCxcclxuICAgIENvbXBhcmVEYXRhOiBib29sZWFuLFxyXG4gICAgR2V0Q29sb3I6IChrZXk6IHN0cmluZykgPT4gc3RyaW5nXHJcbn0pID0+IHtcclxuICAgIGNvbnN0IFtzaG93TGVnZW5kLCBzZXRTaG93TGVnZW5kXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFthbGwsIHNldEFsbF0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbYWN0aXZlLCBzZXRBY3RpdmVdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4odHJ1ZSk7XHJcbiAgICBjb25zdCBbYXBwYXJlbnQsIHNldEFwcGFyZW50XSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtyZWFjdGl2ZSwgc2V0UmVhY3RpdmVdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gICAgY29uc3QgW3Bvd2VyRmFjdG9yLCBzZXRQb3dlckZhY3Rvcl0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbYW4sIHNldEFuXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtibiwgc2V0Qm5dID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gICAgY29uc3QgW2NuLCBzZXRDbl0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbdG90YWwsIHNldFRvdGFsXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuXHJcbiAgICBjb25zdCBwcmVmaXggPSAnSSc7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgcG9zaXRpb246ICdyZWxhdGl2ZScsIHpJbmRleDogMTAwMCB9fT5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtIGRyb3Bkb3duLXRvZ2dsZVwiIHN0eWxlPXt7IHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogODYsIHJpZ2h0OiAocHJvcHMuQ29tcGFyZURhdGEgPyA4NiA6IDApIH19IG9uQ2xpY2s9eygpID0+IHNldFNob3dMZWdlbmQoIXNob3dMZWdlbmQpfT57cHJvcHMuQ29tcGFyZURhdGEgPyAnQ29tcGFyZScgOiAnTGVnZW5kJ308L2J1dHRvbj5cclxuXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwLXZlcnRpY2FsXCIgc3R5bGU9e3sgZGlzcGxheTogc2hvd0xlZ2VuZCA/ICdibG9jaycgOiAnbm9uZScsIHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogNDAwLCByaWdodDogMCwgdG9wOiA0MCwgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnIH19PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogYWxsID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguU2hvdyA9PSBhbGwpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEFjdGl2ZSghYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QXBwYXJlbnQoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFJlYWN0aXZlKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRQb3dlckZhY3RvcighYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QW4oIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEJuKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRDbighYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0VG90YWwoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEFsbCghYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5BbGw8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogYWN0aXZlID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5LnRvTG93ZXJDYXNlKCkuaW5kZXhPZigndycpID49IDAgJiYgeC5TaG93ID09IGFjdGl2ZSkuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRBY3RpdmUoIWFjdGl2ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+VzwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBhcHBhcmVudCA/IDEgOiAwLjUgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS5tYXRjaCgvLVZBW15SXT8kL2cpICE9IG51bGwgJiYgeC5TaG93ID09IGFwcGFyZW50KS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEFwcGFyZW50KCFhcHBhcmVudCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+VkE8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogcmVhY3RpdmUgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkubWF0Y2goLy1WQVIkL2cpICE9IG51bGwgJiYgeC5TaG93ID09IHJlYWN0aXZlKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFJlYWN0aXZlKCFyZWFjdGl2ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+VkFSPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IHBvd2VyRmFjdG9yID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5LnRvTG93ZXJDYXNlKCkuaW5kZXhPZigncGYnKSA+PSAwICYmIHguU2hvdyA9PSBwb3dlckZhY3RvcikuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRQb3dlckZhY3RvcighcG93ZXJGYWN0b3IpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PlBGPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCIgPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBhbiA/IDEgOiAwLjUsIGJhY2tncm91bmRDb2xvcjogcHJvcHMuR2V0Q29sb3IocHJlZml4ICsgJ0FOJykgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ2FuJykgPj0gMCAmJiB4LlNob3cgPT0gYW4pLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QW4oIWFuKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5BTjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgQU4tV2B9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgQU4tV2ApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgQU4tVkFgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYEFOLVZBYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BBTi1WQVJgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYEFOLVZBUmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgQU4tUEZgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYEFOLVBGYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGJuID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBwcm9wcy5HZXRDb2xvcihwcmVmaXggKyAnQk4nKSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5LnRvTG93ZXJDYXNlKCkuaW5kZXhPZignYm4nKSA+PSAwICYmIHguU2hvdyA9PSBibikuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRCbighYm4pO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PkJOPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BCTi1XYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBCTi1XYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BCTi1WQWB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgQk4tVkFgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YEJOLVZBUmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgQk4tVkFSYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BCTi1QRmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgQk4tUEZgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogY24gPyAxIDogMC41LCBiYWNrZ3JvdW5kQ29sb3I6IHByb3BzLkdldENvbG9yKHByZWZpeCArICdDTicpIH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCdjbicpID49IDAgJiYgeC5TaG93ID09IGNuKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldENuKCFjbik7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+Q048L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YENOLVdgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYENOLVdgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YENOLVZBYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBDTi1WQWApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgQ04tVkFSYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBDTi1WQVJgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YENOLVBGYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBDTi1QRmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiID5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogdG90YWwgPyAxIDogMC41LCBiYWNrZ3JvdW5kQ29sb3I6IHByb3BzLkdldENvbG9yKGBUb3RhbGApIH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCd0b3RhbCcpID49IDAgJiYgeC5TaG93ID09IHRvdGFsKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRvdGFsKCF0b3RhbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+VG90YWw8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFRvdGFsLVdgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFRvdGFsLVdgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFRvdGFsLVZBYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBUb3RhbC1WQWApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgVG90YWwtVkFSYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBUb3RhbC1WQVJgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFRvdGFsLVBGYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBUb3RhbC1QRmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuXHJcbn1cclxuXHJcbmNvbnN0IFJhcGlkVm9sdGFnZUNoYW5nZUxlZ2VuZCA9IChwcm9wczoge1xyXG4gICAgUGF0aHM6IHsgS2V5OiBzdHJpbmcsIFNob3c6IGJvb2xlYW4sIENvbG9yOiBzdHJpbmcsIERhdGE6IFtudW1iZXIsIG51bWJlcl1bXSB9W10sXHJcbiAgICBDYWxsQmFjazogKHBhdGg6IHsgS2V5OiBzdHJpbmcsIFNob3c6IGJvb2xlYW4sIENvbG9yOiBzdHJpbmcsIERhdGE6IFtudW1iZXIsIG51bWJlcl1bXSB9KSA9PiB2b2lkLFxyXG4gICAgQ29tcGFyZURhdGE6IGJvb2xlYW4sXHJcbiAgICBHZXRDb2xvcjogKGtleTogc3RyaW5nKSA9PiBzdHJpbmdcclxufSkgPT4ge1xyXG5cclxuICAgIGNvbnN0IFthbGwsIHNldEFsbF0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbbG4sIHNldExuXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KHRydWUpO1xyXG4gICAgY29uc3QgW2xsLCBzZXRMbF0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbYSwgc2V0QV0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbYiwgc2V0Ql0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbYywgc2V0Q10gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbc2hvd0xlZ2VuZCwgc2V0U2hvd0xlZ2VuZF0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IHN0eWxlPXt7IHBvc2l0aW9uOiAncmVsYXRpdmUnLCB6SW5kZXg6IDEwMDAgfX0+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbSBkcm9wZG93bi10b2dnbGVcIiBzdHlsZT17eyBwb3NpdGlvbjogJ2Fic29sdXRlJywgd2lkdGg6IDg2LCByaWdodDogKHByb3BzLkNvbXBhcmVEYXRhID8gODYgOiAwKSB9fSBvbkNsaWNrPXsoKSA9PiBzZXRTaG93TGVnZW5kKCFzaG93TGVnZW5kKX0+e3Byb3BzLkNvbXBhcmVEYXRhID8gJ0NvbXBhcmUnIDogJ0xlZ2VuZCd9PC9idXR0b24+XHJcblxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cC12ZXJ0aWNhbFwiIHN0eWxlPXt7IGRpc3BsYXk6IHNob3dMZWdlbmQgPyAnYmxvY2snIDogJ25vbmUnLCBwb3NpdGlvbjogJ2Fic29sdXRlJywgd2lkdGg6IDQwMCwgcmlnaHQ6IDAsIHRvcDogNDAsIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyB9fT5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGFsbCA/IDEgOiAwLjUgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LlNob3cgPT0gYWxsKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRMbighYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0TGwoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEEoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEIoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEMoIWFsbCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRBbGwoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+QWxsPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGxuID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5Lm1hdGNoKC9WW0FCQ11OL2cpICE9IG51bGwgJiYgeC5TaG93ID09IGxuKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldExuKCFsbik7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+TE48L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogbGwgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkubWF0Y2goL1ZbQUJDXVtBQkNdL2cpICE9IG51bGwgJiYgeC5TaG93ID09IGxsKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldExsKCFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+TEw8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIiA+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGEgPyAxIDogMC41LCBiYWNrZ3JvdW5kQ29sb3I6IHByb3BzLkdldENvbG9yKCdWQU4nKSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5Lm1hdGNoKC9WQVtCTl0vZykgIT0gbnVsbCAmJiB4LlNob3cgPT0gYSkuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRBKCFhKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5BPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9eydWQU4nfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gJ1ZBTicpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnVkFCJ30gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09ICdWQUInKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogYiA/IDEgOiAwLjUsIGJhY2tncm91bmRDb2xvcjogcHJvcHMuR2V0Q29sb3IoJ1ZCTicpIH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkubWF0Y2goL1ZCW0NOXS9nKSAhPSBudWxsICYmIHguU2hvdyA9PSBiKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEIoIWIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PkI8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17J1ZCTid9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnVkJOJyl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9eydWQkMnfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gJ1ZCQycpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBjID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBwcm9wcy5HZXRDb2xvcignVkNOJykgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS5tYXRjaCgvVkNbQU5dL2cpICE9IG51bGwgJiYgeC5TaG93ID09IGMpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QyghYyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+QzwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnVkNOJ30gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09ICdWQ04nKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17J1ZDQSd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnVkNBJyl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG5cclxufVxyXG5cclxuY29uc3QgU3BlY2lmaWVkSGFybW9uaWNMZWdlbmQgPSAocHJvcHM6IHtcclxuICAgIFBhdGhzOiB7IEtleTogc3RyaW5nLCBTaG93OiBib29sZWFuLCBDb2xvcjogc3RyaW5nLCBEYXRhOiBbbnVtYmVyLCBudW1iZXJdW10gfVtdLFxyXG4gICAgQ2FsbEJhY2s6IChwYXRoOiB7IEtleTogc3RyaW5nLCBTaG93OiBib29sZWFuLCBDb2xvcjogc3RyaW5nLCBEYXRhOiBbbnVtYmVyLCBudW1iZXJdW10gfSkgPT4gdm9pZCxcclxuICAgIENvbXBhcmVEYXRhOiBib29sZWFuLFxyXG4gICAgR2V0Q29sb3I6IChrZXk6IHN0cmluZykgPT4gc3RyaW5nXHJcbn0pID0+IHtcclxuXHJcbiAgICBjb25zdCBbYWxsLCBzZXRBbGxdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gICAgY29uc3QgW3ZNYWcsIHNldFZNYWddID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4odHJ1ZSk7XHJcbiAgICBjb25zdCBbdkFuZywgc2V0VkFuZ10gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbaU1hZywgc2V0SU1hZ10gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbaUFuZywgc2V0SUFuZ10gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbYSwgc2V0QV0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbYiwgc2V0Ql0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbYywgc2V0Q10gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbc2hvd0xlZ2VuZCwgc2V0U2hvd0xlZ2VuZF0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IHN0eWxlPXt7IHBvc2l0aW9uOiAncmVsYXRpdmUnLCB6SW5kZXg6IDEwMDAgfX0+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbSBkcm9wZG93bi10b2dnbGVcIiBzdHlsZT17eyBwb3NpdGlvbjogJ2Fic29sdXRlJywgd2lkdGg6IDg2LCByaWdodDogKHByb3BzLkNvbXBhcmVEYXRhID8gODYgOiAwKSB9fSBvbkNsaWNrPXsoKSA9PiBzZXRTaG93TGVnZW5kKCFzaG93TGVnZW5kKX0+e3Byb3BzLkNvbXBhcmVEYXRhID8gJ0NvbXBhcmUnIDogJ0xlZ2VuZCd9PC9idXR0b24+XHJcblxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cC12ZXJ0aWNhbFwiIHN0eWxlPXt7IGRpc3BsYXk6IHNob3dMZWdlbmQgPyAnYmxvY2snIDogJ25vbmUnLCBwb3NpdGlvbjogJ2Fic29sdXRlJywgd2lkdGg6IDQwMCwgcmlnaHQ6IDAsIHRvcDogNDAsIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyB9fT5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGFsbCA/IDEgOiAwLjUgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LlNob3cgPT0gYWxsKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRWTWFnKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRWQW5nKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRJTWFnKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRJQW5nKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRBKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRCKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRDKCFhbGwpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QWxsKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PkFsbDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiB2TWFnID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5Lm1hdGNoKC9WW0FCQ11OIE1hZy9nKSAhPSBudWxsICYmIHguU2hvdyA9PSB2TWFnKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFZNYWcoIXZNYWcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PlYgTWFnPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IHZBbmcgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkubWF0Y2goL1ZbQUJDXVtBQkNdIEFuZy9nKSAhPSBudWxsICYmIHguU2hvdyA9PSB2QW5nKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFZBbmcoIXZBbmcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PlYgQW5nPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGlNYWcgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkubWF0Y2goL0lbQUJDXU4gTWFnL2cpICE9IG51bGwgJiYgeC5TaG93ID09IGlNYWcpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0SU1hZyghaU1hZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+SSBNYWc8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogaUFuZyA/IDEgOiAwLjUgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS5tYXRjaCgvSVtBQkNdW0FCQ10gQW5nL2cpICE9IG51bGwgJiYgeC5TaG93ID09IGlBbmcpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0SUFuZyghaUFuZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+SSBBbmc8L2J1dHRvbj5cclxuXHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCIgPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBhID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBwcm9wcy5HZXRDb2xvcignVkFOJykgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS5tYXRjaCgvW1ZJXUFOL2cpICE9IG51bGwgJiYgeC5TaG93ID09IGEpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QSghYSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+QTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnVkFOIE1hZyd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnVkFOIE1hZycpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnVkFOIEFuZyd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnVkFOIEFuZycpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnSUFOIE1hZyd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnSUFOIE1hZycpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnSUFOIEFuZyd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnSUFOIEFuZycpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBiID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBwcm9wcy5HZXRDb2xvcignVkJOJykgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS5tYXRjaCgvW1ZJXUJOL2cpICE9IG51bGwgJiYgeC5TaG93ID09IGIpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QighYik7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+QjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnVkJOIE1hZyd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnVkJOIE1hZycpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnVkJOIEFuZyd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnVkJOIEFuZycpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnSUJOIE1hZyd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnSUJOIE1hZycpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnSUJOIEFuZyd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnSUJOIEFuZycpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBjID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBwcm9wcy5HZXRDb2xvcignVkNOJykgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS5tYXRjaCgvW1ZJXUNOL2cpICE9IG51bGwgJiYgeC5TaG93ID09IGMpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QyghYyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+QzwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnVkNOIE1hZyd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnVkNOIE1hZycpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnVkNOIEFuZyd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnVkNOIEFuZycpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnSUNOIE1hZyd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnSUNOIE1hZycpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnSUNOIEFuZyd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnSUNOIEFuZycpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuXHJcbn1cclxuXHJcbmNvbnN0IFN5bW1ldHJpY2FsQ29tcG9uZW50c0xlZ2VuZCA9IChwcm9wczoge1xyXG4gICAgUGF0aHM6IHsgS2V5OiBzdHJpbmcsIFNob3c6IGJvb2xlYW4sIENvbG9yOiBzdHJpbmcsIERhdGE6IFtudW1iZXIsIG51bWJlcl1bXSB9W10sXHJcbiAgICBDYWxsQmFjazogKHBhdGg6IHsgS2V5OiBzdHJpbmcsIFNob3c6IGJvb2xlYW4sIENvbG9yOiBzdHJpbmcsIERhdGE6IFtudW1iZXIsIG51bWJlcl1bXSB9KSA9PiB2b2lkLFxyXG4gICAgQ29tcGFyZURhdGE6IGJvb2xlYW4sXHJcbiAgICBHZXRDb2xvcjogKGtleTogc3RyaW5nKSA9PiBzdHJpbmdcclxufSkgPT4ge1xyXG5cclxuICAgIGNvbnN0IFthbGwsIHNldEFsbF0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbdiwgc2V0Vl0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPih0cnVlKTtcclxuICAgIGNvbnN0IFtpLCBzZXRJXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtzMCwgc2V0UzBdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gICAgY29uc3QgW3MxLCBzZXRTMV0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbczIsIHNldFMyXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtzaG93TGVnZW5kLCBzZXRTaG93TGVnZW5kXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgcG9zaXRpb246ICdyZWxhdGl2ZScsIHpJbmRleDogMTAwMCB9fT5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtIGRyb3Bkb3duLXRvZ2dsZVwiIHN0eWxlPXt7IHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogODYsIHJpZ2h0OiAocHJvcHMuQ29tcGFyZURhdGEgPyA4NiA6IDApIH19IG9uQ2xpY2s9eygpID0+IHNldFNob3dMZWdlbmQoIXNob3dMZWdlbmQpfT57cHJvcHMuQ29tcGFyZURhdGEgPyAnQ29tcGFyZScgOiAnTGVnZW5kJ308L2J1dHRvbj5cclxuXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwLXZlcnRpY2FsXCIgc3R5bGU9e3sgZGlzcGxheTogc2hvd0xlZ2VuZCA/ICdibG9jaycgOiAnbm9uZScsIHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogNDAwLCByaWdodDogMCwgdG9wOiA0MCwgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnIH19PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogYWxsID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguU2hvdyA9PSBhbGwpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFYoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEkoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFMwKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRTMSghYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UzIoIWFsbCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRBbGwoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+QWxsPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IHYgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkubWF0Y2goL1ZvbHRhZ2UvZykgIT0gbnVsbCAmJiB4LlNob3cgPT0gdikuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRWKCF2KTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5WPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGkgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkubWF0Y2goL0N1cnJlbnQvZykgIT0gbnVsbCAmJiB4LlNob3cgPT0gaSkuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRJKCFpKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5JPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCIgPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBzMCA/IDEgOiAwLjUsIGJhY2tncm91bmRDb2xvcjogcHJvcHMuR2V0Q29sb3IoJ1ZBTicpIH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkubWF0Y2goL1MwL2cpICE9IG51bGwgJiYgeC5TaG93ID09IHMwKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFMwKCFzMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+UzA8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17J1YgUzAnfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gJ1ZvbHRhZ2UgUzAnKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17J0kgUzAnfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gJ0N1cnJlbnQgUzAnKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogczEgPyAxIDogMC41LCBiYWNrZ3JvdW5kQ29sb3I6IHByb3BzLkdldENvbG9yKCdWQk4nKSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5Lm1hdGNoKC9TMS9nKSAhPSBudWxsICYmIHguU2hvdyA9PSBzMSkuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRTMSghczEpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PlMxPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9eydWIFMxJ30gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09ICdWb2x0YWdlIFMxJyl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9eydJIFMxJ30gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09ICdDdXJyZW50IFMxJyl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IHMyID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBwcm9wcy5HZXRDb2xvcignVkNOJykgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS5tYXRjaCgvUzIvZykgIT0gbnVsbCAmJiB4LlNob3cgPT0gczIpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UzIoIXMyKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5TMjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnViBTMid9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnVm9sdGFnZSBTMicpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnSSBTMid9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnQ3VycmVudCBTMicpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuXHJcbn1cclxuXHJcbmNvbnN0IFRIRExlZ2VuZCA9IChwcm9wczoge1xyXG4gICAgUGF0aHM6IHsgS2V5OiBzdHJpbmcsIFNob3c6IGJvb2xlYW4sIENvbG9yOiBzdHJpbmcsIERhdGE6IFtudW1iZXIsIG51bWJlcl1bXSB9W10sXHJcbiAgICBDYWxsQmFjazogKHBhdGg6IHsgS2V5OiBzdHJpbmcsIFNob3c6IGJvb2xlYW4sIENvbG9yOiBzdHJpbmcsIERhdGE6IFtudW1iZXIsIG51bWJlcl1bXSB9KSA9PiB2b2lkLFxyXG4gICAgQ29tcGFyZURhdGE6IGJvb2xlYW4sXHJcbiAgICBHZXRDb2xvcjogKGtleTogc3RyaW5nKSA9PiBzdHJpbmdcclxufSkgPT4ge1xyXG5cclxuICAgIGNvbnN0IFthbGwsIHNldEFsbF0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbdiwgc2V0Vl0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPih0cnVlKTtcclxuICAgIGNvbnN0IFtpLCBzZXRJXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFthLCBzZXRBXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtiLCBzZXRCXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtjLCBzZXRDXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtzaG93TGVnZW5kLCBzZXRTaG93TGVnZW5kXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgcG9zaXRpb246ICdyZWxhdGl2ZScsIHpJbmRleDogMTAwMCB9fT5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtIGRyb3Bkb3duLXRvZ2dsZVwiIHN0eWxlPXt7IHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogODYsIHJpZ2h0OiAocHJvcHMuQ29tcGFyZURhdGEgPyA4NiA6IDApIH19IG9uQ2xpY2s9eygpID0+IHNldFNob3dMZWdlbmQoIXNob3dMZWdlbmQpfT57cHJvcHMuQ29tcGFyZURhdGEgPyAnQ29tcGFyZScgOiAnTGVnZW5kJ308L2J1dHRvbj5cclxuXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwLXZlcnRpY2FsXCIgc3R5bGU9e3sgZGlzcGxheTogc2hvd0xlZ2VuZCA/ICdibG9jaycgOiAnbm9uZScsIHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogNDAwLCByaWdodDogMCwgdG9wOiA0MCwgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnIH19PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogYWxsID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguU2hvdyA9PSBhbGwpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFYoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEkoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEEoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEIoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEMoIWFsbCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRBbGwoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+QWxsPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IHYgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkubWF0Y2goL1ZbQUJDXU4vZykgIT0gbnVsbCAmJiB4LlNob3cgPT0gdikuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRWKCF2KTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5WPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGkgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkubWF0Y2goL0lbQUJDXU4vZykgIT0gbnVsbCAmJiB4LlNob3cgPT0gaSkuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRJKCFpKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5JPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCIgPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBhID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBwcm9wcy5HZXRDb2xvcignVkFOJykgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS5tYXRjaCgvW1ZJXUFOL2cpICE9IG51bGwgJiYgeC5TaG93ID09IGEpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QSghYSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+QTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnVkFOJ30gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09ICdWQU4nKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17J0lBTid9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnSUFOJyl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGIgPyAxIDogMC41LCBiYWNrZ3JvdW5kQ29sb3I6IHByb3BzLkdldENvbG9yKCdWQk4nKSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5Lm1hdGNoKC9bVkldQk4vZykgIT0gbnVsbCAmJiB4LlNob3cgPT0gYikuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRCKCFiKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5CPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9eydWQk4nfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gJ1ZCTicpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnSUJOJ30gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09ICdJQk4nKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogYyA/IDEgOiAwLjUsIGJhY2tncm91bmRDb2xvcjogcHJvcHMuR2V0Q29sb3IoJ1ZDTicpIH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkubWF0Y2goL1tWSV1DTi9nKSAhPSBudWxsICYmIHguU2hvdyA9PSBjKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEMoIWMpO1xyXG4gICAgICAgICAgICAgICAgICAgIH19PkM8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17J1ZDTid9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnVkNOJyl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9eydJQ04nfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gJ0lDTicpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuXHJcbn1cclxuXHJcbmNvbnN0IFVuYmFsYW5jZUxlZ2VuZCA9IChwcm9wczoge1xyXG4gICAgUGF0aHM6IHsgS2V5OiBzdHJpbmcsIFNob3c6IGJvb2xlYW4sIENvbG9yOiBzdHJpbmcsIERhdGE6IFtudW1iZXIsIG51bWJlcl1bXSB9W10sXHJcbiAgICBDYWxsQmFjazogKHBhdGg6IHsgS2V5OiBzdHJpbmcsIFNob3c6IGJvb2xlYW4sIENvbG9yOiBzdHJpbmcsIERhdGE6IFtudW1iZXIsIG51bWJlcl1bXSB9KSA9PiB2b2lkLFxyXG4gICAgQ29tcGFyZURhdGE6IGJvb2xlYW4sXHJcbiAgICBHZXRDb2xvcjogKGtleTogc3RyaW5nKSA9PiBzdHJpbmdcclxufSkgPT4ge1xyXG5cclxuICAgIGNvbnN0IFthbGwsIHNldEFsbF0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCBbdiwgc2V0Vl0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPih0cnVlKTtcclxuICAgIGNvbnN0IFtpLCBzZXRJXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtzMHMxLCBzZXRTMHMxXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtzMnMxLCBzZXRTMnMxXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtzaG93TGVnZW5kLCBzZXRTaG93TGVnZW5kXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgcG9zaXRpb246ICdyZWxhdGl2ZScsIHpJbmRleDogMTAwMCB9fT5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtIGRyb3Bkb3duLXRvZ2dsZVwiIHN0eWxlPXt7IHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogODYsIHJpZ2h0OiAocHJvcHMuQ29tcGFyZURhdGEgPyA4NiA6IDApIH19IG9uQ2xpY2s9eygpID0+IHNldFNob3dMZWdlbmQoIXNob3dMZWdlbmQpfT57cHJvcHMuQ29tcGFyZURhdGEgPyAnQ29tcGFyZScgOiAnTGVnZW5kJ308L2J1dHRvbj5cclxuXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwLXZlcnRpY2FsXCIgc3R5bGU9e3sgZGlzcGxheTogc2hvd0xlZ2VuZCA/ICdibG9jaycgOiAnbm9uZScsIHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogNDAwLCByaWdodDogMCwgdG9wOiA0MCwgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnIH19PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogYWxsID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguU2hvdyA9PSBhbGwpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFYoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEkoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFMwczEoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFMyczEoIWFsbCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRBbGwoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfX0+QWxsPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IHYgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkubWF0Y2goL1ZvbHRhZ2UvZykgIT0gbnVsbCAmJiB4LlNob3cgPT0gdikuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRWKCF2KTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5WPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGkgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkubWF0Y2goL0N1cnJlbnQvZykgIT0gbnVsbCAmJiB4LlNob3cgPT0gaSkuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRJKCFpKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5JPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCIgPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBzMHMxID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBwcm9wcy5HZXRDb2xvcignVkFOJykgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS5tYXRjaCgvUzAvZykgIT0gbnVsbCAmJiB4LlNob3cgPT0gczBzMSkuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRTMHMxKCFzMHMxKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5TMC9TMTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnViBTMC9TMSd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnUzAvUzEgVm9sdGFnZScpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnSSBTMC9TMSd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnUzAvUzEgQ3VycmVudCcpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBzMnMxID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBwcm9wcy5HZXRDb2xvcignVkNOJykgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS5tYXRjaCgvUzIvZykgIT0gbnVsbCAmJiB4LlNob3cgPT0gczJzMSkuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRTMnMxKCFzMnMxKTtcclxuICAgICAgICAgICAgICAgICAgICB9fT5TMi9TMTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnViBTMi9TMSd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnUzIvUzEgVm9sdGFnZScpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXsnSSBTMi9TMSd9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSAnUzIvUzEgQ3VycmVudCcpfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuXHJcbn1cclxuXHJcbmNvbnN0IEJ1dHRvbiA9IChwcm9wczogeyBQYXRoOiB7IEtleTogc3RyaW5nLCBTaG93OiBib29sZWFuLCBDb2xvcjogc3RyaW5nLCBEYXRhOiBbbnVtYmVyLG51bWJlcl1bXSB9LCBLZXk6IHN0cmluZywgQ2FsbEJhY2s6IChwYXRoKSA9PiB2b2lkIH0pID0+IHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiXHJcbiAgICAgICAgICAgIHN0eWxlPXt7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHByb3BzLlBhdGggPT0gdW5kZWZpbmVkID8gJ2JsYWNrJyA6IHByb3BzLlBhdGguQ29sb3IsXHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiBwcm9wcy5QYXRoID09IHVuZGVmaW5lZCB8fCBwcm9wcy5QYXRoLlNob3cgPyAxIDogMC41XHJcbiAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgIGRpc2FibGVkPXtwcm9wcy5QYXRoID09IHVuZGVmaW5lZH1cclxuICAgICAgICAgICAgb25DbGljaz17KGV2dCkgPT4gcHJvcHMuQ2FsbEJhY2socHJvcHMuUGF0aCl9Pntwcm9wcy5LZXl9PC9idXR0b24+XHJcbiAgICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IExlZ2VuZDtcclxuIiwiLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuLy8gIFBvbGFyQ2hhcnQudHN4IC0gR2J0Y1xyXG4vL1xyXG4vLyAgQ29weXJpZ2h0IMKpIDIwMjAsIEdyaWQgUHJvdGVjdGlvbiBBbGxpYW5jZS4gIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXHJcbi8vXHJcbi8vICBMaWNlbnNlZCB0byB0aGUgR3JpZCBQcm90ZWN0aW9uIEFsbGlhbmNlIChHUEEpIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlXHJcbi8vICB0aGUgTk9USUNFIGZpbGUgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuXHJcbi8vICBUaGUgR1BBIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCB0aGUgXCJMaWNlbnNlXCI7IHlvdSBtYXkgbm90IHVzZSB0aGlzXHJcbi8vICBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdDpcclxuLy9cclxuLy8gICAgICBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUXHJcbi8vXHJcbi8vICBVbmxlc3MgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHRoZSBzdWJqZWN0IHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXHJcbi8vICBcIkFTLUlTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBSZWZlciB0byB0aGVcclxuLy8gIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zLlxyXG4vL1xyXG4vLyAgQ29kZSBNb2RpZmljYXRpb24gSGlzdG9yeTpcclxuLy8gIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gIDA4LzA2LzIwMjAgLSBCaWxseSBFcm5lc3RcclxuLy8gICAgICAgR2VuZXJhdGVkIG9yaWdpbmFsIHZlcnNpb24gb2Ygc291cmNlIGNvZGUuXHJcbi8vXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IGJpc2VjdCwgbWF4IH0gZnJvbSAnZDMnO1xyXG5cclxuY29uc3QgUG9sYXJDaGFydCA9IChwcm9wczogeyBXaWR0aDogbnVtYmVyLCBIZWlnaHQ6IG51bWJlciwgVGltZTogbnVtYmVyLCBWb2x0YWdlRGF0YTogYW55LCBDdXJyZW50RGF0YTogYW55IH0pID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgY2hhcnRIZWlnaHQgPSBwcm9wcy5IZWlnaHQgLSAxNTA7XHJcbiAgICAgICAgaWYgKHByb3BzLlZvbHRhZ2VEYXRhLmxlbmd0aCA9PSAwIHx8IHByb3BzLkN1cnJlbnREYXRhLmxlbmd0aCA9PSAwKSByZXR1cm4gbnVsbDtcclxuICAgICAgICBsZXQgdkRhdGEgPSBwcm9wcy5Wb2x0YWdlRGF0YS5tYXAoeCA9PiB7XHJcbiAgICAgICAgICAgIGxldCBkYXRhID0geC5EYXRhW2Jpc2VjdCh4LkRhdGEubWFwKHggPT4geFswXSksIHByb3BzLlRpbWUpXTtcclxuICAgICAgICAgICAgcmV0dXJuIHsgS2V5OiB4LktleSwgVmFsdWU6IGRhdGEgIT0gdW5kZWZpbmVkID8gZGF0YVsxXSA6IHVuZGVmaW5lZCwgQ29sb3I6IHguQ29sb3IgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGxldCB2TWF4ID0gcGFyc2VGbG9hdChtYXgodkRhdGEuZmlsdGVyKHggPT4geC5LZXkuaW5kZXhPZignUk1TLVYnKSA+PSAwKS5tYXAoeCA9PiB4LlZhbHVlKSkudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgbGV0IGlEYXRhID0gcHJvcHMuQ3VycmVudERhdGEubWFwKHggPT4ge1xyXG4gICAgICAgICAgICBsZXQgZGF0YSA9IHguRGF0YVtiaXNlY3QoeC5EYXRhLm1hcCh4ID0+IHhbMF0pLCBwcm9wcy5UaW1lKV07XHJcbiAgICAgICAgICAgIHJldHVybiB7IEtleTogeC5LZXksIFZhbHVlOiBkYXRhICE9IHVuZGVmaW5lZCA/IGRhdGFbMV0gOiB1bmRlZmluZWQsIENvbG9yOiB4LkNvbG9yIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBsZXQgaU1heCA9IHBhcnNlRmxvYXQobWF4KGlEYXRhLmZpbHRlcih4ID0+IHguS2V5LmluZGV4T2YoJ1JNUy1JJykgPj0gMCkubWFwKHggPT4geC5WYWx1ZSkpLnRvU3RyaW5nKCkpO1xyXG5cclxuXHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPD5cclxuICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9e3Byb3BzLldpZHRofSBoZWlnaHQ9e2NoYXJ0SGVpZ2h0fT5cclxuICAgICAgICAgICAgICAgICAgICA8Y2lyY2xlIGN4PXtwcm9wcy5XaWR0aCAvIDJ9IGN5PXtjaGFydEhlaWdodCAvIDJ9IHI9e2NoYXJ0SGVpZ2h0ICogMC4zfSBzdHJva2U9XCJsaWdodGdyZXlcIiBzdHJva2VXaWR0aD1cIjFcIiBmaWxsPSd3aGl0ZScgZmlsbE9wYWNpdHk9XCIwXCIgLz5cclxuICAgICAgICAgICAgICAgICAgICA8Y2lyY2xlIGN4PXtwcm9wcy5XaWR0aCAvIDJ9IGN5PXtjaGFydEhlaWdodCAvIDJ9IHI9e2NoYXJ0SGVpZ2h0ICogMC40NX0gc3Ryb2tlPVwibGlnaHRncmV5XCIgc3Ryb2tlV2lkdGg9XCIxXCIgZmlsbD0nd2hpdGUnIGZpbGxPcGFjaXR5PVwiMFwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxpbmUgeDE9e3Byb3BzLldpZHRoIC8gMn0geTE9XCIwXCIgeDI9e3Byb3BzLldpZHRoIC8gMn0geTI9e2NoYXJ0SGVpZ2h0fSBzdHlsZT17eyBzdHJva2U6ICdsaWdodGdyZXknLCBzdHJva2VXaWR0aDogMiB9fSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxsaW5lIHgxPXtwcm9wcy5XaWR0aCAvIDIgLSBjaGFydEhlaWdodCAvIDJ9IHkxPXtjaGFydEhlaWdodCAvIDJ9IHgyPXtwcm9wcy5XaWR0aCAvIDIgKyBjaGFydEhlaWdodCAvIDJ9IHkyPXtjaGFydEhlaWdodCAvIDJ9IHN0eWxlPXt7IHN0cm9rZTogJ2xpZ2h0Z3JleScsIHN0cm9rZVdpZHRoOiAyIH19IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgey8qdm9sdGFnZURhdGEuZmlsdGVyKHggPT4geC5LZXkuaW5kZXhPZignV2YnKSA+PTApLm1hcCgodmFsdWUsaW5kZXgsYXJyYXkpID0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9e0RyYXdWZWN0b3JTVkcoLCAwLjkgLyAxNTAsIHZhbHVlLmFuZyl9IHN0eWxlPXt7IHN0cm9rZTogR2V0Q29sb3IoJ1ZBTicpLCBzdHJva2VXaWR0aDogMyB9fSAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi99XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHt2RGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1JNUy1WQU4nKSAhPSB1bmRlZmluZWQgJiYgdkRhdGEuZmluZCh4ID0+IHguS2V5ID09ICdQaC1WQU4nKSAhPSB1bmRlZmluZWQgP1xyXG4gICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPXtEcmF3VmVjdG9yU1ZHKHByb3BzLldpZHRoIC8gMiwgY2hhcnRIZWlnaHQgLyAyLCBjaGFydEhlaWdodCAvIDIsIHZEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUk1TLVZBTicpLlZhbHVlLCB2TWF4LCB2RGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLVZBTicpLlZhbHVlKX0gc3R5bGU9e3sgc3Ryb2tlOiB2RGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLVZBTicpLkNvbG9yLCBzdHJva2VXaWR0aDogMyB9fSAvPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgOiBudWxsfVxyXG4gICAgICAgICAgICAgICAgICAgIHt2RGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1JNUy1WQk4nKSAhPSB1bmRlZmluZWQgJiYgdkRhdGEuZmluZCh4ID0+IHguS2V5ID09ICdQaC1WQk4nKSAhPSB1bmRlZmluZWQgP1xyXG4gICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPXtEcmF3VmVjdG9yU1ZHKHByb3BzLldpZHRoIC8gMiwgY2hhcnRIZWlnaHQgLyAyLCBjaGFydEhlaWdodCAvIDIsIHZEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUk1TLVZCTicpLlZhbHVlLCB2TWF4LCB2RGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLVZCTicpLlZhbHVlKX0gc3R5bGU9e3sgc3Ryb2tlOiB2RGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLVZCTicpLkNvbG9yLCBzdHJva2VXaWR0aDogMyB9fSAvPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgOiBudWxsfVxyXG4gICAgICAgICAgICAgICAgICAgIHt2RGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1JNUy1WQ04nKSAhPSB1bmRlZmluZWQgJiYgdkRhdGEuZmluZCh4ID0+IHguS2V5ID09ICdQaC1WQ04nKSAhPSB1bmRlZmluZWQgP1xyXG4gICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPXtEcmF3VmVjdG9yU1ZHKHByb3BzLldpZHRoIC8gMiwgY2hhcnRIZWlnaHQgLyAyLCBjaGFydEhlaWdodCAvIDIsIHZEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUk1TLVZDTicpLlZhbHVlLCB2TWF4LCB2RGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLVZDTicpLlZhbHVlKX0gc3R5bGU9e3sgc3Ryb2tlOiB2RGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLVZDTicpLkNvbG9yLCBzdHJva2VXaWR0aDogMyB9fSAvPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgOiBudWxsfVxyXG4gICAgICAgICAgICAgICAgICAgIHtpRGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1JNUy1JQU4nKSAhPSB1bmRlZmluZWQgJiYgaURhdGEuZmluZCh4ID0+IHguS2V5ID09ICdQaC1JQU4nKSAhPSB1bmRlZmluZWQgP1xyXG4gICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPXtEcmF3VmVjdG9yU1ZHKHByb3BzLldpZHRoIC8gMiwgY2hhcnRIZWlnaHQgLyAyLCBjaGFydEhlaWdodCAvIDIsIGlEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUk1TLUlBTicpLlZhbHVlLCBpTWF4LCBpRGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLUlBTicpLlZhbHVlKX0gc3R5bGU9e3sgc3Ryb2tlOiBpRGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLUlBTicpLkNvbG9yLCBzdHJva2VXaWR0aDogMyB9fSAvPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgOiBudWxsfVxyXG4gICAgICAgICAgICAgICAgICAgIHtpRGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1JNUy1JQk4nKSAhPSB1bmRlZmluZWQgJiYgaURhdGEuZmluZCh4ID0+IHguS2V5ID09ICdQaC1JQk4nKSAhPSB1bmRlZmluZWQgP1xyXG4gICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPXtEcmF3VmVjdG9yU1ZHKHByb3BzLldpZHRoIC8gMiwgY2hhcnRIZWlnaHQgLyAyLCBjaGFydEhlaWdodCAvIDIsIGlEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUk1TLUlCTicpLlZhbHVlLCBpTWF4LCBpRGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLUlCTicpLlZhbHVlKX0gc3R5bGU9e3sgc3Ryb2tlOiBpRGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLUlCTicpLkNvbG9yLCBzdHJva2VXaWR0aDogMyB9fSAvPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgOiBudWxsfVxyXG4gICAgICAgICAgICAgICAgICAgIHtpRGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1JNUy1JQ04nKSAhPSB1bmRlZmluZWQgJiYgaURhdGEuZmluZCh4ID0+IHguS2V5ID09ICdQaC1JQ04nKSAhPSB1bmRlZmluZWQgP1xyXG4gICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPXtEcmF3VmVjdG9yU1ZHKHByb3BzLldpZHRoIC8gMiwgY2hhcnRIZWlnaHQgLyAyLCBjaGFydEhlaWdodCAvIDIsIGlEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUk1TLUlDTicpLlZhbHVlLCBpTWF4LCBpRGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLUlDTicpLlZhbHVlKX0gc3R5bGU9e3sgc3Ryb2tlOiBpRGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLUlDTicpLkNvbG9yLCBzdHJva2VXaWR0aDogMyB9fSAvPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgOiBudWxsfVxyXG5cclxuICAgICAgICAgICAgICAgIDwvc3ZnPlxyXG4gICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInRhYmxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRoZWFkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+PC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5WQU48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlZCTjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+VkNOPC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5JQU48L3RoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPklCTjwvdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+SUNOPC90aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPk1hZzwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3ZEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUk1TLVZBTicpICE9IHVuZGVmaW5lZCA/IHZEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUk1TLVZBTicpLlZhbHVlLnRvRml4ZWQoMCkgOiAnJ308L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt2RGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1JNUy1WQk4nKSAhPSB1bmRlZmluZWQgPyB2RGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1JNUy1WQk4nKS5WYWx1ZS50b0ZpeGVkKDApIDogJyd9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57dkRhdGEuZmluZCh4ID0+IHguS2V5ID09ICdSTVMtVkNOJykgIT0gdW5kZWZpbmVkID8gdkRhdGEuZmluZCh4ID0+IHguS2V5ID09ICdSTVMtVkNOJykuVmFsdWUudG9GaXhlZCgwKSA6ICcnfTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e2lEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUk1TLUlBTicpICE9IHVuZGVmaW5lZCA/IGlEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUk1TLUlBTicpLlZhbHVlLnRvRml4ZWQoMCkgOiAnJ308L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPntpRGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1JNUy1JQk4nKSAhPSB1bmRlZmluZWQgPyBpRGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1JNUy1JQk4nKS5WYWx1ZS50b0ZpeGVkKDApIDogJyd9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57aURhdGEuZmluZCh4ID0+IHguS2V5ID09ICdSTVMtSUNOJykgIT0gdW5kZWZpbmVkID8gaURhdGEuZmluZCh4ID0+IHguS2V5ID09ICdSTVMtSUNOJykuVmFsdWUudG9GaXhlZCgwKSA6ICcnfTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5Bbmc8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt2RGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLVZBTicpICE9IHVuZGVmaW5lZCA/IHZEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUGgtVkFOJykuVmFsdWUudG9GaXhlZCgwKSA6ICcnfTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3ZEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUGgtVkJOJykgIT0gdW5kZWZpbmVkID8gdkRhdGEuZmluZCh4ID0+IHguS2V5ID09ICdQaC1WQk4nKS5WYWx1ZS50b0ZpeGVkKDApIDogJyd9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57dkRhdGEuZmluZCh4ID0+IHguS2V5ID09ICdQaC1WQ04nKSAhPSB1bmRlZmluZWQgPyB2RGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLVZDTicpLlZhbHVlLnRvRml4ZWQoMCkgOiAnJ308L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPntpRGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLUlBTicpICE9IHVuZGVmaW5lZCA/IGlEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUGgtSUFOJykuVmFsdWUudG9GaXhlZCgwKSA6ICcnfTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e2lEYXRhLmZpbmQoeCA9PiB4LktleSA9PSAnUGgtSUJOJykgIT0gdW5kZWZpbmVkID8gaURhdGEuZmluZCh4ID0+IHguS2V5ID09ICdQaC1JQk4nKS5WYWx1ZS50b0ZpeGVkKDApIDogJyd9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57aURhdGEuZmluZCh4ID0+IHguS2V5ID09ICdQaC1JQ04nKSAhPSB1bmRlZmluZWQgPyBpRGF0YS5maW5kKHggPT4geC5LZXkgPT0gJ1BoLUlDTicpLlZhbHVlLnRvRml4ZWQoMCkgOiAnJ308L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgICAgICAgICAgPC90YWJsZT5cclxuXHJcblxyXG4gICAgICAgICAgICA8Lz5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG4gICAgY2F0Y2gge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBEcmF3VmVjdG9yU1ZHKHgwOiBudW1iZXIsIHkwOiBudW1iZXIsIHJhZGl1czogbnVtYmVyLCBtYWc6IG51bWJlciwgbWF4OiBudW1iZXIsIGFuZ2xlOiBudW1iZXIpOiBzdHJpbmcge1xyXG4gICAgaWYgKG1hZyA9PSB1bmRlZmluZWQgfHwgbWF4ID09IHVuZGVmaW5lZCB8fCBhbmdsZSA9PSB1bmRlZmluZWQpIHJldHVybiAnJztcclxuICAgIHZhciB4ID0gKG1hZy9tYXgpICogTWF0aC5jb3MoYW5nbGUgKiBNYXRoLlBJLzE4MCk7XHJcbiAgICB2YXIgeSA9IChtYWcgLyBtYXgpICogTWF0aC5zaW4oYW5nbGUgKiBNYXRoLlBJIC8gMTgwKTtcclxuICAgIHJldHVybiBgTSAke3gwfSAke3kwfSBMICR7eDAgKyByYWRpdXMqeH0gJHt5MCAtIHJhZGl1cyp5fSBaYFxyXG59XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUG9sYXJDaGFydDsiLCIvLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4vLyAgV2F2ZWZvcm1WaWV3ZXIudHN4IC0gR2J0Y1xyXG4vL1xyXG4vLyAgQ29weXJpZ2h0IMKpIDIwMjAsIEdyaWQgUHJvdGVjdGlvbiBBbGxpYW5jZS4gIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXHJcbi8vXHJcbi8vICBMaWNlbnNlZCB0byB0aGUgR3JpZCBQcm90ZWN0aW9uIEFsbGlhbmNlIChHUEEpIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlXHJcbi8vICB0aGUgTk9USUNFIGZpbGUgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuXHJcbi8vICBUaGUgR1BBIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCB0aGUgXCJMaWNlbnNlXCI7IHlvdSBtYXkgbm90IHVzZSB0aGlzXHJcbi8vICBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdDpcclxuLy9cclxuLy8gICAgICBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUXHJcbi8vXHJcbi8vICBVbmxlc3MgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHRoZSBzdWJqZWN0IHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXHJcbi8vICBcIkFTLUlTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBSZWZlciB0byB0aGVcclxuLy8gIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zLlxyXG4vL1xyXG4vLyAgQ29kZSBNb2RpZmljYXRpb24gSGlzdG9yeTpcclxuLy8gIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gIDA3LzMwLzIwMjAgLSBCaWxseSBFcm5lc3RcclxuLy8gICAgICAgR2VuZXJhdGVkIG9yaWdpbmFsIHZlcnNpb24gb2Ygc291cmNlIGNvZGUuXHJcbi8vXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBPcGVuWERBLCBQUURpZ2VzdCB9IGZyb20gJy4uL2dsb2JhbCc7XHJcbmltcG9ydCBXYXZlZm9ybVZpZXdlckQzQ2hhcnQgZnJvbSAnLi9XYXZlZm9ybVZpZXdlckQzQ2hhcnQnO1xyXG5pbXBvcnQgTGVnZW5kIGZyb20gJy4vTGVnZW5kJztcclxuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcclxuaW1wb3J0IHsgYmlzZWN0LCBleHRlbnQgfSBmcm9tICdkMyc7XHJcbmltcG9ydCBQb2xhckNoYXJ0IGZyb20gJy4vUG9sYXJDaGFydCc7XHJcbmltcG9ydCBCcm93c2VFdmVudHMgZnJvbSAnLi9Ccm93c2VFdmVudHMnO1xyXG5pbXBvcnQgSW5mbyBmcm9tICcuL0luZm8nO1xyXG5pbXBvcnQgQ29tcGFyYWJsZUV2ZW50cyBmcm9tICcuL0NvbXBhcmFibGVFdmVudHMnO1xyXG5cclxuXHJcbmNvbnN0IFdhdmVmb3JtVmlld2VyID0gKHByb3BzOiB7IEV2ZW50SUQ6IG51bWJlciB9KSA9PiB7XHJcbiAgICBjb25zdCBpbmZvV2lkdGggPSAzMDA7XHJcbiAgICBjb25zdCBwb2ludHNXaWR0aCA9IDUwMDtcclxuICAgIGNvbnN0IHdhdmVmb3JtV2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aCAtIGluZm9XaWR0aCAtIHBvaW50c1dpZHRoIC0gMTA7XHJcblxyXG4gICAgY29uc3QgW2NvbXBhcmVFdmVudElELCBzZXRDb21wYXJlRXZlbnRJRF0gPSBSZWFjdC51c2VTdGF0ZTxudW1iZXI+KDApO1xyXG5cclxuICAgIGNvbnN0IFt2b2x0YWdlRGF0YSwgc2V0Vm9sdGFnZURhdGFdID0gUmVhY3QudXNlU3RhdGU8eyBLZXk6IHN0cmluZywgU2hvdzogYm9vbGVhbiwgQ29sb3I6IHN0cmluZywgRGF0YTogW251bWJlciwgbnVtYmVyXVtdIH1bXT4oW10pO1xyXG4gICAgY29uc3QgW2N1cnJlbnREYXRhLCBzZXRDdXJyZW50RGF0YV0gPSBSZWFjdC51c2VTdGF0ZTx7IEtleTogc3RyaW5nLCBTaG93OiBib29sZWFuLCBDb2xvcjogc3RyaW5nLCBEYXRhOiBbbnVtYmVyLCBudW1iZXJdW10gfVtdPihbXSk7XHJcbiAgICBjb25zdCBbYW5hbHl0aWNEYXRhLCBzZXRBbmFsdHlpY0RhdGFdID0gUmVhY3QudXNlU3RhdGU8eyBLZXk6IHN0cmluZywgU2hvdzogYm9vbGVhbiwgQ29sb3I6IHN0cmluZywgRGF0YTogW251bWJlciwgbnVtYmVyXVtdIH1bXT4oW10pO1xyXG5cclxuICAgIGNvbnN0IFtjb21wYXJlVm9sdGFnZURhdGEsIHNldENvbXBhcmVWb2x0YWdlRGF0YV0gPSBSZWFjdC51c2VTdGF0ZTx7IEtleTogc3RyaW5nLCBTaG93OiBib29sZWFuLCBDb2xvcjogc3RyaW5nLCBEYXRhOiBbbnVtYmVyLCBudW1iZXJdW10gfVtdPihbXSk7XHJcbiAgICBjb25zdCBbY29tcGFyZUN1cnJlbnREYXRhLCBzZXRDb21wYXJlQ3VycmVudERhdGFdID0gUmVhY3QudXNlU3RhdGU8eyBLZXk6IHN0cmluZywgU2hvdzogYm9vbGVhbiwgQ29sb3I6IHN0cmluZywgRGF0YTogW251bWJlciwgbnVtYmVyXVtdIH1bXT4oW10pO1xyXG4gICAgY29uc3QgW2NvbXBhcmVBbmFsdHlpY0RhdGEsIHNldENvbXBhcmVBbmFsdHlpY0RhdGFdID0gUmVhY3QudXNlU3RhdGU8eyBLZXk6IHN0cmluZywgU2hvdzogYm9vbGVhbiwgQ29sb3I6IHN0cmluZywgRGF0YTogW251bWJlciwgbnVtYmVyXVtdIH1bXT4oW10pO1xyXG5cclxuICAgIGNvbnN0IFthbmFseXRpYywgc2V0QW5hbHl0aWNdID0gUmVhY3QudXNlU3RhdGU8UFFEaWdlc3QuQW5hbHR5aWM+KCdGcmVxdWVuY3knKTtcclxuICAgIGNvbnN0IFtoYXJtb25pYywgc2V0SGFybW9uaWNdID0gUmVhY3QudXNlU3RhdGU8bnVtYmVyPig1KTtcclxuICAgIGNvbnN0IFtjaGFydEFjdGlvbiwgc2V0Q2hhcnRBY3Rpb25dID0gUmVhY3QudXNlU3RhdGU8UFFEaWdlc3QuQ2hhcnRBY3Rpb24+KCdDbGljaycpO1xyXG5cclxuICAgIGNvbnN0IFtob3Zlciwgc2V0SG92ZXJdID0gUmVhY3QudXNlU3RhdGU8bnVtYmVyPigtMSk7XHJcbiAgICBjb25zdCBbY2xpY2ssIHNldENsaWNrXSA9IFJlYWN0LnVzZVN0YXRlPG51bWJlcj4oLTEpO1xyXG4gICAgY29uc3QgW2V4dGVudHMsIHNldEV4dGVudHNdID0gUmVhY3QudXNlU3RhdGU8UFFEaWdlc3QuRDNFeHRlbnQ+KHsgWDogeyBNaW46IG51bGwsIE1heDogbnVsbCB9LCBZOiB7IE1pbjogbnVsbCwgTWF4OiBudWxsIH19KTtcclxuXHJcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xyXG5cclxuICAgICAgICBsZXQgaGFuZGxlMSA9IEdldFdhdmVmb3JtRGF0YSgnQ3VycmVudCcsIHByb3BzLkV2ZW50SUQpO1xyXG4gICAgICAgIGhhbmRsZTEuZG9uZShkYXRhID0+IHtcclxuICAgICAgICAgICAgbGV0IHJldHVybkRhdGEgPSBPYmplY3Qua2V5cyhkYXRhKS5tYXAoa2V5ID0+IHsgcmV0dXJuIHsgS2V5OiBHZXRLZXkoJ0N1cnJlbnQnLCBrZXkpLCBTaG93OiBTaG93UGF0aCgnQ3VycmVudCcsa2V5KSwgQ29sb3I6IEdldENvbG9yKGtleSksIERhdGE6IGRhdGFba2V5XSB9IH0pO1xyXG4gICAgICAgICAgICBzZXRDdXJyZW50RGF0YShyZXR1cm5EYXRhKVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBsZXQgaGFuZGxlMiA9IEdldFdhdmVmb3JtRGF0YSgnVm9sdGFnZScsIHByb3BzLkV2ZW50SUQpO1xyXG4gICAgICAgIGhhbmRsZTIuZG9uZShkYXRhID0+IHtcclxuICAgICAgICAgICAgbGV0IHJldHVybkRhdGEgPSBPYmplY3Qua2V5cyhkYXRhKS5tYXAoa2V5ID0+IHsgcmV0dXJuIHsgS2V5OiBHZXRLZXkoJ1ZvbHRhZ2UnLCBrZXkpLCBTaG93OiBTaG93UGF0aCgnVm9sdGFnZScsa2V5KSwgQ29sb3I6IEdldENvbG9yKGtleSksIERhdGE6IGRhdGFba2V5XSB9IH0pO1xyXG4gICAgICAgICAgICBzZXRWb2x0YWdlRGF0YShyZXR1cm5EYXRhKVxyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKGhhbmRsZTEuYWJvcnQgIT0gdW5kZWZpbmVkKSBoYW5kbGUxLmFib3J0KCk7XHJcbiAgICAgICAgICAgIGlmIChoYW5kbGUyLmFib3J0ICE9IHVuZGVmaW5lZCkgaGFuZGxlMi5hYm9ydCgpO1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9LCBbcHJvcHMuRXZlbnRJRF0pO1xyXG5cclxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgbGV0IGhhbmRsZSA9IEdldEFuYWx5dGljRGF0YShhbmFseXRpYywgcHJvcHMuRXZlbnRJRCk7XHJcbiAgICAgICAgaGFuZGxlLmRvbmUoZGF0YSA9PiB7XHJcbiAgICAgICAgICAgIGxldCByZXR1cm5EYXRhID0gT2JqZWN0LmtleXMoZGF0YSkubWFwKGtleSA9PiB7IHJldHVybiB7IEtleTogR2V0S2V5KGFuYWx5dGljLCBrZXkpLCBTaG93OiBTaG93UGF0aChhbmFseXRpYyxrZXkpLCBDb2xvcjogR2V0Q29sb3Ioa2V5KSwgRGF0YTogZGF0YVtrZXldIH0gfSk7XHJcbiAgICAgICAgICAgIHNldEFuYWx0eWljRGF0YShyZXR1cm5EYXRhKVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoaGFuZGxlLmFib3J0ICE9IHVuZGVmaW5lZCkgaGFuZGxlLmFib3J0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSwgW3Byb3BzLkV2ZW50SUQsIGFuYWx5dGljLCBoYXJtb25pY10pO1xyXG5cclxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgaWYgKGNvbXBhcmVFdmVudElEID09IDApIHtcclxuICAgICAgICAgICAgc2V0Q29tcGFyZVZvbHRhZ2VEYXRhKFtdKTtcclxuICAgICAgICAgICAgc2V0Q29tcGFyZUN1cnJlbnREYXRhKFtdKTtcclxuICAgICAgICAgICAgc2V0Q29tcGFyZUFuYWx0eWljRGF0YShbXSk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBoYW5kbGUxID0gR2V0V2F2ZWZvcm1EYXRhKCdDdXJyZW50JywgY29tcGFyZUV2ZW50SUQpO1xyXG4gICAgICAgIGhhbmRsZTEuZG9uZShkYXRhID0+IHtcclxuICAgICAgICAgICAgbGV0IHJldHVybkRhdGEgPSBPYmplY3Qua2V5cyhkYXRhKS5tYXAoa2V5ID0+IHsgcmV0dXJuIHsgS2V5OiBHZXRLZXkoJ0N1cnJlbnQnLCBrZXkpLCBTaG93OiBmYWxzZSwgQ29sb3I6IEdldENvbXBhcmVDb2xvcihrZXkpLCBEYXRhOiBkYXRhW2tleV0gfSB9KTtcclxuICAgICAgICAgICAgc2V0Q29tcGFyZUN1cnJlbnREYXRhKHJldHVybkRhdGEpXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGxldCBoYW5kbGUyID0gR2V0V2F2ZWZvcm1EYXRhKCdWb2x0YWdlJywgY29tcGFyZUV2ZW50SUQpO1xyXG4gICAgICAgIGhhbmRsZTIuZG9uZShkYXRhID0+IHtcclxuICAgICAgICAgICAgbGV0IHJldHVybkRhdGEgPSBPYmplY3Qua2V5cyhkYXRhKS5tYXAoa2V5ID0+IHsgcmV0dXJuIHsgS2V5OiBHZXRLZXkoJ1ZvbHRhZ2UnLCBrZXkpLCBTaG93OiBmYWxzZSwgQ29sb3I6IEdldENvbXBhcmVDb2xvcihrZXkpLCBEYXRhOiBkYXRhW2tleV0gfSB9KTtcclxuICAgICAgICAgICAgc2V0Q29tcGFyZVZvbHRhZ2VEYXRhKHJldHVybkRhdGEpXHJcbiAgICAgICAgfSk7XHJcblxyXG5cclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoaGFuZGxlMS5hYm9ydCAhPSB1bmRlZmluZWQpIGhhbmRsZTEuYWJvcnQoKTtcclxuICAgICAgICAgICAgaWYgKGhhbmRsZTIuYWJvcnQgIT0gdW5kZWZpbmVkKSBoYW5kbGUyLmFib3J0KCk7XHJcblxyXG4gICAgICAgIH1cclxuICAgIH0sIFtjb21wYXJlRXZlbnRJRF0pO1xyXG5cclxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgbGV0IGhhbmRsZSA9IEdldEFuYWx5dGljRGF0YShhbmFseXRpYywgY29tcGFyZUV2ZW50SUQpO1xyXG4gICAgICAgIGhhbmRsZS5kb25lKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICBsZXQgcmV0dXJuRGF0YSA9IE9iamVjdC5rZXlzKGRhdGEpLm1hcChrZXkgPT4geyByZXR1cm4geyBLZXk6IEdldEtleShhbmFseXRpYywga2V5KSwgU2hvdzogZmFsc2UsIENvbG9yOiBHZXRDb21wYXJlQ29sb3Ioa2V5KSwgRGF0YTogZGF0YVtrZXldIH0gfSk7XHJcbiAgICAgICAgICAgIHNldENvbXBhcmVBbmFsdHlpY0RhdGEocmV0dXJuRGF0YSlcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKGhhbmRsZS5hYm9ydCAhPSB1bmRlZmluZWQpIGhhbmRsZS5hYm9ydCgpO1xyXG4gICAgICAgIH1cclxuICAgIH0sIFtjb21wYXJlRXZlbnRJRCwgYW5hbHl0aWMsIGhhcm1vbmljXSk7XHJcblxyXG4gICAgZnVuY3Rpb24gR2V0V2F2ZWZvcm1EYXRhKHR5cGU6ICdDdXJyZW50JyB8ICdWb2x0YWdlJywgaWQ6IG51bWJlcik6IEpRdWVyeS5qcVhIUjxvYmplY3Q+IHtcclxuICAgICAgICByZXR1cm4gJC5hamF4KHtcclxuICAgICAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICAgICAgdXJsOiBgJHtob21lUGF0aH1hcGkvT3BlblhEQS9FdmVudC9XYXZlZm9ybS8ke2lkfS8ke3R5cGV9LyR7d2F2ZWZvcm1XaWR0aH1gLFxyXG4gICAgICAgICAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04XCIsXHJcbiAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsXHJcbiAgICAgICAgICAgIGNhY2hlOiB0cnVlLFxyXG4gICAgICAgICAgICBhc3luYzogdHJ1ZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIEdldEFuYWx5dGljRGF0YSh0eXBlOiBzdHJpbmcsIGlkOiBudW1iZXIpOiBKUXVlcnkuanFYSFI8b2JqZWN0PiB7XHJcbiAgICAgICAgcmV0dXJuICQuYWpheCh7XHJcbiAgICAgICAgICAgIHR5cGU6IFwiR0VUXCIsXHJcbiAgICAgICAgICAgIHVybDogYCR7aG9tZVBhdGh9YXBpL09wZW5YREEvRXZlbnQvQW5hbHl0aWMvJHt0eXBlfS8ke2lkfSR7KHR5cGUgPT0gJ1NwZWNpZmllZEhhcm1vbmljJz8gJy8nICsgaGFybW9uaWM6ICcnKX0vJHt3YXZlZm9ybVdpZHRofWAsXHJcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcIixcclxuICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcclxuICAgICAgICAgICAgY2FjaGU6IHRydWUsXHJcbiAgICAgICAgICAgIGFzeW5jOiB0cnVlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gSGFuZGxlUmVzZXQoKSB7XHJcbiAgICAgICAgc2V0RXh0ZW50cyh7IFg6IHsgTWluOiBudWxsLCBNYXg6IG51bGwgfSwgWTogeyBNaW46IG51bGwsIE1heDogbnVsbCB9fSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gSGFuZGxlQ2hhcnRBY3Rpb24odmFsdWU6IG51bWJlciB8IFBRRGlnZXN0LkQzRXh0ZW50KSB7XHJcbiAgICAgICAgaWYgKGNoYXJ0QWN0aW9uID09ICdDbGljaycgJiYgdHlwZW9mKHZhbHVlKSA9PSAnbnVtYmVyJykge1xyXG4gICAgICAgICAgICBzZXRDbGljayh2YWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYodHlwZW9mKHZhbHVlKSA9PSAnb2JqZWN0JylcclxuICAgICAgICAgICAgc2V0RXh0ZW50cyh2YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gSGFuZGxlRXhwb3J0Q1NWKCkge1xyXG5cclxuICAgICAgICB2YXIgcmVxID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICAgICAgcmVxLm9wZW4oXCJHRVRcIiwgYCR7aG9tZVBhdGh9YXBpL09wZW5YREEvRXZlbnQvQ1NWLyR7cHJvcHMuRXZlbnRJRH1gLCB0cnVlKTtcclxuICAgICAgICByZXEucmVzcG9uc2VUeXBlID0gXCJibG9iXCI7XHJcbiAgICAgICAgcmVxLm9ubG9hZCA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICB2YXIgYmxvYiA9IHJlcS5yZXNwb25zZTtcclxuICAgICAgICAgICAgdmFyIGZpbGVOYW1lID0gcmVxLmdldFJlc3BvbnNlSGVhZGVyKFwiZmlsZU5hbWVcIikgLy9pZiB5b3UgaGF2ZSB0aGUgZmlsZU5hbWUgaGVhZGVyIGF2YWlsYWJsZVxyXG4gICAgICAgICAgICB2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcclxuICAgICAgICAgICAgbGluay5ocmVmID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XHJcbiAgICAgICAgICAgIGxpbmsuZG93bmxvYWQgPSBmaWxlTmFtZTtcclxuICAgICAgICAgICAgbGluay5jbGljaygpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJlcS5zZW5kKCk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIiBzdHlsZT17e2hlaWdodDogXCIxMDAlXCIsIG1hcmdpbjogJzVweCA1cHggNXB4IDVweCAnfX0+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiXCIgc3R5bGU9e3sgcGFkZGluZzogJzBweCAycHggMHB4IDBweCcsIHdpZHRoOiBpbmZvV2lkdGggfX0+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtaGVhZGVyXCI+SW5mbzwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1ib2R5XCIgc3R5bGU9e3sgcGFkZGluZzogMCwgbWF4SGVpZ2h0OiAod2luZG93LmlubmVySGVpZ2h0IC0gMjk2KSAvIDIgKyAyNSwgaGVpZ2h0OiAod2luZG93LmlubmVySGVpZ2h0IC0gMjk2KSAvIDIgKyAyNSwgb3ZlcmZsb3dZOiAnaGlkZGVuJyB9fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPEluZm8gRXZlbnRJRD17cHJvcHMuRXZlbnRJRH0gLz5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWhlYWRlclwiPkJyb3dzZSBFdmVudHM8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtYm9keVwiIHN0eWxlPXt7IHBhZGRpbmc6IDAsIG1heEhlaWdodDogKHdpbmRvdy5pbm5lckhlaWdodCAtIDI5NikgLyA0IC0gNzUsIGhlaWdodDogKHdpbmRvdy5pbm5lckhlaWdodCAtIDI5NikgLyA0IC0gNzUsIG92ZXJmbG93WTogJ2hpZGRlbicgfX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCcm93c2VFdmVudHMgRXZlbnRJRD17cHJvcHMuRXZlbnRJRH0vPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtaGVhZGVyXCI+Q29tcGFyZTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1ib2R5XCIgc3R5bGU9e3sgcGFkZGluZzogMCwgbWF4SGVpZ2h0OiAod2luZG93LmlubmVySGVpZ2h0IC0gMjk2KSAvIDQgKyA1MCwgaGVpZ2h0OiAod2luZG93LmlubmVySGVpZ2h0IC0gMjk2KSAvIDQgKyA1MCwgb3ZlcmZsb3dZOiAnaGlkZGVuJyB9fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPENvbXBhcmFibGVFdmVudHMgRXZlbnRJRD17cHJvcHMuRXZlbnRJRH0gQ29tcGFyYWJsZUV2ZW50SUQ9e2NvbXBhcmVFdmVudElEfSBPbkNoYW5nZT17KGlkKSA9PiBzZXRDb21wYXJlRXZlbnRJRChpZCl9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiXCIgc3R5bGU9e3sgcGFkZGluZzogJzBweCAycHggMHB4IDBweCcsIHdpZHRoOiB3YXZlZm9ybVdpZHRoIH19PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWhlYWRlclwiIHN0eWxlPXt7IHBhZGRpbmdCb3R0b206IDksIHBhZGRpbmdUb3A6IDkgfX0gPldhdmVmb3Jtc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInB1bGwtcmlnaHRcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1jaGVjay1pbmxpbmVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiZm9ybS1jaGVjay1sYWJlbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgY2xhc3NOYW1lPVwiZm9ybS1jaGVjay1pbnB1dFwiIGNoZWNrZWQ9e2NoYXJ0QWN0aW9uID09ICdDbGljayd9IG9uQ2hhbmdlPXsoZXZ0KSA9PiBzZXRDaGFydEFjdGlvbignQ2xpY2snKX0vPkNsaWNrXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWNoZWNrLWlubGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJmb3JtLWNoZWNrLWxhYmVsXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiBjbGFzc05hbWU9XCJmb3JtLWNoZWNrLWlucHV0XCIgY2hlY2tlZD17Y2hhcnRBY3Rpb24gPT0gJ1Bhbid9IG9uQ2hhbmdlPXsoZXZ0KSA9PiBzZXRDaGFydEFjdGlvbignUGFuJyl9Lz5QYW5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tY2hlY2staW5saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImZvcm0tY2hlY2stbGFiZWxcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIGNsYXNzTmFtZT1cImZvcm0tY2hlY2staW5wdXRcIiBjaGVja2VkPXtjaGFydEFjdGlvbiA9PSAnWm9vbVgnfSBvbkNoYW5nZT17KGV2dCkgPT4gc2V0Q2hhcnRBY3Rpb24oJ1pvb21YJyl9Lz5ab29tXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWNoZWNrLWlubGluZVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiZm9ybS1jaGVjay1sYWJlbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIGNsYXNzTmFtZT1cImZvcm0tY2hlY2staW5wdXRcIiBjaGVja2VkPXtjaGFydEFjdGlvbiA9PSAnWm9vbVknfSBvbkNoYW5nZT17KGV2dCkgPT4gc2V0Q2hhcnRBY3Rpb24oJ1pvb21ZJyl9IC8+Wm9vbSBZXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tY2hlY2staW5saW5lXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJmb3JtLWNoZWNrLWxhYmVsXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgY2xhc3NOYW1lPVwiZm9ybS1jaGVjay1pbnB1dFwiIGNoZWNrZWQ9e2NoYXJ0QWN0aW9uID09ICdab29tWFknfSBvbkNoYW5nZT17KGV2dCkgPT4gc2V0Q2hhcnRBY3Rpb24oJ1pvb21YWScpfSAvPlpvb20gWCAmIFlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKi99XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e0hhbmRsZVJlc2V0fT5SZXNldDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtIYW5kbGVFeHBvcnRDU1Z9PkV4cG9ydCBDU1Y8L2J1dHRvbj5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1ib2R5XCIgc3R5bGU9e3sgcGFkZGluZzogMCwgbWF4SGVpZ2h0OiAyICogKHdpbmRvdy5pbm5lckhlaWdodCAtIDI0NikgLyAzLCBoZWlnaHQ6IDIgKiAod2luZG93LmlubmVySGVpZ2h0IC0gMjQ2KSAvIDMsIG92ZXJmbG93WTogJ2hpZGRlbicgfX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgaGVpZ2h0OiAod2luZG93LmlubmVySGVpZ2h0IC0gMjQ2KSAvIDMsIHBvc2l0aW9uOiAncmVsYXRpdmUnIH19PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPExlZ2VuZCBUeXBlPSdWb2x0YWdlJyBQYXRocz17dm9sdGFnZURhdGF9IENvbXBhcmVEYXRhPXtmYWxzZX0gR2V0Q29sb3I9e0dldENvbG9yfSBDYWxsQmFjaz17KHBhdGgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgbmV3UGF0aHMgPSBfLmNsb25lKHZvbHRhZ2VEYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgbmV3UGF0aCA9IG5ld1BhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBwYXRoLktleSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3UGF0aC5TaG93ID0gIXBhdGguU2hvdztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRWb2x0YWdlRGF0YShuZXdQYXRocyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fSAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPExlZ2VuZCBUeXBlPSdWb2x0YWdlJyBQYXRocz17Y29tcGFyZVZvbHRhZ2VEYXRhfSBDb21wYXJlRGF0YT17dHJ1ZX0gR2V0Q29sb3I9e0dldENvbXBhcmVDb2xvcn0gQ2FsbEJhY2s9eyhwYXRoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5ld1BhdGhzID0gXy5jbG9uZShjb21wYXJlVm9sdGFnZURhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBuZXdQYXRoID0gbmV3UGF0aHMuZmluZCh4ID0+IHguS2V5ID09IHBhdGguS2V5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdQYXRoLlNob3cgPSAhcGF0aC5TaG93O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldENvbXBhcmVWb2x0YWdlRGF0YShuZXdQYXRocyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fSAvPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxXYXZlZm9ybVZpZXdlckQzQ2hhcnQgRXZlbnRJRD17cHJvcHMuRXZlbnRJRH0gRGF0YT17dm9sdGFnZURhdGF9IENvbXBhcmVEYXRhPXtjb21wYXJlVm9sdGFnZURhdGF9IENoYXJ0QWN0aW9uPXtjaGFydEFjdGlvbn0gRXh0ZW50PXtleHRlbnRzfSBVbml0cz1cIlZvbHRzXCIgRGF0YVR5cGU9XCJUaW1lXCIgSGVpZ2h0PXsod2luZG93LmlubmVySGVpZ2h0IC0gMjQ2KSAvIDN9IFdpZHRoPXt3YXZlZm9ybVdpZHRoIC0gNH0gTWFyZ2luPXt7IFRvcDogMTAsIEJvdHRvbTogMzAsIExlZnQ6IDUwLCBSaWdodDogMSB9fSBIb3Zlcj17aG92ZXJ9IFNldEhvdmVyPXsodmFsdWUpID0+IHNldEhvdmVyKHZhbHVlKX0gQ2xpY2s9e2NsaWNrfSBIYW5kbGVDaGFydEFjdGlvbj17SGFuZGxlQ2hhcnRBY3Rpb259IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGhlaWdodDogKHdpbmRvdy5pbm5lckhlaWdodCAtIDI0NikgLyAzLCBwb3NpdGlvbjogJ3JlbGF0aXZlJyB9fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMZWdlbmQgVHlwZT0nQ3VycmVudCcgUGF0aHM9e2N1cnJlbnREYXRhfSBDb21wYXJlRGF0YT17ZmFsc2V9IEdldENvbG9yPXtHZXRDb2xvcn0gQ2FsbEJhY2s9eyhwYXRoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5ld1BhdGhzID0gXy5jbG9uZShjdXJyZW50RGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5ld1BhdGggPSBuZXdQYXRocy5maW5kKHggPT4geC5LZXkgPT0gcGF0aC5LZXkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1BhdGguU2hvdyA9ICFwYXRoLlNob3c7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0Q3VycmVudERhdGEobmV3UGF0aHMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMZWdlbmQgVHlwZT0nQ3VycmVudCcgUGF0aHM9e2NvbXBhcmVDdXJyZW50RGF0YX0gQ29tcGFyZURhdGE9e3RydWV9IEdldENvbG9yPXtHZXRDb21wYXJlQ29sb3J9IENhbGxCYWNrPXsocGF0aCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBuZXdQYXRocyA9IF8uY2xvbmUoY29tcGFyZUN1cnJlbnREYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgbmV3UGF0aCA9IG5ld1BhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBwYXRoLktleSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3UGF0aC5TaG93ID0gIXBhdGguU2hvdztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRDb21wYXJlQ3VycmVudERhdGEobmV3UGF0aHMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0gLz5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8V2F2ZWZvcm1WaWV3ZXJEM0NoYXJ0IEV2ZW50SUQ9e3Byb3BzLkV2ZW50SUR9IERhdGE9e2N1cnJlbnREYXRhfSBDb21wYXJlRGF0YT17Y29tcGFyZUN1cnJlbnREYXRhfSBDaGFydEFjdGlvbj17Y2hhcnRBY3Rpb259IEV4dGVudD17ZXh0ZW50c30gVW5pdHM9XCJBbXBzXCIgRGF0YVR5cGU9XCJUaW1lXCIgSGVpZ2h0PXsod2luZG93LmlubmVySGVpZ2h0IC0gMjQ2KSAvIDN9IFdpZHRoPXt3YXZlZm9ybVdpZHRoIC0gNH0gTWFyZ2luPXt7IFRvcDogMTAsIEJvdHRvbTogMzAsIExlZnQ6IDUwLCBSaWdodDogMSB9fSBIb3Zlcj17aG92ZXJ9IFNldEhvdmVyPXsodmFsdWUpID0+IHNldEhvdmVyKHZhbHVlKX0gQ2xpY2s9e2NsaWNrfSBIYW5kbGVDaGFydEFjdGlvbj17SGFuZGxlQ2hhcnRBY3Rpb259IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1oZWFkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCB2YWx1ZT17YW5hbHl0aWN9IG9uQ2hhbmdlPXsoZXZ0KSA9PiBzZXRBbmFseXRpYyhldnQudGFyZ2V0LnZhbHVlIGFzIFBRRGlnZXN0LkFuYWx0eWljKX0gc3R5bGU9e3t3aWR0aDogMjAwfX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiUG93ZXJcIj5Qb3dlcjwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIkZyZXF1ZW5jeVwiPkZyZXF1ZW5jeTwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlJhcGlkVm9sdGFnZUNoYW5nZVwiPlJhcGlkIFZvbHRhZ2UgQ2hhbmdlPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiU3BlY2lmaWVkSGFybW9uaWNcIj5TcGVjaWZpZWQgSGFybW9uaWM8L29wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJTeW1tZXRyaWNhbENvbXBvbmVudHNcIj5TeW1tZXRyaWNhbCBDb21wb25lbnRzPC9vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiVEhEXCI+VG90YWwgSGFybW9uaWMgRGlzdG9ydGlvbjwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlVuYmFsYW5jZVwiPlVuYmFsYW5jZTwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCB2YWx1ZT17aGFybW9uaWN9IG9uQ2hhbmdlPXsoZXZ0KSA9PiBzZXRIYXJtb25pYyhwYXJzZUludChldnQudGFyZ2V0LnZhbHVlKSl9IGhpZGRlbj17YW5hbHl0aWMgIT0gJ1NwZWNpZmllZEhhcm1vbmljJ30+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShBcnJheSg0MCksICh4LCBpKSA9PiA8b3B0aW9uIGtleT17aX0gdmFsdWU9e2l9PntpfTwvb3B0aW9uPilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1ib2R5XCIgc3R5bGU9e3sgcGFkZGluZzogMCwgbWF4SGVpZ2h0OiAod2luZG93LmlubmVySGVpZ2h0IC0gMjQ2KSAvIDMsIGhlaWdodDogKHdpbmRvdy5pbm5lckhlaWdodCAtIDI0NikgLyAzLCBvdmVyZmxvd1k6ICdoaWRkZW4nIH19PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGhlaWdodDogKHdpbmRvdy5pbm5lckhlaWdodCAtIDI0NikgLyAzLCBwb3NpdGlvbjogJ3JlbGF0aXZlJyB9fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMZWdlbmQgVHlwZT17YW5hbHl0aWN9IFBhdGhzPXthbmFseXRpY0RhdGF9IENvbXBhcmVEYXRhPXtmYWxzZX0gR2V0Q29sb3I9e0dldENvbG9yfSBDYWxsQmFjaz17KHBhdGgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgbmV3UGF0aHMgPSBfLmNsb25lKGFuYWx5dGljRGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5ld1BhdGggPSBuZXdQYXRocy5maW5kKHggPT4geC5LZXkgPT0gcGF0aC5LZXkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1BhdGguU2hvdyA9ICFwYXRoLlNob3c7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0QW5hbHR5aWNEYXRhKG5ld1BhdGhzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TGVnZW5kIFR5cGU9e2FuYWx5dGljfSBQYXRocz17Y29tcGFyZUFuYWx0eWljRGF0YX0gQ29tcGFyZURhdGE9e3RydWV9IEdldENvbG9yPXtHZXRDb21wYXJlQ29sb3J9IENhbGxCYWNrPXsocGF0aCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBuZXdQYXRocyA9IF8uY2xvbmUoY29tcGFyZUFuYWx0eWljRGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5ld1BhdGggPSBuZXdQYXRocy5maW5kKHggPT4geC5LZXkgPT0gcGF0aC5LZXkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1BhdGguU2hvdyA9ICFwYXRoLlNob3c7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0Q29tcGFyZUFuYWx0eWljRGF0YShuZXdQYXRocyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fSAvPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxXYXZlZm9ybVZpZXdlckQzQ2hhcnQgRXZlbnRJRD17cHJvcHMuRXZlbnRJRH0gRGF0YT17YW5hbHl0aWNEYXRhfSBDb21wYXJlRGF0YT17Y29tcGFyZUFuYWx0eWljRGF0YX0gQ2hhcnRBY3Rpb249e2NoYXJ0QWN0aW9ufSBFeHRlbnQ9e2V4dGVudHN9IFVuaXRzPXtHZXRVbml0cyhhbmFseXRpYyl9IERhdGFUeXBlPVwiVGltZVwiIEhlaWdodD17KHdpbmRvdy5pbm5lckhlaWdodCAtIDI0NikgLyAzfSBXaWR0aD17d2F2ZWZvcm1XaWR0aCAtIDR9IE1hcmdpbj17eyBUb3A6IDEwLCBCb3R0b206IDMwLCBMZWZ0OiA1MCwgUmlnaHQ6IDEgfX0gSG92ZXI9e2hvdmVyfSBTZXRIb3Zlcj17KHZhbHVlKSA9PiBzZXRIb3Zlcih2YWx1ZSl9IENsaWNrPXtjbGlja30gSGFuZGxlQ2hhcnRBY3Rpb249e0hhbmRsZUNoYXJ0QWN0aW9ufSAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiIHN0eWxlPXt7IHBhZGRpbmc6ICcwcHggMnB4IDBweCAwcHgnLCB3aWR0aDogcG9pbnRzV2lkdGggfX0+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtaGVhZGVyXCI+e2NsaWNrIDwgMCA/ICdDbGljayB0byBnZXQgdmFsdWVzIC4uLicgOiAnVmFsdWVzIGF0ICcgKyBtb21lbnQudXRjKGNsaWNrKS5mb3JtYXQoJ01NL0REL1lZWVkgSEg6bW06c3MuU1NTUycpICsgJyAoQ1NUKSd9PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWJvZHlcIiBzdHlsZT17eyBwYWRkaW5nOiAwLCBtYXhIZWlnaHQ6ICh3aW5kb3cuaW5uZXJIZWlnaHQgLSAyNDYpIC8gMiwgaGVpZ2h0OiAod2luZG93LmlubmVySGVpZ2h0IC0gMjQ2KSAvIDIsIG92ZXJmbG93WTogJ2F1dG8nIH19PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwidGFibGVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dm9sdGFnZURhdGEuZmlsdGVyKHggPT4geC5TaG93KS5tYXAoeCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPHRyIGtleT17eC5LZXl9Pjx0ZD57eC5LZXl9PC90ZD48dGQ+e3guRGF0YVtiaXNlY3QoeC5EYXRhLm1hcCh4ID0+IHhbMF0pLCBjbGljayldWzFdLnRvRml4ZWQoMil9PC90ZD48L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhdGNoeyByZXR1cm4gbnVsbCB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSl9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2N1cnJlbnREYXRhLmZpbHRlcih4ID0+IHguU2hvdykubWFwKHggPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDx0ciBrZXk9e3guS2V5fT48dGQ+e3guS2V5fTwvdGQ+PHRkPnt4LkRhdGFbYmlzZWN0KHguRGF0YS5tYXAoeCA9PiB4WzBdKSwgY2xpY2spXVsxXS50b0ZpeGVkKDIpfTwvdGQ+PC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXRjaHsgcmV0dXJuIG51bGwgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1oZWFkZXJcIj5QaGFzb3I8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtYm9keVwiIHN0eWxlPXt7IHBhZGRpbmc6IDAsIG1heEhlaWdodDogKHdpbmRvdy5pbm5lckhlaWdodCAtIDI0NikvMiwgaGVpZ2h0OiAod2luZG93LmlubmVySGVpZ2h0IC0gMjQ2KS8yLCBvdmVyZmxvd1k6ICdoaWRkZW4nIH19PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8UG9sYXJDaGFydCBIZWlnaHQ9eyh3aW5kb3cuaW5uZXJIZWlnaHQgLSAyNDYpIC8gMn0gV2lkdGg9e3BvaW50c1dpZHRoIC0gNX0gVGltZT17Y2xpY2t9IFZvbHRhZ2VEYXRhPXt2b2x0YWdlRGF0YX0gQ3VycmVudERhdGE9e2N1cnJlbnREYXRhfS8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuXHJcblxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICApXHJcbn1cclxuXHJcbmZ1bmN0aW9uIEdldFVuaXRzKHR5cGU6IFBRRGlnZXN0LkFuYWx0eWljKTogc3RyaW5nIHtcclxuICAgIGlmICh0eXBlID09ICdGcmVxdWVuY3knKSByZXR1cm4gJ0h6JztcclxuICAgIGVsc2UgaWYgKHR5cGUgPT0gJ1Bvd2VyJykgcmV0dXJuICdXL1ZBL3BmL1ZBUic7XHJcbiAgICBlbHNlIGlmICh0eXBlID09ICdSYXBpZFZvbHRhZ2VDaGFuZ2UnKSByZXR1cm4gJ1ZvbHRzJztcclxuICAgIGVsc2UgaWYgKHR5cGUgPT0gJ1NwZWNpZmllZEhhcm1vbmljJykgcmV0dXJuICdWb2x0cy9BbXBzL0RlZ3JlZXMnO1xyXG4gICAgZWxzZSBpZiAodHlwZSA9PSAnU3ltbWV0cmljYWxDb21wb25lbnRzJykgcmV0dXJuICdWb2x0cy9BbXBzJztcclxuICAgIGVsc2UgaWYgKHR5cGUgPT0gJ1RIRCcpIHJldHVybiAnVm9sdHMvQW1wcyc7XHJcbiAgICBlbHNlIGlmICh0eXBlID09ICdVbmJhbGFuY2UnKSByZXR1cm4gJyc7XHJcbiAgICBlbHNlIHJldHVybiAnJztcclxufVxyXG5cclxuZnVuY3Rpb24gU2hvd1BhdGgodHlwZTogJ1ZvbHRhZ2UnIHwgJ0N1cnJlbnQnIHwgUFFEaWdlc3QuQW5hbHR5aWMsIGxhYmVsOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgIGlmICh0eXBlID09ICdWb2x0YWdlJyB8fCB0eXBlID09ICdDdXJyZW50JyB8fCB0eXBlID09ICdSYXBpZFZvbHRhZ2VDaGFuZ2UnKSB7XHJcbiAgICAgICAgaWYgKGxhYmVsLm1hdGNoKC9eW1ZJXVtBQkNdTiQvZykgIT0gbnVsbCkgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmICh0eXBlID09ICdGcmVxdWVuY3knICYmIGxhYmVsID09ICdBdmVyYWdlJykgcmV0dXJuIHRydWU7XHJcbiAgICBlbHNlIGlmICh0eXBlID09ICdQb3dlcicpIHtcclxuICAgICAgICBpZiAobGFiZWwubWF0Y2goL0FjdGl2ZSBQb3dlci9nKSAhPSBudWxsKSByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHR5cGUgPT0gJ1NwZWNpZmllZEhhcm1vbmljJykge1xyXG4gICAgICAgIGlmIChsYWJlbC5tYXRjaCgvVltBQkNdTiBNYWcvZykgIT0gbnVsbCkgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmICh0eXBlID09ICdTeW1tZXRyaWNhbENvbXBvbmVudHMnICYmIGxhYmVsLmluZGV4T2YoJ1ZvbHRhZ2UnKSA+PSAwKSByZXR1cm4gdHJ1ZTtcclxuICAgIGVsc2UgaWYgKHR5cGUgPT0gJ1RIRCcgJiYgbGFiZWwuaW5kZXhPZignVicpID49IDApIHJldHVybiB0cnVlO1xyXG4gICAgZWxzZSBpZiAodHlwZSA9PSAnVW5iYWxhbmNlJyAmJiBsYWJlbC5pbmRleE9mKCdWb2x0YWdlJykgPj0gMCkgcmV0dXJuIHRydWU7XHJcblxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG59XHJcblxyXG5mdW5jdGlvbiBHZXRLZXkodHlwZTogJ1ZvbHRhZ2UnIHwgJ0N1cnJlbnQnIHwgUFFEaWdlc3QuQW5hbHR5aWMsIGxhYmVsOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgY29uc3QgcHJlZml4ID0gdHlwZSA9PSAnVm9sdGFnZScgPyAnVicgOiAnSSc7XHJcbiAgICBpZiAoKHR5cGUgPT0gJ1ZvbHRhZ2UnIHx8IHR5cGUgPT0gJ0N1cnJlbnQnICkgJiYgbGFiZWwgPT0gYCR7cHJlZml4fUFOYCkgcmV0dXJuIGBXZi0ke3ByZWZpeH1BTmA7XHJcbiAgICBpZiAoKHR5cGUgPT0gJ1ZvbHRhZ2UnIHx8IHR5cGUgPT0gJ0N1cnJlbnQnICkgJiYgbGFiZWwgPT0gYCR7cHJlZml4fUJOYCkgcmV0dXJuIGBXZi0ke3ByZWZpeH1CTmA7XHJcbiAgICBpZiAoKHR5cGUgPT0gJ1ZvbHRhZ2UnIHx8IHR5cGUgPT0gJ0N1cnJlbnQnICkgJiYgbGFiZWwgPT0gYCR7cHJlZml4fUNOYCkgcmV0dXJuIGBXZi0ke3ByZWZpeH1DTmA7XHJcbiAgICBpZiAoKHR5cGUgPT0gJ1ZvbHRhZ2UnIHx8IHR5cGUgPT0gJ0N1cnJlbnQnICkgJiYgbGFiZWwgPT0gYCR7cHJlZml4fUFCYCkgcmV0dXJuIGBXZi0ke3ByZWZpeH1BQmA7XHJcbiAgICBpZiAoKHR5cGUgPT0gJ1ZvbHRhZ2UnIHx8IHR5cGUgPT0gJ0N1cnJlbnQnICkgJiYgbGFiZWwgPT0gYCR7cHJlZml4fUJDYCkgcmV0dXJuIGBXZi0ke3ByZWZpeH1CQ2A7XHJcbiAgICBpZiAoKHR5cGUgPT0gJ1ZvbHRhZ2UnIHx8IHR5cGUgPT0gJ0N1cnJlbnQnICkgJiYgbGFiZWwgPT0gYCR7cHJlZml4fUNBYCkgcmV0dXJuIGBXZi0ke3ByZWZpeH1DQWA7XHJcbiAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fU5HYCkgcmV0dXJuIGBXZi0ke3ByZWZpeH1OR2A7XHJcbiAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fVJFU2ApIHJldHVybiBgV2YtJHtwcmVmaXh9UkVTYDtcclxuICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9QU4gUk1TYCkgcmV0dXJuIGBSTVMtJHtwcmVmaXh9QU5gO1xyXG4gICAgaWYgKGxhYmVsID09IGAke3ByZWZpeH1CTiBSTVNgKSByZXR1cm4gYFJNUy0ke3ByZWZpeH1CTmA7XHJcbiAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUNOIFJNU2ApIHJldHVybiBgUk1TLSR7cHJlZml4fUNOYDtcclxuICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9QUIgUk1TYCkgcmV0dXJuIGBSTVMtJHtwcmVmaXh9QUJgO1xyXG4gICAgaWYgKGxhYmVsID09IGAke3ByZWZpeH1CQyBSTVNgKSByZXR1cm4gYFJNUy0ke3ByZWZpeH1CQ2A7XHJcbiAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUNBIFJNU2ApIHJldHVybiBgUk1TLSR7cHJlZml4fUNBYDtcclxuICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9TkcgUk1TYCkgcmV0dXJuIGBSTVMtJHtwcmVmaXh9TkdgO1xyXG4gICAgaWYgKGxhYmVsID09IGAke3ByZWZpeH1SRVMgUk1TYCkgcmV0dXJuIGBSTVMtJHtwcmVmaXh9UkVTYDtcclxuICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9QU4gUGhhc2VgKSByZXR1cm4gYFBoLSR7cHJlZml4fUFOYDtcclxuICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9Qk4gUGhhc2VgKSByZXR1cm4gYFBoLSR7cHJlZml4fUJOYDtcclxuICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9Q04gUGhhc2VgKSByZXR1cm4gYFBoLSR7cHJlZml4fUNOYDtcclxuICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9QUIgUGhhc2VgKSByZXR1cm4gYFBoLSR7cHJlZml4fUFCYDtcclxuICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9QkMgUGhhc2VgKSByZXR1cm4gYFBoLSR7cHJlZml4fUJDYDtcclxuICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9Q0EgUGhhc2VgKSByZXR1cm4gYFBoLSR7cHJlZml4fUNBYDtcclxuICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9TkcgUGhhc2VgKSByZXR1cm4gYFBoLSR7cHJlZml4fU5HYDtcclxuICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9UkVTIFBoYXNlYCkgcmV0dXJuIGBQaC0ke3ByZWZpeH1SRVNgO1xyXG4gICAgaWYgKGxhYmVsID09IGAke3ByZWZpeH1BTiBBbXBsaXR1ZGVgKSByZXR1cm4gYEFtcC0ke3ByZWZpeH1BTmA7XHJcbiAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUJOIEFtcGxpdHVkZWApIHJldHVybiBgQW1wLSR7cHJlZml4fUJOYDtcclxuICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9Q04gQW1wbGl0dWRlYCkgcmV0dXJuIGBBbXAtJHtwcmVmaXh9Q05gO1xyXG4gICAgaWYgKGxhYmVsID09IGAke3ByZWZpeH1BQiBBbXBsaXR1ZGVgKSByZXR1cm4gYEFtcC0ke3ByZWZpeH1BQmA7XHJcbiAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUJDIEFtcGxpdHVkZWApIHJldHVybiBgQW1wLSR7cHJlZml4fUJDYDtcclxuICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9Q0EgQW1wbGl0dWRlYCkgcmV0dXJuIGBBbXAtJHtwcmVmaXh9Q0FgO1xyXG4gICAgaWYgKGxhYmVsID09IGAke3ByZWZpeH1ORyBBbXBsaXR1ZGVgKSByZXR1cm4gYEFtcC0ke3ByZWZpeH1OR2A7XHJcbiAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fVJFUyBBbXBsaXR1ZGVgKSByZXR1cm4gYEFtcC0ke3ByZWZpeH1SRVNgO1xyXG4gICAgaWYgKGxhYmVsID09IGBBTiBBY3RpdmUgUG93ZXJgKSByZXR1cm4gYEFOLVdgO1xyXG4gICAgaWYgKGxhYmVsID09IGBCTiBBY3RpdmUgUG93ZXJgKSByZXR1cm4gYEJOLVdgO1xyXG4gICAgaWYgKGxhYmVsID09IGBDTiBBY3RpdmUgUG93ZXJgKSByZXR1cm4gYENOLVdgO1xyXG4gICAgaWYgKGxhYmVsID09IGBUb3RhbCBBY3RpdmUgUG93ZXJgKSByZXR1cm4gYFRvdGFsLVdgO1xyXG4gICAgaWYgKGxhYmVsID09IGBBTiBBcHBhcmVudCBQb3dlcmApIHJldHVybiBgQU4tVkFgO1xyXG4gICAgaWYgKGxhYmVsID09IGBCTiBBcHBhcmVudCBQb3dlcmApIHJldHVybiBgQk4tVkFgO1xyXG4gICAgaWYgKGxhYmVsID09IGBDTiBBcHBhcmVudCBQb3dlcmApIHJldHVybiBgQ04tVkFgO1xyXG4gICAgaWYgKGxhYmVsID09IGBUb3RhbCBBcHBhcmVudCBQb3dlcmApIHJldHVybiBgVG90YWwtVkFgO1xyXG4gICAgaWYgKGxhYmVsID09IGBBTiBSZWFjdGl2ZSBQb3dlcmApIHJldHVybiBgQU4tVkFSYDtcclxuICAgIGlmIChsYWJlbCA9PSBgQk4gUmVhY3RpdmUgUG93ZXJgKSByZXR1cm4gYEJOLVZBUmA7XHJcbiAgICBpZiAobGFiZWwgPT0gYENOIFJlYWN0aXZlIFBvd2VyYCkgcmV0dXJuIGBDTi1WQVJgO1xyXG4gICAgaWYgKGxhYmVsID09IGBUb3RhbCBSZWFjdGl2ZSBQb3dlcmApIHJldHVybiBgVG90YWwtVkFSYDtcclxuICAgIGlmIChsYWJlbCA9PSBgQU4gUG93ZXIgRmFjdG9yYCkgcmV0dXJuIGBBTi1QRmA7XHJcbiAgICBpZiAobGFiZWwgPT0gYEJOIFBvd2VyIEZhY3RvcmApIHJldHVybiBgQk4tUEZgO1xyXG4gICAgaWYgKGxhYmVsID09IGBDTiBQb3dlciBGYWN0b3JgKSByZXR1cm4gYENOLVBGYDtcclxuICAgIGlmIChsYWJlbCA9PSBgVG90YWwgUG93ZXIgRmFjdG9yYCkgcmV0dXJuIGBUb3RhbC1QRmA7XHJcblxyXG4gICAgZWxzZSByZXR1cm4gbGFiZWw7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIEdldENvbG9yKGxhYmVsKSB7XHJcbiAgICBpZiAobGFiZWwuaW5kZXhPZignVkEnKSA+PSAwKSByZXR1cm4gJyNBMzAwMDAnO1xyXG4gICAgaWYgKGxhYmVsLmluZGV4T2YoJ1ZCJykgPj0gMCkgcmV0dXJuICcjMDAyOUEzJztcclxuICAgIGlmIChsYWJlbC5pbmRleE9mKCdWQycpID49IDApIHJldHVybiAnIzAwN0EyOSc7XHJcbiAgICBpZiAobGFiZWwuaW5kZXhPZignVk4nKSA+PSAwKSByZXR1cm4gJyNjM2MzYzMnO1xyXG4gICAgaWYgKGxhYmVsLmluZGV4T2YoJ0lBJykgPj0gMCkgcmV0dXJuICcjRkYwMDAwJztcclxuICAgIGlmIChsYWJlbC5pbmRleE9mKCdJQicpID49IDApIHJldHVybiAnIzAwNjZDQyc7XHJcbiAgICBpZiAobGFiZWwuaW5kZXhPZignSUMnKSA+PSAwKSByZXR1cm4gJyMzM0NDMzMnO1xyXG4gICAgaWYgKGxhYmVsLmluZGV4T2YoJ0FOJykgPj0gMCkgcmV0dXJuICcjRkYwMDAwJztcclxuICAgIGlmIChsYWJlbC5pbmRleE9mKCdCTicpID49IDApIHJldHVybiAnIzAwNjZDQyc7XHJcbiAgICBpZiAobGFiZWwuaW5kZXhPZignQ04nKSA+PSAwKSByZXR1cm4gJyMzM0NDMzMnO1xyXG4gICAgaWYgKGxhYmVsLmluZGV4T2YoJ05HJykgPj0gMCkgcmV0dXJuICcjYzNjM2MzJztcclxuICAgIGlmIChsYWJlbC5pbmRleE9mKCdSRVMnKSA+PSAwKSByZXR1cm4gJyNmZmMxMDcnO1xyXG4gICAgaWYgKGxhYmVsLmluZGV4T2YoJ0F2ZXJhZ2UnKSA+PSAwKSByZXR1cm4gJyM5QTUyQTQnO1xyXG4gICAgaWYgKGxhYmVsLmluZGV4T2YoJ1RvdGFsJykgPj0gMCkgcmV0dXJuICcjOUE1MkE0JztcclxuICAgIGlmIChsYWJlbC5pbmRleE9mKCdTMCcpID49IDApIHJldHVybiAnI0EzMDAwMCc7XHJcbiAgICBpZiAobGFiZWwuaW5kZXhPZignUzInKSA+PSAwKSByZXR1cm4gJyMwMDdBMjknO1xyXG4gICAgaWYgKGxhYmVsLmluZGV4T2YoJ1MxJykgPj0gMCkgcmV0dXJuICcjMDAyOUEzJztcclxuXHJcbiAgICBlbHNlIHtcclxuICAgICAgICB2YXIgcmFuTnVtT25lID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjU2KS50b1N0cmluZygxNik7XHJcbiAgICAgICAgdmFyIHJhbk51bVR3byA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDI1NikudG9TdHJpbmcoMTYpO1xyXG4gICAgICAgIHZhciByYW5OdW1UaHJlZSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDI1NikudG9TdHJpbmcoMTYpO1xyXG5cclxuICAgICAgICByZXR1cm4gYCMkeyhyYW5OdW1PbmUubGVuZ3RoID4gMSA/IHJhbk51bU9uZSA6IFwiMFwiICsgcmFuTnVtT25lKX0keyhyYW5OdW1Ud28ubGVuZ3RoID4gMSA/IHJhbk51bVR3byA6IFwiMFwiICsgcmFuTnVtVHdvKX0keyhyYW5OdW1UaHJlZS5sZW5ndGggPiAxID8gcmFuTnVtVGhyZWUgOiBcIjBcIiArIHJhbk51bVRocmVlKX1gO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBHZXRDb21wYXJlQ29sb3IobGFiZWwpIHtcclxuICAgIGlmIChsYWJlbC5pbmRleE9mKCdWQScpID49IDApIHJldHVybiAnI0UzQTkwOSc7XHJcbiAgICBpZiAobGFiZWwuaW5kZXhPZignVkInKSA+PSAwKSByZXR1cm4gJyM5ODAwQTMnO1xyXG4gICAgaWYgKGxhYmVsLmluZGV4T2YoJ1ZDJykgPj0gMCkgcmV0dXJuICcjNzA3QTAwJztcclxuICAgIGlmIChsYWJlbC5pbmRleE9mKCdWTicpID49IDApIHJldHVybiAnI2MzYzNjMyc7XHJcbiAgICBpZiAobGFiZWwuaW5kZXhPZignSUEnKSA+PSAwKSByZXR1cm4gJyNGRjgwMDAnO1xyXG4gICAgaWYgKGxhYmVsLmluZGV4T2YoJ0lCJykgPj0gMCkgcmV0dXJuICcjQ0YxMkUwJztcclxuICAgIGlmIChsYWJlbC5pbmRleE9mKCdJQycpID49IDApIHJldHVybiAnI0ZGRkYwMCc7XHJcbiAgICBpZiAobGFiZWwuaW5kZXhPZignQU4nKSA+PSAwKSByZXR1cm4gJyNGRjgwMDAnO1xyXG4gICAgaWYgKGxhYmVsLmluZGV4T2YoJ0JOJykgPj0gMCkgcmV0dXJuICcjQ0YxMkUwJztcclxuICAgIGlmIChsYWJlbC5pbmRleE9mKCdDTicpID49IDApIHJldHVybiAnI0ZGRkYwMCc7XHJcbiAgICBpZiAobGFiZWwuaW5kZXhPZignTkcnKSA+PSAwKSByZXR1cm4gJyM2MzYxNjEnO1xyXG4gICAgaWYgKGxhYmVsLmluZGV4T2YoJ1JFUycpID49IDApIHJldHVybiAnIzA3RkZGRic7XHJcbiAgICBpZiAobGFiZWwuaW5kZXhPZignQXZlcmFnZScpID49IDApIHJldHVybiAnI0E0NTI4OSc7XHJcbiAgICBpZiAobGFiZWwuaW5kZXhPZignVG90YWwnKSA+PSAwKSByZXR1cm4gJyNBNDUyODknO1xyXG4gICAgaWYgKGxhYmVsLmluZGV4T2YoJ1MwJykgPj0gMCkgcmV0dXJuICcjRTNBOTA5JztcclxuICAgIGlmIChsYWJlbC5pbmRleE9mKCdTMScpID49IDApIHJldHVybiAnIzk4MDBBMyc7XHJcbiAgICBpZiAobGFiZWwuaW5kZXhPZignUzInKSA+PSAwKSByZXR1cm4gJyM3MDdBMDAnO1xyXG5cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHZhciByYW5OdW1PbmUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyNTYpLnRvU3RyaW5nKDE2KTtcclxuICAgICAgICB2YXIgcmFuTnVtVHdvID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjU2KS50b1N0cmluZygxNik7XHJcbiAgICAgICAgdmFyIHJhbk51bVRocmVlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjU2KS50b1N0cmluZygxNik7XHJcblxyXG4gICAgICAgIHJldHVybiBgIyR7KHJhbk51bU9uZS5sZW5ndGggPiAxID8gcmFuTnVtT25lIDogXCIwXCIgKyByYW5OdW1PbmUpfSR7KHJhbk51bVR3by5sZW5ndGggPiAxID8gcmFuTnVtVHdvIDogXCIwXCIgKyByYW5OdW1Ud28pfSR7KHJhbk51bVRocmVlLmxlbmd0aCA+IDEgPyByYW5OdW1UaHJlZSA6IFwiMFwiICsgcmFuTnVtVGhyZWUpfWA7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFdhdmVmb3JtVmlld2VyOyIsIi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbi8vICBFdmVudFNlYXJjaFByZXZpZXdEM0NoYXJ0LnRzeCAtIEdidGNcclxuLy9cclxuLy8gIENvcHlyaWdodCDCqSAyMDIwLCBHcmlkIFByb3RlY3Rpb24gQWxsaWFuY2UuICBBbGwgUmlnaHRzIFJlc2VydmVkLlxyXG4vL1xyXG4vLyAgTGljZW5zZWQgdG8gdGhlIEdyaWQgUHJvdGVjdGlvbiBBbGxpYW5jZSAoR1BBKSB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIFNlZVxyXG4vLyAgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLlxyXG4vLyAgVGhlIEdQQSBsaWNlbnNlcyB0aGlzIGZpbGUgdG8geW91IHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoTUlUKSwgdGhlIFwiTGljZW5zZVwiOyB5b3UgbWF5IG5vdCB1c2UgdGhpc1xyXG4vLyAgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQ6XHJcbi8vXHJcbi8vICAgICAgaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVFxyXG4vL1xyXG4vLyAgVW5sZXNzIGFncmVlZCB0byBpbiB3cml0aW5nLCB0aGUgc3ViamVjdCBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxyXG4vLyAgXCJBUy1JU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gUmVmZXIgdG8gdGhlXHJcbi8vICBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucy5cclxuLy9cclxuLy8gIENvZGUgTW9kaWZpY2F0aW9uIEhpc3Rvcnk6XHJcbi8vICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vICAwMi8yMC8yMDIwIC0gQmlsbHkgRXJuZXN0XHJcbi8vICAgICAgIEdlbmVyYXRlZCBvcmlnaW5hbCB2ZXJzaW9uIG9mIHNvdXJjZSBjb2RlLlxyXG4vL1xyXG4vLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgc2NhbGVMaW5lYXIsIGxpbmUsIGV4dGVudCB9IGZyb20gJ2QzJztcclxuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcclxuaW1wb3J0IHsgUFFEaWdlc3QgfSBmcm9tICcuLi9nbG9iYWwnO1xyXG5cclxuY29uc3QgV2F2ZWZvcm1WaWV3ZXJEM0NoYXJ0ID0gKHByb3BzOiB7XHJcbiAgICBFdmVudElEOiBudW1iZXIsXHJcbiAgICBEYXRhOiB7IEtleTogc3RyaW5nLCBTaG93OiBib29sZWFuLCBDb2xvcjogc3RyaW5nLCBEYXRhOiBbbnVtYmVyLCBudW1iZXJdW10gfVtdLFxyXG4gICAgQ29tcGFyZURhdGE6IHsgS2V5OiBzdHJpbmcsIFNob3c6IGJvb2xlYW4sIENvbG9yOiBzdHJpbmcsIERhdGE6IFtudW1iZXIsIG51bWJlcl1bXSB9W10sXHJcbiAgICBVbml0czogc3RyaW5nLFxyXG4gICAgQ2hhcnRBY3Rpb246IFBRRGlnZXN0LkNoYXJ0QWN0aW9uLFxyXG4gICAgRGF0YVR5cGU6ICdUaW1lJyB8ICdTdGF0aXN0aWMnIHwgJ1RyZW5kaW5nJyxcclxuICAgIEV4dGVudDogUFFEaWdlc3QuRDNFeHRlbnQsXHJcbiAgICBNYXJnaW46IHsgTGVmdDogbnVtYmVyLCBSaWdodDogbnVtYmVyLCBUb3A6IG51bWJlciwgQm90dG9tOiBudW1iZXIgfSxcclxuICAgIFdpZHRoOiBudW1iZXIsXHJcbiAgICBIZWlnaHQ6IG51bWJlcixcclxuICAgIEhvdmVyOiBudW1iZXIsXHJcbiAgICBTZXRIb3ZlcjogKG51bWJlcjogbnVtYmVyKSA9PiB2b2lkLFxyXG4gICAgQ2xpY2s6IG51bWJlcixcclxuICAgIEhhbmRsZUNoYXJ0QWN0aW9uOiAodmFsdWU6IG51bWJlciB8IFBRRGlnZXN0LkQzRXh0ZW50KSA9PiB2b2lkXHJcbn0pID0+IHtcclxuXHJcbiAgICBjb25zdCBjaGFydCA9IFJlYWN0LnVzZVJlZihudWxsKTtcclxuICAgIGNvbnN0IFt4U3RhcnQsIHNldFhTdGFydF0gPSBSZWFjdC51c2VTdGF0ZTxudW1iZXI+KG51bGwpXHJcbiAgICBjb25zdCBbeEVuZCwgc2V0WEVuZF0gPSBSZWFjdC51c2VTdGF0ZTxudW1iZXI+KG51bGwpXHJcblxyXG4gICAgZnVuY3Rpb24gT25Ib3ZlcihldnQ6IFJlYWN0Lk1vdXNlRXZlbnQ8U1ZHU1ZHRWxlbWVudCwgTW91c2VFdmVudD4pIHtcclxuICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICBwcm9wcy5TZXRIb3ZlcihldnQubmF0aXZlRXZlbnQub2Zmc2V0WCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gSGFuZGxlQ2hhcnRBY3Rpb24oZXZ0OiBSZWFjdC5Nb3VzZUV2ZW50PFNWR1NWR0VsZW1lbnQsIE1vdXNlRXZlbnQ+KSB7XHJcbiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgaWYgKHByb3BzLkNoYXJ0QWN0aW9uID09ICdDbGljaycpXHJcbiAgICAgICAgICAgIHByb3BzLkhhbmRsZUNoYXJ0QWN0aW9uKHguaW52ZXJ0KGV2dC5uYXRpdmVFdmVudC5vZmZzZXRYKSk7XHJcbiAgICAgICAgZWxzZSBpZiAocHJvcHMuQ2hhcnRBY3Rpb24gPT0gJ1BhbicpXHJcbiAgICAgICAgICAgIE9uUGFuKGV2dClcclxuICAgICAgICBlbHNlIGlmIChwcm9wcy5DaGFydEFjdGlvbiA9PSAnWm9vbVgnKVxyXG4gICAgICAgICAgICBPblpvb20oZXZ0KVxyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gT25QYW4oZXZ0OiBSZWFjdC5Nb3VzZUV2ZW50PFNWR1NWR0VsZW1lbnQsIE1vdXNlRXZlbnQ+KSB7XHJcbiAgICAgICAgZXZ0LnBlcnNpc3QoKTtcclxuICAgICAgICAkKGNoYXJ0LmN1cnJlbnQpLm9uKCdtb3VzZW1vdmUnLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBwcm9wcy5IYW5kbGVDaGFydEFjdGlvbih7XHJcbiAgICAgICAgICAgICAgICBYOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgTWluOiB4LmludmVydCh4LnJhbmdlKClbMF0gKyBldnQuY2xpZW50WCAtIGUuY2xpZW50WCksXHJcbiAgICAgICAgICAgICAgICAgICAgTWF4OiB4LmludmVydCh4LnJhbmdlKClbMV0gKyBldnQuY2xpZW50WCAtIGUuY2xpZW50WClcclxuICAgICAgICAgICAgICAgIH0sIFk6IHByb3BzLkV4dGVudC5ZXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIFN0b3BEcmFnKGV2dCkge1xyXG4gICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICQoY2hhcnQuY3VycmVudCkub2ZmKCdtb3VzZW1vdmUnKTtcclxuICAgICAgICBpZiAocHJvcHMuQ2hhcnRBY3Rpb24gPT0gXCJab29tWFwiKSB7XHJcbiAgICAgICAgICAgIHByb3BzLkhhbmRsZUNoYXJ0QWN0aW9uKHtcclxuICAgICAgICAgICAgICAgIFg6IHtcclxuICAgICAgICAgICAgICAgICAgICBNaW46IE1hdGgubWluKHguaW52ZXJ0KHhTdGFydCksIHguaW52ZXJ0KHhFbmQpKSxcclxuICAgICAgICAgICAgICAgICAgICBNYXg6IE1hdGgubWF4KHguaW52ZXJ0KHhTdGFydCksIHguaW52ZXJ0KHhFbmQpKVxyXG4gICAgICAgICAgICAgICAgfSxZOiBwcm9wcy5FeHRlbnQuWVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHNldFhTdGFydChudWxsKTtcclxuICAgICAgICAgICAgc2V0WEVuZChudWxsKTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBPblpvb20oZXZ0OiBSZWFjdC5Nb3VzZUV2ZW50PFNWR1NWR0VsZW1lbnQsIE1vdXNlRXZlbnQ+KSB7XHJcbiAgICAgICAgZXZ0LnBlcnNpc3QoKTtcclxuICAgICAgICBzZXRYU3RhcnQoZXZ0Lm5hdGl2ZUV2ZW50Lm9mZnNldFgpO1xyXG4gICAgICAgICQoY2hhcnQuY3VycmVudCkub24oJ21vdXNlbW92ZScsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIHNldFhFbmQoZS5vZmZzZXRYKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgeCA9IHNjYWxlTGluZWFyKCkucmFuZ2VSb3VuZChbcHJvcHMuTWFyZ2luLkxlZnQsIHByb3BzLldpZHRoIC0gcHJvcHMuTWFyZ2luLlJpZ2h0XSk7XHJcbiAgICBsZXQgeSA9IHNjYWxlTGluZWFyKCkucmFuZ2VSb3VuZChbcHJvcHMuSGVpZ2h0IC0gcHJvcHMuTWFyZ2luLkJvdHRvbSwgcHJvcHMuTWFyZ2luLlRvcF0pO1xyXG5cclxuICAgIGxldCB5ZXh0ZW50ID0gWzEwMDAwMDAsIC0xMDAwMDAwXTtcclxuICAgIGxldCB4ZXh0ZW50ID0gWzAsIDFdO1xyXG5cclxuICAgIGlmIChwcm9wcy5EYXRhLmxlbmd0aCA+IDApXHJcbiAgICAgICAgeGV4dGVudCA9IFtwcm9wcy5EYXRhWzBdLkRhdGFbMF1bMF0sIHByb3BzLkRhdGFbMF0uRGF0YVtwcm9wcy5EYXRhWzBdLkRhdGEubGVuZ3RoIC0gMV1bMF1dO1xyXG5cclxuICAgIGlmIChwcm9wcy5FeHRlbnQuWC5NaW4gIT0gbnVsbClcclxuICAgICAgICB4ZXh0ZW50ID0gW3Byb3BzLkV4dGVudC5YLk1pbiwgeGV4dGVudFsxXV07XHJcblxyXG4gICAgaWYgKHByb3BzLkV4dGVudC5YLk1heCAhPSBudWxsKVxyXG4gICAgICAgIHhleHRlbnQgPSBbeGV4dGVudFswXSwgcHJvcHMuRXh0ZW50LlguTWF4XTtcclxuXHJcblxyXG4gICAgJC5lYWNoKHByb3BzLkRhdGEuZmlsdGVyKHggPT4geC5TaG93KSwgKGluZGV4LCB2YWx1ZSkgPT4ge1xyXG4gICAgICAgIGxldCBuZXd5ZXhlbnQgPSBleHRlbnQodmFsdWUuRGF0YS5maWx0ZXIoeSA9PiB5WzBdID49IHhleHRlbnRbMF0gJiYgeVswXSA8PSB4ZXh0ZW50WzFdKSwgZCA9PiBkWzFdKTtcclxuXHJcbiAgICAgICAgaWYgKG5ld3lleGVudFswXSAhPSB1bmRlZmluZWQgJiYgcGFyc2VGbG9hdChuZXd5ZXhlbnRbMF0udG9TdHJpbmcoKSkgPCB5ZXh0ZW50WzBdKSB5ZXh0ZW50WzBdID0gcGFyc2VGbG9hdChuZXd5ZXhlbnRbMF0udG9TdHJpbmcoKSlcclxuICAgICAgICBpZiAobmV3eWV4ZW50WzFdICE9IHVuZGVmaW5lZCAmJiBwYXJzZUZsb2F0KG5ld3lleGVudFsxXS50b1N0cmluZygpKSA+IHlleHRlbnRbMV0pIHlleHRlbnRbMV0gPSBwYXJzZUZsb2F0KG5ld3lleGVudFsxXS50b1N0cmluZygpKVxyXG4gICAgfSk7XHJcblxyXG4gICAgJC5lYWNoKHByb3BzLkNvbXBhcmVEYXRhLmZpbHRlcih4ID0+IHguU2hvdyksIChpbmRleCwgdmFsdWUpID0+IHtcclxuICAgICAgICBsZXQgbmV3eWV4ZW50ID0gZXh0ZW50KHZhbHVlLkRhdGEuZmlsdGVyKHkgPT4geVswXSA+PSB4ZXh0ZW50WzBdICYmIHlbMF0gPD0geGV4dGVudFsxXSksIGQgPT4gZFsxXSk7XHJcblxyXG4gICAgICAgIGlmIChuZXd5ZXhlbnRbMF0gIT0gdW5kZWZpbmVkICYmIHBhcnNlRmxvYXQobmV3eWV4ZW50WzBdLnRvU3RyaW5nKCkpIDwgeWV4dGVudFswXSkgeWV4dGVudFswXSA9IHBhcnNlRmxvYXQobmV3eWV4ZW50WzBdLnRvU3RyaW5nKCkpXHJcbiAgICAgICAgaWYgKG5ld3lleGVudFsxXSAhPSB1bmRlZmluZWQgJiYgcGFyc2VGbG9hdChuZXd5ZXhlbnRbMV0udG9TdHJpbmcoKSkgPiB5ZXh0ZW50WzFdKSB5ZXh0ZW50WzFdID0gcGFyc2VGbG9hdChuZXd5ZXhlbnRbMV0udG9TdHJpbmcoKSlcclxuICAgIH0pO1xyXG5cclxuICAgIGxldCB5c3BhbiAgPSB5ZXh0ZW50WzFdIC0geWV4dGVudFswXTtcclxuXHJcbiAgICB5ZXh0ZW50ID0gW3lleHRlbnRbMF0gLSB5c3Bhbi8xMCwgeWV4dGVudFsxXSArIHlzcGFuLzEwXVxyXG5cclxuICAgIHkuZG9tYWluKHlleHRlbnQpO1xyXG4gICAgeC5kb21haW4oeGV4dGVudCk7XHJcblxyXG4gICAgbGV0IGxpbmVmdW5jID0gbGluZTxbbnVtYmVyLCBudW1iZXJdPigpLngoZCA9PiB4KGRbMF0pKS55KGQgPT4geShkWzFdKSk7XHJcblxyXG4gICAgbGV0IG5ld1BhdGhzID0gW107XHJcbiAgICAkLmVhY2gocHJvcHMuRGF0YS5maWx0ZXIoeCA9PiB4LlNob3cpLCAoaW5kZXgsIHZhbHVlKSA9PiB7XHJcbiAgICAgICAgICAgIG5ld1BhdGhzLnB1c2goIDxwYXRoIGtleT17dmFsdWUuS2V5fSBmaWxsPSdub25lJyBzdHJva2VMaW5lam9pbj0ncm91bmQnIHN0cm9rZVdpZHRoPScxLjUnIHN0cm9rZT17dmFsdWUuQ29sb3J9IGQ9e2xpbmVmdW5jKHZhbHVlLkRhdGEuZmlsdGVyKGQgPT4gZFswXSA+PSB4LmRvbWFpbigpWzBdICYmIGRbMF0gPD0geC5kb21haW4oKVsxXSkpfSAvPik7XHJcbiAgICB9KTtcclxuXHJcbiAgICBsZXQgY29tcGFyZVBhdGhzID0gW107XHJcbiAgICAkLmVhY2gocHJvcHMuQ29tcGFyZURhdGEuZmlsdGVyKHggPT4geC5TaG93KSwgKGluZGV4LCB2YWx1ZSkgPT4ge1xyXG4gICAgICAgIGNvbXBhcmVQYXRocy5wdXNoKDxwYXRoIGtleT17dmFsdWUuS2V5fSBmaWxsPSdub25lJyBzdHJva2VMaW5lam9pbj0ncm91bmQnIHN0cm9rZVdpZHRoPScxLjUnIHN0cm9rZT17dmFsdWUuQ29sb3J9IGQ9e2xpbmVmdW5jKHZhbHVlLkRhdGEuZmlsdGVyKGQgPT4gZFswXSA+PSB4LmRvbWFpbigpWzBdICYmIGRbMF0gPD0geC5kb21haW4oKVsxXSkpfSAvPik7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgbGV0IHhUaWNrcyA9IFtdO1xyXG4gICAgbGV0IHNwYW4gPSB4LmRvbWFpbigpWzFdIC0geC5kb21haW4oKVswXTtcclxuICAgIGZvciAobGV0IGkgPSB4LmRvbWFpbigpWzBdOyBpIDwgeC5kb21haW4oKVsxXTsgaSArPSBzcGFuIC8gNykge1xyXG4gICAgICAgIHhUaWNrcy5wdXNoKFxyXG4gICAgICAgICAgICA8ZyBrZXk9e2l9IGNsYXNzTmFtZT1cInRpY2tcIiB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHt4KGkpfSwke3Byb3BzLkhlaWdodCAtIHByb3BzLk1hcmdpbi5Cb3R0b219KWB9IHN0eWxlPXt7IG9wYWNpdHk6IGkgPCB4LmRvbWFpbigpWzBdIHx8IGkgPiB4LmRvbWFpbigpWzFdID8gMCA6IDEgfX0+XHJcbiAgICAgICAgICAgICAgICA8cGF0aCBkPXtgTSAwLDYgViAtNmB9IHN0eWxlPXt7IHN0cm9rZTogJ2JsYWNrJyB9fSBzdHJva2VXaWR0aD17MC41fT48L3BhdGg+XHJcbiAgICAgICAgICAgICAgICA8dGV4dCBmaWxsPVwiYmxhY2tcIiBmb250U2l6ZT1cInNtYWxsXCIgeT1cIjIwXCIgdGV4dEFuY2hvcj0nbWlkZGxlJz57bW9tZW50KCcxOTcwLTAxLTAxVDAwOjAwOjAwJykuYWRkKGksICdtaWxsaXNlY29uZHMnKS5mb3JtYXQocHJvcHMuRGF0YVR5cGUgPT0gJ1RpbWUnID8gJ3NzLlNTUycgOiAnSEg6c3MnKX08L3RleHQ+XHJcbiAgICAgICAgICAgIDwvZz5cclxuICAgICAgICApO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBsZXQgeVRpY2tzID0gW107XHJcbiAgICBsZXQgeVNwYW4gPSAoeS5kb21haW4oKVswXSA8IDAgPyB5LmRvbWFpbigpWzFdIDogeS5kb21haW4oKVsxXSAtIHkuZG9tYWluKClbMF0pO1xyXG4gICAgbGV0IHlNaW4gPSAoeS5kb21haW4oKVswXSA8IDAgPyAwIDogeS5kb21haW4oKVswXSk7XHJcbiAgICBsZXQgZGl2aXNvciA9IDE7XHJcbiAgICBpZiAoeVNwYW4gPiAxMDAwMDAwKSBkaXZpc29yID0gMTAwMDAwMFxyXG4gICAgaWYgKHlTcGFuID4gMTAwMCkgZGl2aXNvciA9IDEwMDBcclxuXHJcbiAgICBmb3IgKGxldCBpID0geU1pbjsgaSA8IHkuZG9tYWluKClbMV07IGkgKz0geVNwYW4gLyAoeS5kb21haW4oKVswXSA8IDAgPyAzIDogNikpIHtcclxuICAgICAgICB5VGlja3MucHVzaChcclxuICAgICAgICAgICAgPGcga2V5PXtpfT5cclxuICAgICAgICAgICAgICAgIDxnIGtleT17aSArICdwb3MnfSBjbGFzc05hbWU9XCJ0aWNrXCIgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7cHJvcHMuTWFyZ2luLkxlZnR9LCR7eShpKX0pYH0gc3R5bGU9e3sgb3BhY2l0eTogaSA8IHkuZG9tYWluKClbMF0gfHwgaSA+IHkuZG9tYWluKClbMV0gPyAwIDogMSB9fT5cclxuICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPXtgTSA2LCAwIEggLTZgfSBzdHlsZT17eyBzdHJva2U6ICdibGFjaycgfX0gc3Ryb2tlV2lkdGg9ezAuNX0+PC9wYXRoPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZXh0IGZpbGw9XCJibGFja1wiIGZvbnRTaXplPVwic21hbGxcIiB4PVwiLTE1XCIgZHk9XCIwLjMyZW1cIiB0ZXh0QW5jaG9yPSdtaWRkbGUnPnsoaSAvIGRpdmlzb3IpLnRvRml4ZWQoMCkgKyAoZGl2aXNvciA9PSAxMDAwID8gJ2snIDogJycpICsgKGRpdmlzb3IgPT0gMTAwMDAwMCA/ICdNJyA6ICcnKX08L3RleHQ+XHJcbiAgICAgICAgICAgICAgICA8L2c+XHJcbiAgICAgICAgICAgICAgICB7KHkuZG9tYWluKClbMF0gPCAwICYmIGkgIT0gMCA/XHJcbiAgICAgICAgICAgICAgICAgICAgPGcga2V5PXtpICsgJ25lZyd9IGNsYXNzTmFtZT1cInRpY2tcIiB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHtwcm9wcy5NYXJnaW4uTGVmdH0sJHt5KC1pKX0pYH0gc3R5bGU9e3sgb3BhY2l0eTogaSA8IHkuZG9tYWluKClbMF0gfHwgaSA+IHkuZG9tYWluKClbMV0gPyAwIDogMSB9fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD17YE0gNiwgMCBIIC02YH0gc3R5bGU9e3sgc3Ryb2tlOiAnYmxhY2snIH19IHN0cm9rZVdpZHRoPXswLjV9PjwvcGF0aD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPHRleHQgZmlsbD1cImJsYWNrXCIgZm9udFNpemU9XCJzbWFsbFwiIHg9XCItMTVcIiBkeT1cIjAuMzJlbVwiIHRleHRBbmNob3I9J21pZGRsZSc+ey0oaSAvIGRpdmlzb3IpLnRvRml4ZWQoMCkgKyAoZGl2aXNvciA9PSAxMDAwID8gJ2snIDogJycpICsgKGRpdmlzb3IgPT0gMTAwMDAwMCA/ICdNJyA6ICcnKX08L3RleHQ+XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIDwvZz4gOiBudWxsKX1cclxuICAgICAgICAgICAgPC9nPlxyXG4gICAgICAgICk7XHJcblxyXG4gICAgfVxyXG5cclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxzdmcgcmVmPXtjaGFydH0gd2lkdGg9e3Byb3BzLldpZHRofSBoZWlnaHQ9e3Byb3BzLkhlaWdodH0gb25Nb3VzZU92ZXI9e09uSG92ZXJ9IG9uTW91c2VEb3duPXtIYW5kbGVDaGFydEFjdGlvbn0gb25Nb3VzZVVwPXtTdG9wRHJhZ30gc3R5bGU9e3sgZmlsbDogJ25vbmUnfX0+XHJcbiAgICAgICAgICAgICAgICB7LyogQ2hhcnQgYm9yZGVycyAqL31cclxuICAgICAgICAgICAgICAgIDxwYXRoICBzdHJva2U9J2JsYWNrJyBzdHJva2VXaWR0aD0nMC41cHgnIGQ9e2BNICR7cHJvcHMuTWFyZ2luLkxlZnR9ICR7cHJvcHMuTWFyZ2luLlRvcH0gSCAke3Byb3BzLldpZHRoIC0gcHJvcHMuTWFyZ2luLlJpZ2h0fSBWICR7cHJvcHMuSGVpZ2h0IC0gcHJvcHMuTWFyZ2luLkJvdHRvbX0gSCAke3Byb3BzLk1hcmdpbi5MZWZ0fSBWICR7cHJvcHMuTWFyZ2luLlRvcH1gfSBzdHlsZT17eyBzaGFwZVJlbmRlcmluZzogJ2NyaXNwRWRnZXMnfX0gLz5cclxuICAgICAgICAgICAgICAgIDx0ZXh0IGZpbGw9XCJibGFja1wiIGZvbnRTaXplPVwic21hbGxcIiB0cmFuc2Zvcm09e2Byb3RhdGUoLTkwIDAsMClgfSB5PXsxNX0geD17LShwcm9wcy5IZWlnaHQgKyAzNSkgLyAyfT57cHJvcHMuVW5pdHN9PC90ZXh0PlxyXG4gICAgICAgICAgICAgICAge25ld1BhdGhzfVxyXG4gICAgICAgICAgICAgICAge2NvbXBhcmVQYXRoc31cclxuXHJcbiAgICAgICAgICAgICAgICB7eFRpY2tzfVxyXG4gICAgICAgICAgICAgICAge3lUaWNrc31cclxuXHJcbiAgICAgICAgICAgICAgICA8cGF0aCBzdHJva2U9J2JsYWNrJyBkPXtgTSAke3Byb3BzLkhvdmVyfSwke3Byb3BzLk1hcmdpbi5Ub3B9IFYgJHtwcm9wcy5IZWlnaHQtIHByb3BzLk1hcmdpbi5Cb3R0b219YH0gc3R5bGU9e3sgc3Ryb2tlOiAnYmxhY2snLCBvcGFjaXR5OiBwcm9wcy5Ib3ZlciA8IHByb3BzLk1hcmdpbi5MZWZ0PyAwOiAxIH19IHN0cm9rZVdpZHRoPXswLjV9PjwvcGF0aD5cclxuICAgICAgICAgICAgICAgIDxwYXRoIHN0cm9rZT0nYmxhY2snIGQ9e2BNICR7eChwcm9wcy5DbGljayl9LCR7cHJvcHMuTWFyZ2luLlRvcH0gViAke3Byb3BzLkhlaWdodCAtIHByb3BzLk1hcmdpbi5Cb3R0b219YH0gc3R5bGU9e3sgc3Ryb2tlOiAncmVkJywgb3BhY2l0eTogeChwcm9wcy5DbGljaykgPCBwcm9wcy5NYXJnaW4uTGVmdCA/IDAgOiAxIH19IHN0cm9rZVdpZHRoPXsxfT48L3BhdGg+XHJcblxyXG4gICAgICAgICAgICAgICAgPHRleHQgZmlsbD1cImJsYWNrXCIgZm9udFNpemU9XCJzbWFsbFwiIHg9e3Byb3BzLldpZHRoIC8gMn0geT17cHJvcHMuSGVpZ2h0IC0gNX0+VGltZTwvdGV4dD5cclxuXHJcbiAgICAgICAgICAgICAgICA8cmVjdCBzdHJva2U9J2JsYWNrJyB4PXtNYXRoLm1pbih4U3RhcnQsIHhFbmQpfSB5PXtwcm9wcy5NYXJnaW4uVG9wfSB3aWR0aD17TWF0aC5hYnMoeEVuZCAtIHhTdGFydCl9IGhlaWdodD17cHJvcHMuSGVpZ2h0IC0gcHJvcHMuTWFyZ2luLlRvcCAtIHByb3BzLk1hcmdpbi5Cb3R0b219IHN0eWxlPXt7IHN0cm9rZTogJ2dyZXknLCBmaWxsOiAnZ3JleScsIG9wYWNpdHk6IDAuNSB9fT48L3JlY3Q+XHJcbiAgICAgICAgICAgIDwvc3ZnPlxyXG4gICAgKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgV2F2ZWZvcm1WaWV3ZXJEM0NoYXJ0O1xyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==