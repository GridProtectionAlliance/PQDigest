(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["WaveformViewer"],{

/***/ "./tsx/WaveformViewer/WaveformViewer.tsx":
/*!***********************************************!*\
  !*** ./tsx/WaveformViewer/WaveformViewer.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _WaveformViewerD3Chart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WaveformViewerD3Chart */ "./tsx/WaveformViewer/WaveformViewerD3Chart.tsx");
//******************************************************************************************************
//  WaveformViewer.tsx - Gbtc
//
//  Copyright Â© 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  07/30/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};


var WaveformViewer = function (props) {
    var infoWidth = 300;
    var pointsWidth = 500;
    var waveformWidth = window.innerWidth - infoWidth - pointsWidth - 10;
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(null), 2), info = _a[0], setInfo = _a[1];
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        var handle = GetEventInfo();
        handle.done(function (data) {
            setInfo(data[0]);
        });
        return function () {
            if (handle.abort != undefined)
                handle.abort();
        };
    }, []);
    function GetEventInfo() {
        return $.ajax({
            type: "GET",
            url: homePath + "api/OpenXDA/Event/Info/" + props.EventID,
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: true,
            async: true
        });
    }
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "row", style: { height: "100%", margin: '5px 5px 5px 5px ' } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "", style: { padding: '0px 2px 0px 0px', width: infoWidth } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, "Info"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 127) - 70, height: (window.innerHeight - 127) - 70, overflowY: 'hidden' } }, (info != null ?
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("table", { className: "table" },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tbody", null,
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Meter"),
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.Meter)),
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Time"),
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null,
                                    moment(info.StartTime).format('MM/DD/YYYY HH:mm'),
                                    "\u00A0(CST)")),
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Type"),
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.EventType)),
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Phase"),
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.Phase)),
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Duration"),
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.Duration)),
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Magnitude"),
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.Magnitude)),
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Depth"),
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.SagDepth))))
                    : null)))),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "", style: { padding: '0px 2px 0px 0px', width: waveformWidth } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, "Waveforms"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: 2 * (window.innerHeight - 246) / 3, height: 2 * (window.innerHeight - 246) / 3, overflowY: 'hidden' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_WaveformViewerD3Chart__WEBPACK_IMPORTED_MODULE_1__["default"], { EventID: props.EventID, MeasurementType: "Voltage", DataType: "Time", Height: (window.innerHeight - 246) / 3, Width: waveformWidth - 4, Margin: { Top: 1, Bottom: 1, Left: 1, Right: 1 } }),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_WaveformViewerD3Chart__WEBPACK_IMPORTED_MODULE_1__["default"], { EventID: props.EventID, MeasurementType: "Current", DataType: "Time", Height: (window.innerHeight - 246) / 3, Width: waveformWidth - 4, Margin: { Top: 1, Bottom: 1, Left: 1, Right: 1 } }))),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, "Analytics"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 246) / 3, height: (window.innerHeight - 246) / 3, overflowY: 'hidden' } }))),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "", style: { padding: '0px 2px 0px 0px', width: pointsWidth } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, "Points"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 246) / 2, height: (window.innerHeight - 246) / 2, overflowY: 'hidden' } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, "Phasor"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 246) / 2, height: (window.innerHeight - 246) / 2, overflowY: 'hidden' } })))));
};
/* harmony default export */ __webpack_exports__["default"] = (WaveformViewer);


/***/ }),

/***/ "./tsx/WaveformViewer/WaveformViewerD3Chart.tsx":
/*!******************************************************!*\
  !*** ./tsx/WaveformViewer/WaveformViewerD3Chart.tsx ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3 */ "d3");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(d3__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "../node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
//******************************************************************************************************
//  EventSearchPreviewD3Chart.tsx - Gbtc
//
//  Copyright Â© 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  02/20/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};



var WaveformViewerD3Chart = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), paths = _a[0], setPaths = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _b[0], setShowLegend = _b[1];
    var chart = react__WEBPACK_IMPORTED_MODULE_0___default.a.useRef(null);
    var prefix = props.MeasurementType == 'Voltage' ? 'V' : 'I';
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        setPaths([]);
        return GetData();
    }, [props.EventID]);
    function GetData() {
        var handle = $.ajax({
            type: "GET",
            url: homePath + "api/OpenXDA/Event/Waveform/" + props.EventID + "/" + props.MeasurementType + "/" + props.Width,
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: true,
            async: true
        }).done(function (data) { return DrawChart(data); });
        return function () {
            if (handle.abort != undefined)
                handle.abort();
        };
    }
    function DrawChart(data) {
        var x = Object(d3__WEBPACK_IMPORTED_MODULE_1__["scaleLinear"])().rangeRound([props.Margin.Left, props.Width - props.Margin.Right]);
        var y = Object(d3__WEBPACK_IMPORTED_MODULE_1__["scaleLinear"])().rangeRound([props.Height - props.Margin.Top, props.Margin.Bottom]);
        var yextent = [0, 0];
        var xextent = [9007199254740991, -9007199254740990];
        Object.keys(data).forEach(function (key, index, keys) {
            var newyexent = Object(d3__WEBPACK_IMPORTED_MODULE_1__["extent"])(data[key], function (d) { return d[1]; });
            var newxexent = Object(d3__WEBPACK_IMPORTED_MODULE_1__["extent"])(data[key], function (d) { return d[0]; });
            if (parseFloat(newyexent[0].toString()) < yextent[0])
                yextent[0] = parseFloat(newyexent[0].toString());
            if (parseFloat(newyexent[1].toString()) > yextent[1])
                yextent[1] = parseFloat(newyexent[1].toString());
            if (parseFloat(newxexent[0].toString()) < xextent[0])
                xextent[0] = parseFloat(newxexent[0].toString());
            if (parseFloat(newxexent[1].toString()) > xextent[1])
                xextent[1] = parseFloat(newxexent[1].toString());
        });
        yextent = [1.20 * yextent[0], 1.20 * yextent[1]];
        y.domain(yextent);
        x.domain(xextent);
        var linefunc = Object(d3__WEBPACK_IMPORTED_MODULE_1__["line"])().x(function (d) { return x(d[0]); }).y(function (d) { return y(d[1]); });
        var newPaths = [];
        $.each(Object.keys(data), function (index, key) {
            var path = paths.find(function (x) { return x.Key == GetKey(key); });
            if (path == undefined)
                newPaths.push({ Key: GetKey(key), Color: GetColor(key), Show: true, Path: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { key: key, fill: 'none', strokeLinejoin: 'round', strokeWidth: '1.5', stroke: GetColor(key), d: linefunc(data[key]) }) });
            else {
                path.Path = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { key: key, fill: 'none', strokeLinejoin: 'round', strokeWidth: '1.5', stroke: path.Color, d: linefunc(data[key]) });
                newPaths.push(path);
            }
        });
        setPaths(newPaths);
    }
    function GetKey(label) {
        if (label == prefix + "AN")
            return "Wf-" + prefix + "AN";
        if (label == prefix + "BN")
            return "Wf-" + prefix + "BN";
        if (label == prefix + "CN")
            return "Wf-" + prefix + "CN";
        if (label == prefix + "AB")
            return "Wf-" + prefix + "AB";
        if (label == prefix + "BC")
            return "Wf-" + prefix + "BC";
        if (label == prefix + "CA")
            return "Wf-" + prefix + "CA";
        if (label == prefix + "AN RMS")
            return "RMS-" + prefix + "AN";
        if (label == prefix + "BN RMS")
            return "RMS-" + prefix + "BN";
        if (label == prefix + "CN RMS")
            return "RMS-" + prefix + "CN";
        if (label == prefix + "AB RMS")
            return "RMS-" + prefix + "AB";
        if (label == prefix + "BC RMS")
            return "RMS-" + prefix + "BC";
        if (label == prefix + "CA RMS")
            return "RMS-" + prefix + "CA";
        if (label == prefix + "AN Phase")
            return "Ph-" + prefix + "AN";
        if (label == prefix + "BN Phase")
            return "Ph-" + prefix + "BN";
        if (label == prefix + "CN Phase")
            return "Ph-" + prefix + "CN";
        if (label == prefix + "AB Phase")
            return "Ph-" + prefix + "AB";
        if (label == prefix + "BC Phase")
            return "Ph-" + prefix + "BC";
        if (label == prefix + "CA Phase")
            return "Ph-" + prefix + "CA";
        if (label == prefix + "AN Amplitude")
            return "Amp-" + prefix + "AN";
        if (label == prefix + "BN Amplitude")
            return "Amp-" + prefix + "BN";
        if (label == prefix + "CN Amplitude")
            return "Amp-" + prefix + "CN";
        if (label == prefix + "AB Amplitude")
            return "Amp-" + prefix + "AB";
        if (label == prefix + "BC Amplitude")
            return "Amp-" + prefix + "BC";
        if (label == prefix + "CA Amplitude")
            return "Amp-" + prefix + "CA";
        else
            return "" + prefix;
    }
    function GetColor(label) {
        if (label.indexOf('VA') >= 0)
            return '#A30000';
        if (label.indexOf('VB') >= 0)
            return '#0029A3';
        if (label.indexOf('VC') >= 0)
            return '#007A29';
        if (label.indexOf('VN') >= 0)
            return '#c3c3c3';
        if (label.indexOf('IA') >= 0)
            return '#FF0000';
        if (label.indexOf('IB') >= 0)
            return '#0066CC';
        if (label.indexOf('IC') >= 0)
            return '#33CC33';
        if (label.indexOf('IR') >= 0)
            return '#c3c3c3';
        else {
            var ranNumOne = Math.floor(Math.random() * 256).toString(16);
            var ranNumTwo = Math.floor(Math.random() * 256).toString(16);
            var ranNumThree = Math.floor(Math.random() * 256).toString(16);
            return "#" + (ranNumOne.length > 1 ? ranNumOne : "0" + ranNumOne) + (ranNumTwo.length > 1 ? ranNumTwo : "0" + ranNumTwo) + (ranNumThree.length > 1 ? ranNumThree : "0" + ranNumThree);
        }
    }
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { height: props.Height, position: 'relative' /*, margin: '0x', padding: '0px'*/ } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', right: 0 }, onClick: function () { return setShowLegend(!showLegend); } }, "Legend"),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Legend, { Show: showLegend, Type: props.MeasurementType, Paths: paths, CallBack: function (path) {
                var newPaths = lodash__WEBPACK_IMPORTED_MODULE_2___default.a.clone(paths);
                var newPath = newPaths.find(function (x) { return x.Key == path.Key; });
                newPath.Show = !path.Show;
                setPaths(newPaths);
            } }),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg", { width: props.Width, height: props.Height, style: { fill: 'none', stroke: 'black', strokeWidth: '1px', fontFamily: 'sans-serif', fontSize: 'small' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: "M " + props.Margin.Left + " " + props.Margin.Top + " H " + (props.Width - props.Margin.Right) + " V " + props.Height + " H " + props.Margin.Left + " V " + props.Margin.Top, style: { shapeRendering: 'crispEdges' } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("text", { transform: "rotate(-90 0,0)", y: props.Margin.Left - 15, x: -(props.Height + 35) / 2 }, props.MeasurementType == "Voltage" ? "Voltage" : "Amps"),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("g", null, paths.filter(function (x) { return x.Show; }).map(function (x) { return x.Path; })))));
};
/* harmony default export */ __webpack_exports__["default"] = (WaveformViewerD3Chart);
var Legend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), wf = _b[0], setWf = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), rms = _c[0], setRMS = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), amp = _d[0], setAmp = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), ph = _e[0], setPh = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), an = _f[0], setAn = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), bn = _g[0], setBn = _g[1];
    var _h = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), cn = _h[0], setCn = _h[1];
    var _j = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), ab = _j[0], setAb = _j[1];
    var _k = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), bc = _k[0], setBc = _k[1];
    var _l = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), ca = _l[0], setCa = _l[1];
    function getColor(label) {
        if (label.indexOf('VA') >= 0)
            return '#A30000';
        if (label.indexOf('VB') >= 0)
            return '#0029A3';
        if (label.indexOf('VC') >= 0)
            return '#007A29';
        if (label.indexOf('VN') >= 0)
            return '#c3c3c3';
        if (label.indexOf('IA') >= 0)
            return '#FF0000';
        if (label.indexOf('IB') >= 0)
            return '#0066CC';
        if (label.indexOf('IC') >= 0)
            return '#33CC33';
        if (label.indexOf('IR') >= 0)
            return '#c3c3c3';
        else {
            var ranNumOne = Math.floor(Math.random() * 256).toString(16);
            var ranNumTwo = Math.floor(Math.random() * 256).toString(16);
            var ranNumThree = Math.floor(Math.random() * 256).toString(16);
            return "#" + (ranNumOne.length > 1 ? ranNumOne : "0" + ranNumOne) + (ranNumTwo.length > 1 ? ranNumTwo : "0" + ranNumTwo) + (ranNumThree.length > 1 ? ranNumThree : "0" + ranNumThree);
        }
    }
    var prefix = props.Type == 'Voltage' ? 'V' : 'I';
    if (props.Paths.length == 0)
        return null;
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: props.Show ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                    props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                    setWf(!all);
                    setRMS(!all);
                    setAmp(!all);
                    setPh(!all);
                    setAn(!all);
                    setBn(!all);
                    setCn(!all);
                    setAb(!all);
                    setBc(!all);
                    setCa(!all);
                    setAll(!all);
                } }, "All"),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: wf ? 1 : 0.5 }, onClick: function (evt) {
                    props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('wf') >= 0 && x.Show == wf; }).forEach(function (x) { return props.CallBack(x); });
                    setWf(!wf);
                } }, "Wf"),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: rms ? 1 : 0.5 }, onClick: function (evt) {
                    props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('rms') >= 0 && x.Show == rms; }).forEach(function (x) { return props.CallBack(x); });
                    setRMS(!rms);
                } }, "RMS"),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: amp ? 1 : 0.5 }, onClick: function (evt) {
                    props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('amp') >= 0 && x.Show == amp; }).forEach(function (x) { return props.CallBack(x); });
                    setAmp(!amp);
                } }, "Amp"),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ph ? 1 : 0.5 }, onClick: function (evt) {
                    props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('ph') >= 0 && x.Show == ph; }).forEach(function (x) { return props.CallBack(x); });
                    setPh(!ph);
                } }, "Ph")),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: an ? 1 : 0.5, backgroundColor: getColor(prefix + 'AN') }, onClick: function (evt) {
                    props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('an') >= 0 && x.Show == an; }).forEach(function (x) { return props.CallBack(x); });
                    setAn(!an);
                } },
                prefix,
                "AN"),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } })),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: bn ? 1 : 0.5, backgroundColor: getColor(prefix + 'BN') }, onClick: function (evt) {
                    props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('bn') >= 0 && x.Show == bn; }).forEach(function (x) { return props.CallBack(x); });
                    setBn(!bn);
                } },
                prefix,
                "BN"),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } })),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: cn ? 1 : 0.5, backgroundColor: getColor(prefix + 'CN') }, onClick: function (evt) {
                    props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('cn') >= 0 && x.Show == cn; }).forEach(function (x) { return props.CallBack(x); });
                    setCn(!cn);
                } },
                prefix,
                "CN"),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } })),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group", hidden: props.Type != 'Voltage' },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ab ? 1 : 0.5, backgroundColor: getColor(prefix + "AB") }, onClick: function (evt) {
                    props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('ab') >= 0 && x.Show == ab; }).forEach(function (x) { return props.CallBack(x); });
                    setAb(!ab);
                } },
                prefix,
                "AB"),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "AB", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "AB"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "AB", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "AB"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "AB", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "AB"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "AB", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "AB"; }), CallBack: function (path) { return props.CallBack(path); } })),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group", hidden: props.Type != 'Voltage' },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: bc ? 1 : 0.5, backgroundColor: getColor(prefix + "BC") }, onClick: function (evt) {
                    props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('bc') >= 0 && x.Show == bc; }).forEach(function (x) { return props.CallBack(x); });
                    setBc(!bc);
                } },
                prefix,
                "BC"),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "BC", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "BC"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "BC", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "BC"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "BC", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "BC"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "BC", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "BC"; }), CallBack: function (path) { return props.CallBack(path); } })),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group", hidden: props.Type != 'Voltage' },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ca ? 1 : 0.5, backgroundColor: getColor(prefix + "CA") }, onClick: function (evt) {
                    props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('ca') >= 0 && x.Show == ca; }).forEach(function (x) { return props.CallBack(x); });
                    setCa(!ca);
                } },
                prefix,
                "CA"),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Wf-" + prefix + "CA", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "CA"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "RMS-" + prefix + "CA", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "CA"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Amp-" + prefix + "CA", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "CA"; }), CallBack: function (path) { return props.CallBack(path); } }),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Button, { Key: "Ph-" + prefix + "CA", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "CA"; }), CallBack: function (path) { return props.CallBack(path); } }))));
};
var Button = function (props) {
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: {
            backgroundColor: props.Path == undefined ? 'black' : props.Path.Color,
            opacity: props.Path == undefined || props.Path.Show ? 1 : 0.5
        }, disabled: props.Path == undefined, onClick: function (evt) { return props.CallBack(props.Path); } }, props.Key));
};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90c3gvV2F2ZWZvcm1WaWV3ZXIvV2F2ZWZvcm1WaWV3ZXIudHN4Iiwid2VicGFjazovLy8uL3RzeC9XYXZlZm9ybVZpZXdlci9XYXZlZm9ybVZpZXdlckQzQ2hhcnQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHdHQUF3RztBQUN4Ryw2QkFBNkI7QUFDN0IsRUFBRTtBQUNGLHFFQUFxRTtBQUNyRSxFQUFFO0FBQ0Ysd0dBQXdHO0FBQ3hHLHdHQUF3RztBQUN4RyxzR0FBc0c7QUFDdEcsd0ZBQXdGO0FBQ3hGLEVBQUU7QUFDRiwwQ0FBMEM7QUFDMUMsRUFBRTtBQUNGLHdHQUF3RztBQUN4Ryx3R0FBd0c7QUFDeEcsNEVBQTRFO0FBQzVFLEVBQUU7QUFDRiw4QkFBOEI7QUFDOUIsd0dBQXdHO0FBQ3hHLDZCQUE2QjtBQUM3QixtREFBbUQ7QUFDbkQsRUFBRTtBQUNGLHdHQUF3Rzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFOUU7QUFFa0M7QUFFNUQsSUFBTSxjQUFjLEdBQUcsVUFBQyxLQUEwQjtJQUM5QyxJQUFNLFNBQVMsR0FBRyxHQUFHLENBQUM7SUFDdEIsSUFBTSxXQUFXLEdBQUcsR0FBRyxDQUFDO0lBQ3hCLElBQU0sYUFBYSxHQUFHLE1BQU0sQ0FBQyxVQUFVLEdBQUcsU0FBUyxHQUFHLFdBQVcsR0FBRyxFQUFFLENBQUM7SUFDakUsK0VBQTBELEVBQXpELFlBQUksRUFBRSxlQUFtRCxDQUFDO0lBQ2pFLDRDQUFLLENBQUMsU0FBUyxDQUFDO1FBQ1osSUFBSSxNQUFNLEdBQUcsWUFBWSxFQUFFLENBQUM7UUFDNUIsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFDLElBQTBCO1lBQ25DLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyQixDQUFDLENBQUMsQ0FBQztRQUNILE9BQU87WUFDSCxJQUFJLE1BQU0sQ0FBQyxLQUFLLElBQUksU0FB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LE9BQUksQ0FBQztRQUMxRCxJQUFJLEtBQUssSUFBTyxNQUFNLGFBQVU7WUFBRSxPQUFPLFFBQU0sTUFBTSxPQUFJLENBQUM7UUFDMUQsSUFBSSxLQUFLLElBQU8sTUFBTSxpQkFBYztZQUFFLE9BQU8sU0FBTyxNQUFNLE9BQUksQ0FBQztRQUMvRCxJQUFJLEtBQUssSUFBTyxNQUFNLGlCQUFjO1lBQUUsT0FBTyxTQUFPLE1BQU0sT0FBSSxDQUFDO1FBQy9ELElBQUksS0FBSyxJQUFPLE1BQU0saUJBQWM7WUFBRSxPQUFPLFNBQU8sTUFBTSxPQUFJLENBQUM7UUFDL0QsSUFBSSxLQUFLLElBQU8sTUFBTSxpQkFBYztZQUFFLE9BQU8sU0FBTyxNQUFNLE9BQUksQ0FBQztRQUMvRCxJQUFJLEtBQUssSUFBTyxNQUFNLGlCQUFjO1lBQUUsT0FBTyxTQUFPLE1BQU0sT0FBSSxDQUFDO1FBQy9ELElBQUksS0FBSyxJQUFPLE1BQU0saUJBQWM7WUFBRSxPQUFPLFNBQU8sTUFBTSxPQUFJLENBQUM7O1lBQzFELE9BQU8sS0FBRyxNQUFRLENBQUM7SUFDNUIsQ0FBQztJQUVELFNBQVMsUUFBUSxDQUFDLEtBQUs7UUFDbkIsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7WUFBRSxPQUFPLFNBQVMsQ0FBQztRQUMvQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBQy9DLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQUUsT0FBTyxTQUFTLENBQUM7UUFDL0MsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7WUFBRSxPQUFPLFNBQVMsQ0FBQztRQUMvQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBQy9DLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENB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ci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbi8vICBXYXZlZm9ybVZpZXdlci50c3ggLSBHYnRjXHJcbi8vXHJcbi8vICBDb3B5cmlnaHQgwqkgMjAyMCwgR3JpZCBQcm90ZWN0aW9uIEFsbGlhbmNlLiAgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuLy9cclxuLy8gIExpY2Vuc2VkIHRvIHRoZSBHcmlkIFByb3RlY3Rpb24gQWxsaWFuY2UgKEdQQSkgdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWVcclxuLy8gIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC5cclxuLy8gIFRoZSBHUEEgbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHRoZSBcIkxpY2Vuc2VcIjsgeW91IG1heSBub3QgdXNlIHRoaXNcclxuLy8gIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0OlxyXG4vL1xyXG4vLyAgICAgIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVRcclxuLy9cclxuLy8gIFVubGVzcyBhZ3JlZWQgdG8gaW4gd3JpdGluZywgdGhlIHN1YmplY3Qgc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuLy8gIFwiQVMtSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFJlZmVyIHRvIHRoZVxyXG4vLyAgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMuXHJcbi8vXHJcbi8vICBDb2RlIE1vZGlmaWNhdGlvbiBIaXN0b3J5OlxyXG4vLyAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAgMDcvMzAvMjAyMCAtIEJpbGx5IEVybmVzdFxyXG4vLyAgICAgICBHZW5lcmF0ZWQgb3JpZ2luYWwgdmVyc2lvbiBvZiBzb3VyY2UgY29kZS5cclxuLy9cclxuLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IE9wZW5YREEgfSBmcm9tICcuLi9nbG9iYWwnO1xyXG5pbXBvcnQgV2F2ZWZvcm1WaWV3ZXJEM0NoYXJ0IGZyb20gJy4vV2F2ZWZvcm1WaWV3ZXJEM0NoYXJ0JztcclxuXHJcbmNvbnN0IFdhdmVmb3JtVmlld2VyID0gKHByb3BzOiB7IEV2ZW50SUQ6IG51bWJlciB9KSA9PiB7XHJcbiAgICBjb25zdCBpbmZvV2lkdGggPSAzMDA7XHJcbiAgICBjb25zdCBwb2ludHNXaWR0aCA9IDUwMDtcclxuICAgIGNvbnN0IHdhdmVmb3JtV2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aCAtIGluZm9XaWR0aCAtIHBvaW50c1dpZHRoIC0gMTA7XHJcbiAgICBjb25zdCBbaW5mbywgc2V0SW5mb10gPSBSZWFjdC51c2VTdGF0ZTxPcGVuWERBLkV2ZW50LkluZm8+KG51bGwpO1xyXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBsZXQgaGFuZGxlID0gR2V0RXZlbnRJbmZvKCk7XHJcbiAgICAgICAgaGFuZGxlLmRvbmUoKGRhdGE6IE9wZW5YREEuRXZlbnQuSW5mb1tdKSA9PiB7XHJcbiAgICAgICAgICAgIHNldEluZm8oZGF0YVswXSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKGhhbmRsZS5hYm9ydCAhPSB1bmRlZmluZWQpIGhhbmRsZS5hYm9ydCgpO1xyXG4gICAgICAgIH1cclxuICAgIH0sIFtdKTtcclxuXHJcbiAgICBmdW5jdGlvbiBHZXRFdmVudEluZm8oKTogSlF1ZXJ5LmpxWEhSPE9wZW5YREEuRXZlbnQuSW5mb1tdPiB7XHJcbiAgICAgICAgcmV0dXJuICQuYWpheCh7XHJcbiAgICAgICAgICAgIHR5cGU6IFwiR0VUXCIsXHJcbiAgICAgICAgICAgIHVybDogYCR7aG9tZVBhdGh9YXBpL09wZW5YREEvRXZlbnQvSW5mby8ke3Byb3BzLkV2ZW50SUR9YCxcclxuICAgICAgICAgICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOFwiLFxyXG4gICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxyXG4gICAgICAgICAgICBjYWNoZTogdHJ1ZSxcclxuICAgICAgICAgICAgYXN5bmM6IHRydWVcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCIgc3R5bGU9e3toZWlnaHQ6IFwiMTAwJVwiLCBtYXJnaW46ICc1cHggNXB4IDVweCA1cHggJ319PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiIHN0eWxlPXt7IHBhZGRpbmc6ICcwcHggMnB4IDBweCAwcHgnLCB3aWR0aDogaW5mb1dpZHRoIH19PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWhlYWRlclwiPkluZm88L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtYm9keVwiIHN0eWxlPXt7IHBhZGRpbmc6IDAsIG1heEhlaWdodDogKHdpbmRvdy5pbm5lckhlaWdodCAtIDEyNykgLSA3MCwgaGVpZ2h0OiAod2luZG93LmlubmVySGVpZ2h0IC0gMTI3KSAtIDcwLCBvdmVyZmxvd1k6ICdoaWRkZW4nIH19PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7KGluZm8gIT0gbnVsbCA/IFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInRhYmxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+PHRkPk1ldGVyPC90ZD48dGQ+e2luZm8uTWV0ZXJ9PC90ZD48L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+PHRkPlRpbWU8L3RkPjx0ZD57bW9tZW50KGluZm8uU3RhcnRUaW1lKS5mb3JtYXQoJ01NL0REL1lZWVkgSEg6bW0nKX0mbmJzcDsoQ1NUKTwvdGQ+PC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZD5UeXBlPC90ZD48dGQ+e2luZm8uRXZlbnRUeXBlfTwvdGQ+PC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZD5QaGFzZTwvdGQ+PHRkPntpbmZvLlBoYXNlfTwvdGQ+PC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZD5EdXJhdGlvbjwvdGQ+PHRkPntpbmZvLkR1cmF0aW9ufTwvdGQ+PC90cj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZD5NYWduaXR1ZGU8L3RkPjx0ZD57aW5mby5NYWduaXR1ZGV9PC90ZD48L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+PHRkPkRlcHRoPC90ZD48dGQ+e2luZm8uU2FnRGVwdGh9PC90ZD48L3RyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA6IG51bGwpfVxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJcIiBzdHlsZT17eyBwYWRkaW5nOiAnMHB4IDJweCAwcHggMHB4Jywgd2lkdGg6IHdhdmVmb3JtV2lkdGggfX0+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtaGVhZGVyXCI+V2F2ZWZvcm1zPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWJvZHlcIiBzdHlsZT17eyBwYWRkaW5nOiAwLCBtYXhIZWlnaHQ6IDIqKHdpbmRvdy5pbm5lckhlaWdodCAtIDI0NikvMywgaGVpZ2h0OiAyKih3aW5kb3cuaW5uZXJIZWlnaHQgLSAyNDYpLzMsIG92ZXJmbG93WTogJ2hpZGRlbicgfX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxXYXZlZm9ybVZpZXdlckQzQ2hhcnQgRXZlbnRJRD17cHJvcHMuRXZlbnRJRH0gTWVhc3VyZW1lbnRUeXBlPVwiVm9sdGFnZVwiIERhdGFUeXBlPVwiVGltZVwiIEhlaWdodD17KHdpbmRvdy5pbm5lckhlaWdodCAtIDI0NikgLyAzfSBXaWR0aD17d2F2ZWZvcm1XaWR0aCAtIDR9IE1hcmdpbj17eyBUb3A6IDEsIEJvdHRvbTogMSwgTGVmdDogMSwgUmlnaHQ6IDEgfX0gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPFdhdmVmb3JtVmlld2VyRDNDaGFydCBFdmVudElEPXtwcm9wcy5FdmVudElEfSBNZWFzdXJlbWVudFR5cGU9XCJDdXJyZW50XCIgRGF0YVR5cGU9XCJUaW1lXCIgSGVpZ2h0PXsod2luZG93LmlubmVySGVpZ2h0IC0gMjQ2KSAvIDN9IFdpZHRoPXt3YXZlZm9ybVdpZHRoIC0gNH0gTWFyZ2luPXt7IFRvcDogMSwgQm90dG9tOiAxLCBMZWZ0OiAxLCBSaWdodDogMSB9fSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtaGVhZGVyXCI+QW5hbHl0aWNzPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWJvZHlcIiBzdHlsZT17eyBwYWRkaW5nOiAwLCBtYXhIZWlnaHQ6ICh3aW5kb3cuaW5uZXJIZWlnaHQgLSAyNDYpIC8gMywgaGVpZ2h0OiAod2luZG93LmlubmVySGVpZ2h0IC0gMjQ2KSAvIDMsIG92ZXJmbG93WTogJ2hpZGRlbicgfX0+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiXCIgc3R5bGU9e3sgcGFkZGluZzogJzBweCAycHggMHB4IDBweCcsIHdpZHRoOiBwb2ludHNXaWR0aCB9fT5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1oZWFkZXJcIj5Qb2ludHM8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtYm9keVwiIHN0eWxlPXt7IHBhZGRpbmc6IDAsIG1heEhlaWdodDogKHdpbmRvdy5pbm5lckhlaWdodCAtIDI0NikvMiwgaGVpZ2h0OiAod2luZG93LmlubmVySGVpZ2h0IC0gMjQ2KS8yLCBvdmVyZmxvd1k6ICdoaWRkZW4nIH19PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtaGVhZGVyXCI+UGhhc29yPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWJvZHlcIiBzdHlsZT17eyBwYWRkaW5nOiAwLCBtYXhIZWlnaHQ6ICh3aW5kb3cuaW5uZXJIZWlnaHQgLSAyNDYpLzIsIGhlaWdodDogKHdpbmRvdy5pbm5lckhlaWdodCAtIDI0NikvMiwgb3ZlcmZsb3dZOiAnaGlkZGVuJyB9fT5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgV2F2ZWZvcm1WaWV3ZXI7IiwiLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuLy8gIEV2ZW50U2VhcmNoUHJldmlld0QzQ2hhcnQudHN4IC0gR2J0Y1xyXG4vL1xyXG4vLyAgQ29weXJpZ2h0IMKpIDIwMjAsIEdyaWQgUHJvdGVjdGlvbiBBbGxpYW5jZS4gIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXHJcbi8vXHJcbi8vICBMaWNlbnNlZCB0byB0aGUgR3JpZCBQcm90ZWN0aW9uIEFsbGlhbmNlIChHUEEpIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlXHJcbi8vICB0aGUgTk9USUNFIGZpbGUgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuXHJcbi8vICBUaGUgR1BBIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCB0aGUgXCJMaWNlbnNlXCI7IHlvdSBtYXkgbm90IHVzZSB0aGlzXHJcbi8vICBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdDpcclxuLy9cclxuLy8gICAgICBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUXHJcbi8vXHJcbi8vICBVbmxlc3MgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHRoZSBzdWJqZWN0IHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXHJcbi8vICBcIkFTLUlTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBSZWZlciB0byB0aGVcclxuLy8gIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zLlxyXG4vL1xyXG4vLyAgQ29kZSBNb2RpZmljYXRpb24gSGlzdG9yeTpcclxuLy8gIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gIDAyLzIwLzIwMjAgLSBCaWxseSBFcm5lc3RcclxuLy8gICAgICAgR2VuZXJhdGVkIG9yaWdpbmFsIHZlcnNpb24gb2Ygc291cmNlIGNvZGUuXHJcbi8vXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBzY2FsZUxpbmVhciwgbGluZSwgZXh0ZW50IH0gZnJvbSAnZDMnO1xyXG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xyXG5cclxuY29uc3QgV2F2ZWZvcm1WaWV3ZXJEM0NoYXJ0ID0gKHByb3BzOiB7IEV2ZW50SUQ6IG51bWJlciwgTWVhc3VyZW1lbnRUeXBlOiAnQ3VycmVudCcgfCAnVm9sdGFnZScgfCAnQW5hbHl0aWMnLCBEYXRhVHlwZTogJ1RpbWUnIHwgJ1N0YXRpc3RpYycgfCAnVHJlbmRpbmcnLCBNYXJnaW46IHsgTGVmdDogbnVtYmVyLCBSaWdodDogbnVtYmVyLCBUb3A6IG51bWJlciwgQm90dG9tOiBudW1iZXIgfSwgV2lkdGg6IG51bWJlciwgSGVpZ2h0OiBudW1iZXIgfSkgPT4ge1xyXG5cclxuICAgIGNvbnN0IFtwYXRocywgc2V0UGF0aHNdID0gUmVhY3QudXNlU3RhdGUgPCB7IEtleTogc3RyaW5nLCBQYXRoOiBKU1guRWxlbWVudCwgU2hvdzogYm9vbGVhbiwgQ29sb3I6IHN0cmluZyB9W10+KFtdKTtcclxuICAgIGNvbnN0IFtzaG93TGVnZW5kLCBzZXRTaG93TGVnZW5kXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuXHJcbiAgICBjb25zdCBjaGFydCA9IFJlYWN0LnVzZVJlZihudWxsKTtcclxuICAgIGNvbnN0IHByZWZpeCA9IHByb3BzLk1lYXN1cmVtZW50VHlwZSA9PSAnVm9sdGFnZScgPyAnVicgOiAnSSc7XHJcblxyXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBzZXRQYXRocyhbXSk7XHJcbiAgICAgICAgcmV0dXJuIEdldERhdGEoKTtcclxuICAgIH0sIFtwcm9wcy5FdmVudElEXSk7XHJcblxyXG4gICAgZnVuY3Rpb24gR2V0RGF0YSgpIHtcclxuICAgICAgICBsZXQgaGFuZGxlID0gJC5hamF4KHtcclxuICAgICAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICAgICAgdXJsOiBgJHtob21lUGF0aH1hcGkvT3BlblhEQS9FdmVudC9XYXZlZm9ybS8ke3Byb3BzLkV2ZW50SUR9LyR7cHJvcHMuTWVhc3VyZW1lbnRUeXBlfS8ke3Byb3BzLldpZHRofWAsXHJcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcIixcclxuICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcclxuICAgICAgICAgICAgY2FjaGU6IHRydWUsXHJcbiAgICAgICAgICAgIGFzeW5jOiB0cnVlXHJcbiAgICAgICAgfSkuZG9uZShkYXRhID0+IERyYXdDaGFydChkYXRhKSk7XHJcblxyXG5cclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoaGFuZGxlLmFib3J0ICE9IHVuZGVmaW5lZCkgaGFuZGxlLmFib3J0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBmdW5jdGlvbiBEcmF3Q2hhcnQoZGF0YSkge1xyXG5cclxuICAgICAgICBsZXQgeCA9IHNjYWxlTGluZWFyKCkucmFuZ2VSb3VuZChbcHJvcHMuTWFyZ2luLkxlZnQsIHByb3BzLldpZHRoIC0gcHJvcHMuTWFyZ2luLlJpZ2h0XSk7XHJcbiAgICAgICAgbGV0IHkgPSBzY2FsZUxpbmVhcigpLnJhbmdlUm91bmQoW3Byb3BzLkhlaWdodCAtIHByb3BzLk1hcmdpbi5Ub3AsIHByb3BzLk1hcmdpbi5Cb3R0b21dKTtcclxuXHJcbiAgICAgICAgbGV0IHlleHRlbnQgPSBbMCwgMF07XHJcbiAgICAgICAgbGV0IHhleHRlbnQgPSBbOTAwNzE5OTI1NDc0MDk5MSwgLTkwMDcxOTkyNTQ3NDA5OTBdO1xyXG4gICAgICAgIE9iamVjdC5rZXlzKGRhdGEpLmZvckVhY2goKGtleSwgaW5kZXgsIGtleXMpID0+IHtcclxuICAgICAgICAgICAgbGV0IG5ld3lleGVudCA9IGV4dGVudChkYXRhW2tleV0sIGQgPT4gZFsxXSk7XHJcbiAgICAgICAgICAgIGxldCBuZXd4ZXhlbnQgPSBleHRlbnQoZGF0YVtrZXldLCBkID0+IGRbMF0pO1xyXG5cclxuICAgICAgICAgICAgaWYgKHBhcnNlRmxvYXQobmV3eWV4ZW50WzBdLnRvU3RyaW5nKCkpIDwgeWV4dGVudFswXSkgeWV4dGVudFswXSA9IHBhcnNlRmxvYXQobmV3eWV4ZW50WzBdLnRvU3RyaW5nKCkpXHJcbiAgICAgICAgICAgIGlmIChwYXJzZUZsb2F0KG5ld3lleGVudFsxXS50b1N0cmluZygpKSA+IHlleHRlbnRbMV0pIHlleHRlbnRbMV0gPSBwYXJzZUZsb2F0KG5ld3lleGVudFsxXS50b1N0cmluZygpKVxyXG4gICAgICAgICAgICBpZiAocGFyc2VGbG9hdChuZXd4ZXhlbnRbMF0udG9TdHJpbmcoKSkgPCB4ZXh0ZW50WzBdKSB4ZXh0ZW50WzBdID0gcGFyc2VGbG9hdChuZXd4ZXhlbnRbMF0udG9TdHJpbmcoKSlcclxuICAgICAgICAgICAgaWYgKHBhcnNlRmxvYXQobmV3eGV4ZW50WzFdLnRvU3RyaW5nKCkpID4geGV4dGVudFsxXSkgeGV4dGVudFsxXSA9IHBhcnNlRmxvYXQobmV3eGV4ZW50WzFdLnRvU3RyaW5nKCkpXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHlleHRlbnQgPSBbMS4yMCAqIHlleHRlbnRbMF0sIDEuMjAgKiB5ZXh0ZW50WzFdXVxyXG4gICAgICAgIHkuZG9tYWluKHlleHRlbnQpO1xyXG4gICAgICAgIHguZG9tYWluKHhleHRlbnQpO1xyXG5cclxuICAgICAgICBsZXQgbGluZWZ1bmMgPSBsaW5lPFtudW1iZXIsIG51bWJlcl0+KCkueChkID0+IHgoZFswXSkpLnkoZCA9PiB5KGRbMV0pKTtcclxuXHJcbiAgICAgICAgbGV0IG5ld1BhdGhzID0gW10gYXMgeyBLZXk6IHN0cmluZywgUGF0aDogSlNYLkVsZW1lbnQsIFNob3c6IGJvb2xlYW4sIENvbG9yOiBzdHJpbmcgfVtdO1xyXG4gICAgICAgICQuZWFjaChPYmplY3Qua2V5cyhkYXRhKSwgKGluZGV4LCBrZXkpID0+IHtcclxuICAgICAgICAgICAgbGV0IHBhdGggPSBwYXRocy5maW5kKHggPT4geC5LZXkgPT0gR2V0S2V5KGtleSkpO1xyXG4gICAgICAgICAgICBpZiAocGF0aCA9PSB1bmRlZmluZWQpXHJcbiAgICAgICAgICAgICAgICBuZXdQYXRocy5wdXNoKHsgS2V5OiBHZXRLZXkoa2V5KSwgQ29sb3I6IEdldENvbG9yKGtleSksIFNob3c6IHRydWUsIFBhdGg6IDxwYXRoIGtleT17a2V5fSBmaWxsPSdub25lJyBzdHJva2VMaW5lam9pbj0ncm91bmQnIHN0cm9rZVdpZHRoPScxLjUnIHN0cm9rZT17R2V0Q29sb3Ioa2V5KX0gZD17bGluZWZ1bmMoZGF0YVtrZXldKX0gLz4gfSk7XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcGF0aC5QYXRoID0gPHBhdGgga2V5PXtrZXl9IGZpbGw9J25vbmUnIHN0cm9rZUxpbmVqb2luPSdyb3VuZCcgc3Ryb2tlV2lkdGg9JzEuNScgc3Ryb2tlPXtwYXRoLkNvbG9yfSBkPXtsaW5lZnVuYyhkYXRhW2tleV0pfSAvPjtcclxuICAgICAgICAgICAgICAgIG5ld1BhdGhzLnB1c2gocGF0aCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBzZXRQYXRocyhuZXdQYXRocyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gR2V0S2V5KGxhYmVsKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUFOYCkgcmV0dXJuIGBXZi0ke3ByZWZpeH1BTmA7XHJcbiAgICAgICAgaWYgKGxhYmVsID09IGAke3ByZWZpeH1CTmApIHJldHVybiBgV2YtJHtwcmVmaXh9Qk5gO1xyXG4gICAgICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9Q05gKSByZXR1cm4gYFdmLSR7cHJlZml4fUNOYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUFCYCkgcmV0dXJuIGBXZi0ke3ByZWZpeH1BQmA7XHJcbiAgICAgICAgaWYgKGxhYmVsID09IGAke3ByZWZpeH1CQ2ApIHJldHVybiBgV2YtJHtwcmVmaXh9QkNgO1xyXG4gICAgICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9Q0FgKSByZXR1cm4gYFdmLSR7cHJlZml4fUNBYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUFOIFJNU2ApIHJldHVybiBgUk1TLSR7cHJlZml4fUFOYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUJOIFJNU2ApIHJldHVybiBgUk1TLSR7cHJlZml4fUJOYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUNOIFJNU2ApIHJldHVybiBgUk1TLSR7cHJlZml4fUNOYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUFCIFJNU2ApIHJldHVybiBgUk1TLSR7cHJlZml4fUFCYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUJDIFJNU2ApIHJldHVybiBgUk1TLSR7cHJlZml4fUJDYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUNBIFJNU2ApIHJldHVybiBgUk1TLSR7cHJlZml4fUNBYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUFOIFBoYXNlYCkgcmV0dXJuIGBQaC0ke3ByZWZpeH1BTmA7XHJcbiAgICAgICAgaWYgKGxhYmVsID09IGAke3ByZWZpeH1CTiBQaGFzZWApIHJldHVybiBgUGgtJHtwcmVmaXh9Qk5gO1xyXG4gICAgICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9Q04gUGhhc2VgKSByZXR1cm4gYFBoLSR7cHJlZml4fUNOYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUFCIFBoYXNlYCkgcmV0dXJuIGBQaC0ke3ByZWZpeH1BQmA7XHJcbiAgICAgICAgaWYgKGxhYmVsID09IGAke3ByZWZpeH1CQyBQaGFzZWApIHJldHVybiBgUGgtJHtwcmVmaXh9QkNgO1xyXG4gICAgICAgIGlmIChsYWJlbCA9PSBgJHtwcmVmaXh9Q0EgUGhhc2VgKSByZXR1cm4gYFBoLSR7cHJlZml4fUNBYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUFOIEFtcGxpdHVkZWApIHJldHVybiBgQW1wLSR7cHJlZml4fUFOYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUJOIEFtcGxpdHVkZWApIHJldHVybiBgQW1wLSR7cHJlZml4fUJOYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUNOIEFtcGxpdHVkZWApIHJldHVybiBgQW1wLSR7cHJlZml4fUNOYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUFCIEFtcGxpdHVkZWApIHJldHVybiBgQW1wLSR7cHJlZml4fUFCYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUJDIEFtcGxpdHVkZWApIHJldHVybiBgQW1wLSR7cHJlZml4fUJDYDtcclxuICAgICAgICBpZiAobGFiZWwgPT0gYCR7cHJlZml4fUNBIEFtcGxpdHVkZWApIHJldHVybiBgQW1wLSR7cHJlZml4fUNBYDtcclxuICAgICAgICBlbHNlIHJldHVybiBgJHtwcmVmaXh9YDtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBHZXRDb2xvcihsYWJlbCkge1xyXG4gICAgICAgIGlmIChsYWJlbC5pbmRleE9mKCdWQScpID49IDApIHJldHVybiAnI0EzMDAwMCc7XHJcbiAgICAgICAgaWYgKGxhYmVsLmluZGV4T2YoJ1ZCJykgPj0gMCkgcmV0dXJuICcjMDAyOUEzJztcclxuICAgICAgICBpZiAobGFiZWwuaW5kZXhPZignVkMnKSA+PSAwKSByZXR1cm4gJyMwMDdBMjknO1xyXG4gICAgICAgIGlmIChsYWJlbC5pbmRleE9mKCdWTicpID49IDApIHJldHVybiAnI2MzYzNjMyc7XHJcbiAgICAgICAgaWYgKGxhYmVsLmluZGV4T2YoJ0lBJykgPj0gMCkgcmV0dXJuICcjRkYwMDAwJztcclxuICAgICAgICBpZiAobGFiZWwuaW5kZXhPZignSUInKSA+PSAwKSByZXR1cm4gJyMwMDY2Q0MnO1xyXG4gICAgICAgIGlmIChsYWJlbC5pbmRleE9mKCdJQycpID49IDApIHJldHVybiAnIzMzQ0MzMyc7XHJcbiAgICAgICAgaWYgKGxhYmVsLmluZGV4T2YoJ0lSJykgPj0gMCkgcmV0dXJuICcjYzNjM2MzJztcclxuXHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHZhciByYW5OdW1PbmUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyNTYpLnRvU3RyaW5nKDE2KTtcclxuICAgICAgICAgICAgdmFyIHJhbk51bVR3byA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDI1NikudG9TdHJpbmcoMTYpO1xyXG4gICAgICAgICAgICB2YXIgcmFuTnVtVGhyZWUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyNTYpLnRvU3RyaW5nKDE2KTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiBgIyR7KHJhbk51bU9uZS5sZW5ndGggPiAxID8gcmFuTnVtT25lIDogXCIwXCIgKyByYW5OdW1PbmUpfSR7KHJhbk51bVR3by5sZW5ndGggPiAxID8gcmFuTnVtVHdvIDogXCIwXCIgKyByYW5OdW1Ud28pfSR7KHJhbk51bVRocmVlLmxlbmd0aCA+IDEgPyByYW5OdW1UaHJlZSA6IFwiMFwiICsgcmFuTnVtVGhyZWUpfWA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBzdHlsZT17eyBoZWlnaHQ6IHByb3BzLkhlaWdodCwgcG9zaXRpb246ICdyZWxhdGl2ZScgLyosIG1hcmdpbjogJzB4JywgcGFkZGluZzogJzBweCcqLyB9fT5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtIGRyb3Bkb3duLXRvZ2dsZVwiIHN0eWxlPXt7IHBvc2l0aW9uOiAnYWJzb2x1dGUnLCByaWdodDogMCB9fSBvbkNsaWNrPXsoKT0+IHNldFNob3dMZWdlbmQoIXNob3dMZWdlbmQpfT5MZWdlbmQ8L2J1dHRvbj5cclxuICAgICAgICAgICAgPExlZ2VuZCBTaG93PXtzaG93TGVnZW5kfSBUeXBlPXtwcm9wcy5NZWFzdXJlbWVudFR5cGV9IFBhdGhzPXtwYXRoc30gQ2FsbEJhY2s9eyhwYXRoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgbmV3UGF0aHMgPSBfLmNsb25lKHBhdGhzKTtcclxuICAgICAgICAgICAgICAgIGxldCBuZXdQYXRoID0gbmV3UGF0aHMuZmluZCh4ID0+IHguS2V5ID09IHBhdGguS2V5KTtcclxuICAgICAgICAgICAgICAgIG5ld1BhdGguU2hvdyA9ICFwYXRoLlNob3c7XHJcbiAgICAgICAgICAgICAgICBzZXRQYXRocyhuZXdQYXRocyk7XHJcbiAgICAgICAgICAgIH19IC8+XHJcbiAgICAgICAgICAgIDxzdmcgd2lkdGg9e3Byb3BzLldpZHRofSBoZWlnaHQ9e3Byb3BzLkhlaWdodH0gc3R5bGU9e3sgZmlsbDogJ25vbmUnLCBzdHJva2U6ICdibGFjaycsIHN0cm9rZVdpZHRoOiAnMXB4JywgIGZvbnRGYW1pbHk6ICdzYW5zLXNlcmlmJywgZm9udFNpemU6ICdzbWFsbCd9fT5cclxuICAgICAgICAgICAgICAgIHsvKiBDaGFydCBib3JkZXJzICovfVxyXG4gICAgICAgICAgICAgICAgPHBhdGggZD17YE0gJHtwcm9wcy5NYXJnaW4uTGVmdH0gJHtwcm9wcy5NYXJnaW4uVG9wfSBIICR7cHJvcHMuV2lkdGggLSBwcm9wcy5NYXJnaW4uUmlnaHR9IFYgJHtwcm9wcy5IZWlnaHR9IEggJHtwcm9wcy5NYXJnaW4uTGVmdH0gViAke3Byb3BzLk1hcmdpbi5Ub3B9YH0gc3R5bGU9e3sgc2hhcGVSZW5kZXJpbmc6ICdjcmlzcEVkZ2VzJ319IC8+XHJcbiAgICAgICAgICAgICAgICA8dGV4dCB0cmFuc2Zvcm09e2Byb3RhdGUoLTkwIDAsMClgfSB5PXtwcm9wcy5NYXJnaW4uTGVmdCAtIDE1fSB4PXstKHByb3BzLkhlaWdodCArIDM1KSAvIDJ9Pntwcm9wcy5NZWFzdXJlbWVudFR5cGUgPT0gXCJWb2x0YWdlXCIgPyBcIlZvbHRhZ2VcIiA6IFwiQW1wc1wifTwvdGV4dD5cclxuICAgICAgICAgICAgICAgIDxnPlxyXG4gICAgICAgICAgICAgICAgICAgIHtwYXRocy5maWx0ZXIoeCA9PiB4LlNob3cpLm1hcCh4ID0+IHguUGF0aCl9XHJcbiAgICAgICAgICAgICAgICA8L2c+XHJcbiAgICAgICAgICAgIDwvc3ZnPlxyXG5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFdhdmVmb3JtVmlld2VyRDNDaGFydDtcclxuXHJcbmNvbnN0IExlZ2VuZCA9IChwcm9wczoge1xyXG4gICAgU2hvdzogYm9vbGVhbixcclxuICAgIFR5cGU6ICdWb2x0YWdlJyB8ICdDdXJyZW50JyB8ICdBbmFseXRpYycsXHJcbiAgICBQYXRoczogeyBLZXk6IHN0cmluZywgUGF0aDogSlNYLkVsZW1lbnQsIFNob3c6IGJvb2xlYW4sIENvbG9yOiBzdHJpbmcgfVtdLFxyXG4gICAgQ2FsbEJhY2s6IChwYXRoOiB7IEtleTogc3RyaW5nLCBQYXRoOiBKU1guRWxlbWVudCwgU2hvdzogYm9vbGVhbiwgQ29sb3I6IHN0cmluZyB9KSA9PiB2b2lkXHJcbn0pID0+IHtcclxuXHJcbiAgICBjb25zdCBbYWxsLCBzZXRBbGxdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4odHJ1ZSk7XHJcbiAgICBjb25zdCBbd2YsIHNldFdmXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KHRydWUpO1xyXG4gICAgY29uc3QgW3Jtcywgc2V0Uk1TXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KHRydWUpO1xyXG4gICAgY29uc3QgW2FtcCwgc2V0QW1wXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KHRydWUpO1xyXG4gICAgY29uc3QgW3BoLCBzZXRQaF0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPih0cnVlKTtcclxuICAgIGNvbnN0IFthbiwgc2V0QW5dID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4odHJ1ZSk7XHJcbiAgICBjb25zdCBbYm4sIHNldEJuXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KHRydWUpO1xyXG4gICAgY29uc3QgW2NuLCBzZXRDbl0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPih0cnVlKTtcclxuICAgIGNvbnN0IFthYiwgc2V0QWJdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4odHJ1ZSk7XHJcbiAgICBjb25zdCBbYmMsIHNldEJjXSA9IFJlYWN0LnVzZVN0YXRlPGJvb2xlYW4+KHRydWUpO1xyXG4gICAgY29uc3QgW2NhLCBzZXRDYV0gPSBSZWFjdC51c2VTdGF0ZTxib29sZWFuPih0cnVlKTtcclxuXHJcbiAgICBmdW5jdGlvbiBnZXRDb2xvcihsYWJlbCkge1xyXG4gICAgICAgIGlmIChsYWJlbC5pbmRleE9mKCdWQScpID49IDApIHJldHVybiAnI0EzMDAwMCc7XHJcbiAgICAgICAgaWYgKGxhYmVsLmluZGV4T2YoJ1ZCJykgPj0gMCkgcmV0dXJuICcjMDAyOUEzJztcclxuICAgICAgICBpZiAobGFiZWwuaW5kZXhPZignVkMnKSA+PSAwKSByZXR1cm4gJyMwMDdBMjknO1xyXG4gICAgICAgIGlmIChsYWJlbC5pbmRleE9mKCdWTicpID49IDApIHJldHVybiAnI2MzYzNjMyc7XHJcbiAgICAgICAgaWYgKGxhYmVsLmluZGV4T2YoJ0lBJykgPj0gMCkgcmV0dXJuICcjRkYwMDAwJztcclxuICAgICAgICBpZiAobGFiZWwuaW5kZXhPZignSUInKSA+PSAwKSByZXR1cm4gJyMwMDY2Q0MnO1xyXG4gICAgICAgIGlmIChsYWJlbC5pbmRleE9mKCdJQycpID49IDApIHJldHVybiAnIzMzQ0MzMyc7XHJcbiAgICAgICAgaWYgKGxhYmVsLmluZGV4T2YoJ0lSJykgPj0gMCkgcmV0dXJuICcjYzNjM2MzJztcclxuXHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHZhciByYW5OdW1PbmUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyNTYpLnRvU3RyaW5nKDE2KTtcclxuICAgICAgICAgICAgdmFyIHJhbk51bVR3byA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDI1NikudG9TdHJpbmcoMTYpO1xyXG4gICAgICAgICAgICB2YXIgcmFuTnVtVGhyZWUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyNTYpLnRvU3RyaW5nKDE2KTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiBgIyR7KHJhbk51bU9uZS5sZW5ndGggPiAxID8gcmFuTnVtT25lIDogXCIwXCIgKyByYW5OdW1PbmUpfSR7KHJhbk51bVR3by5sZW5ndGggPiAxID8gcmFuTnVtVHdvIDogXCIwXCIgKyByYW5OdW1Ud28pfSR7KHJhbk51bVRocmVlLmxlbmd0aCA+IDEgPyByYW5OdW1UaHJlZSA6IFwiMFwiICsgcmFuTnVtVGhyZWUpfWA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHByZWZpeCA9IHByb3BzLlR5cGUgPT0gJ1ZvbHRhZ2UnID8gJ1YnIDogJ0knO1xyXG4gICAgaWYgKHByb3BzLlBhdGhzLmxlbmd0aCA9PSAwKSByZXR1cm4gbnVsbDtcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXAtdmVydGljYWxcIiBzdHlsZT17eyBkaXNwbGF5OiBwcm9wcy5TaG93ID8gJ2Jsb2NrJyA6ICdub25lJywgcG9zaXRpb246ICdhYnNvbHV0ZScsIHdpZHRoOiA0MDAsIHJpZ2h0OiAwLCB0b3A6IDQwLCBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZSd9fT5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBhbGwgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LlNob3cgPT0gYWxsKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHNldFdmKCFhbGwpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldFJNUyghYWxsKTtcclxuICAgICAgICAgICAgICAgICAgICBzZXRBbXAoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0UGgoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0QW4oIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0Qm4oIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0Q24oIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0QWIoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0QmMoIWFsbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0Q2EoIWFsbCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHNldEFsbCghYWxsKTtcclxuICAgICAgICAgICAgICAgIH19PkFsbDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IHdmID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCd3ZicpID49IDAgJiYgeC5TaG93ID09IHdmKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgc2V0V2YoIXdmKTtcclxuICAgICAgICAgICAgICAgIH19PldmPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogcm1zID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCdybXMnKSA+PSAwICYmIHguU2hvdyA9PSBybXMpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICBzZXRSTVMoIXJtcyk7XHJcbiAgICAgICAgICAgICAgICB9fT5STVM8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBhbXAgPyAxIDogMC41IH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ2FtcCcpID49IDAgJiYgeC5TaG93ID09IGFtcCkuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgIHNldEFtcCghYW1wKTtcclxuICAgICAgICAgICAgICAgIH19PkFtcDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IHBoID8gMSA6IDAuNSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCdwaCcpID49IDAgJiYgeC5TaG93ID09IHBoKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgc2V0UGgoIXBoKTtcclxuICAgICAgICAgICAgICAgIH19PlBoPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiID5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBhbiA/IDEgOiAwLjUsIGJhY2tncm91bmRDb2xvcjogZ2V0Q29sb3IocHJlZml4ICsgJ0FOJykgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5LnRvTG93ZXJDYXNlKCkuaW5kZXhPZignYW4nKSA+PSAwICYmIHguU2hvdyA9PSBhbikuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgIHNldEFuKCFhbik7XHJcbiAgICAgICAgICAgICAgICB9fT57cHJlZml4fUFOPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFdmLSR7cHJlZml4fUFOYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBXZi0ke3ByZWZpeH1BTmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BSTVMtJHtwcmVmaXh9QU5gfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFJNUy0ke3ByZWZpeH1BTmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BBbXAtJHtwcmVmaXh9QU5gfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYEFtcC0ke3ByZWZpeH1BTmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BQaC0ke3ByZWZpeH1BTmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgUGgtJHtwcmVmaXh9QU5gKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogYm4gPyAxIDogMC41LCBiYWNrZ3JvdW5kQ29sb3I6IGdldENvbG9yKHByZWZpeCArICdCTicpIH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ2JuJykgPj0gMCAmJiB4LlNob3cgPT0gYm4pLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICBzZXRCbighYm4pO1xyXG4gICAgICAgICAgICAgICAgfX0+e3ByZWZpeH1CTjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BXZi0ke3ByZWZpeH1CTmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgV2YtJHtwcmVmaXh9Qk5gKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgUk1TLSR7cHJlZml4fUJOYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBSTVMtJHtwcmVmaXh9Qk5gKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgQW1wLSR7cHJlZml4fUJOYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBBbXAtJHtwcmVmaXh9Qk5gKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgUGgtJHtwcmVmaXh9Qk5gfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFBoLSR7cHJlZml4fUJOYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGNuID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBnZXRDb2xvcihwcmVmaXggKyAnQ04nKSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCdjbicpID49IDAgJiYgeC5TaG93ID09IGNuKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgc2V0Q24oIWNuKTtcclxuICAgICAgICAgICAgICAgIH19PntwcmVmaXh9Q048L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgV2YtJHtwcmVmaXh9Q05gfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFdmLSR7cHJlZml4fUNOYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFJNUy0ke3ByZWZpeH1DTmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgUk1TLSR7cHJlZml4fUNOYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YEFtcC0ke3ByZWZpeH1DTmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgQW1wLSR7cHJlZml4fUNOYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFBoLSR7cHJlZml4fUNOYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBQaC0ke3ByZWZpeH1DTmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidG4tZ3JvdXBcIiBoaWRkZW49e3Byb3BzLlR5cGUgIT0gJ1ZvbHRhZ2UnfT5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBzdHlsZT17eyBvcGFjaXR5OiBhYiA/IDEgOiAwLjUsIGJhY2tncm91bmRDb2xvcjogZ2V0Q29sb3IoYCR7cHJlZml4fUFCYCkgfX0gb25DbGljaz17KGV2dCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHByb3BzLlBhdGhzLmZpbHRlcih4ID0+IHguS2V5LnRvTG93ZXJDYXNlKCkuaW5kZXhPZignYWInKSA+PSAwICYmIHguU2hvdyA9PSBhYikuZm9yRWFjaCh4ID0+IHByb3BzLkNhbGxCYWNrKHgpKVxyXG4gICAgICAgICAgICAgICAgICAgIHNldEFiKCFhYik7XHJcbiAgICAgICAgICAgICAgICB9fT57cHJlZml4fUFCPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFdmLSR7cHJlZml4fUFCYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBXZi0ke3ByZWZpeH1BQmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BSTVMtJHtwcmVmaXh9QUJgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFJNUy0ke3ByZWZpeH1BQmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BBbXAtJHtwcmVmaXh9QUJgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYEFtcC0ke3ByZWZpeH1BQmApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BQaC0ke3ByZWZpeH1BQmB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgUGgtJHtwcmVmaXh9QUJgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuLWdyb3VwXCIgaGlkZGVuPXtwcm9wcy5UeXBlICE9ICdWb2x0YWdlJ30+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCIgc3R5bGU9e3sgb3BhY2l0eTogYmMgPyAxIDogMC41LCBiYWNrZ3JvdW5kQ29sb3I6IGdldENvbG9yKGAke3ByZWZpeH1CQ2ApIH19IG9uQ2xpY2s9eyhldnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBwcm9wcy5QYXRocy5maWx0ZXIoeCA9PiB4LktleS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ2JjJykgPj0gMCAmJiB4LlNob3cgPT0gYmMpLmZvckVhY2goeCA9PiBwcm9wcy5DYWxsQmFjayh4KSlcclxuICAgICAgICAgICAgICAgICAgICBzZXRCYyghYmMpO1xyXG4gICAgICAgICAgICAgICAgfX0+e3ByZWZpeH1CQzwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBLZXk9e2BXZi0ke3ByZWZpeH1CQ2B9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgV2YtJHtwcmVmaXh9QkNgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgUk1TLSR7cHJlZml4fUJDYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBSTVMtJHtwcmVmaXh9QkNgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgQW1wLSR7cHJlZml4fUJDYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBBbXAtJHtwcmVmaXh9QkNgKX0gQ2FsbEJhY2s9eyhwYXRoKSA9PiBwcm9wcy5DYWxsQmFjayhwYXRoKX0gLz5cclxuICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgUGgtJHtwcmVmaXh9QkNgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFBoLSR7cHJlZml4fUJDYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ0bi1ncm91cFwiIGhpZGRlbj17cHJvcHMuVHlwZSAhPSAnVm9sdGFnZSd9PlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHN0eWxlPXt7IG9wYWNpdHk6IGNhID8gMSA6IDAuNSwgYmFja2dyb3VuZENvbG9yOiBnZXRDb2xvcihgJHtwcmVmaXh9Q0FgKSB9fSBvbkNsaWNrPXsoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMuUGF0aHMuZmlsdGVyKHggPT4geC5LZXkudG9Mb3dlckNhc2UoKS5pbmRleE9mKCdjYScpID49IDAgJiYgeC5TaG93ID09IGNhKS5mb3JFYWNoKHggPT4gcHJvcHMuQ2FsbEJhY2soeCkpXHJcbiAgICAgICAgICAgICAgICAgICAgc2V0Q2EoIWNhKTtcclxuICAgICAgICAgICAgICAgIH19PntwcmVmaXh9Q0E8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDxCdXR0b24gS2V5PXtgV2YtJHtwcmVmaXh9Q0FgfSBQYXRoPXtwcm9wcy5QYXRocy5maW5kKHggPT4geC5LZXkgPT0gYFdmLSR7cHJlZml4fUNBYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFJNUy0ke3ByZWZpeH1DQWB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgUk1TLSR7cHJlZml4fUNBYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YEFtcC0ke3ByZWZpeH1DQWB9IFBhdGg9e3Byb3BzLlBhdGhzLmZpbmQoeCA9PiB4LktleSA9PSBgQW1wLSR7cHJlZml4fUNBYCl9IENhbGxCYWNrPXsocGF0aCkgPT4gcHJvcHMuQ2FsbEJhY2socGF0aCl9IC8+XHJcbiAgICAgICAgICAgICAgICA8QnV0dG9uIEtleT17YFBoLSR7cHJlZml4fUNBYH0gUGF0aD17cHJvcHMuUGF0aHMuZmluZCh4ID0+IHguS2V5ID09IGBQaC0ke3ByZWZpeH1DQWApfSBDYWxsQmFjaz17KHBhdGgpID0+IHByb3BzLkNhbGxCYWNrKHBhdGgpfSAvPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICk7XHJcbn1cclxuXHJcbmNvbnN0IEJ1dHRvbiA9IChwcm9wczogeyBQYXRoOiB7IEtleTogc3RyaW5nLCBQYXRoOiBKU1guRWxlbWVudCwgU2hvdzogYm9vbGVhbiwgQ29sb3I6IHN0cmluZyB9LCBLZXk6IHN0cmluZywgQ2FsbEJhY2s6IChwYXRoKSA9PiB2b2lkfSkgPT4ge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgYnRuLXNtXCJcclxuICAgICAgICAgICAgc3R5bGU9e3tcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogcHJvcHMuUGF0aCA9PSB1bmRlZmluZWQgPyAnYmxhY2snIDogcHJvcHMuUGF0aC5Db2xvcixcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IHByb3BzLlBhdGggPT0gdW5kZWZpbmVkIHx8IHByb3BzLlBhdGguU2hvdyA/IDEgOiAwLjVcclxuICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgZGlzYWJsZWQ9e3Byb3BzLlBhdGggPT0gdW5kZWZpbmVkfVxyXG4gICAgICAgICAgICBvbkNsaWNrPXsoZXZ0KSA9PiBwcm9wcy5DYWxsQmFjayhwcm9wcy5QYXRoKX0+e3Byb3BzLktleX08L2J1dHRvbj5cclxuICAgIClcclxufSJdLCJzb3VyY2VSb290IjoiIn0=