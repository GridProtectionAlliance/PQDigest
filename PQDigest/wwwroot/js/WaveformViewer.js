(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["WaveformViewer"],{

/***/ "../node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!***************************************************!*\
  !*** ../node_modules/moment/locale sync ^\.\/.*$ ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "../node_modules/moment/locale/af.js",
	"./af.js": "../node_modules/moment/locale/af.js",
	"./ar": "../node_modules/moment/locale/ar.js",
	"./ar-dz": "../node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "../node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "../node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "../node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "../node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "../node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "../node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "../node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "../node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "../node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "../node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "../node_modules/moment/locale/ar-tn.js",
	"./ar.js": "../node_modules/moment/locale/ar.js",
	"./az": "../node_modules/moment/locale/az.js",
	"./az.js": "../node_modules/moment/locale/az.js",
	"./be": "../node_modules/moment/locale/be.js",
	"./be.js": "../node_modules/moment/locale/be.js",
	"./bg": "../node_modules/moment/locale/bg.js",
	"./bg.js": "../node_modules/moment/locale/bg.js",
	"./bm": "../node_modules/moment/locale/bm.js",
	"./bm.js": "../node_modules/moment/locale/bm.js",
	"./bn": "../node_modules/moment/locale/bn.js",
	"./bn.js": "../node_modules/moment/locale/bn.js",
	"./bo": "../node_modules/moment/locale/bo.js",
	"./bo.js": "../node_modules/moment/locale/bo.js",
	"./br": "../node_modules/moment/locale/br.js",
	"./br.js": "../node_modules/moment/locale/br.js",
	"./bs": "../node_modules/moment/locale/bs.js",
	"./bs.js": "../node_modules/moment/locale/bs.js",
	"./ca": "../node_modules/moment/locale/ca.js",
	"./ca.js": "../node_modules/moment/locale/ca.js",
	"./cs": "../node_modules/moment/locale/cs.js",
	"./cs.js": "../node_modules/moment/locale/cs.js",
	"./cv": "../node_modules/moment/locale/cv.js",
	"./cv.js": "../node_modules/moment/locale/cv.js",
	"./cy": "../node_modules/moment/locale/cy.js",
	"./cy.js": "../node_modules/moment/locale/cy.js",
	"./da": "../node_modules/moment/locale/da.js",
	"./da.js": "../node_modules/moment/locale/da.js",
	"./de": "../node_modules/moment/locale/de.js",
	"./de-at": "../node_modules/moment/locale/de-at.js",
	"./de-at.js": "../node_modules/moment/locale/de-at.js",
	"./de-ch": "../node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "../node_modules/moment/locale/de-ch.js",
	"./de.js": "../node_modules/moment/locale/de.js",
	"./dv": "../node_modules/moment/locale/dv.js",
	"./dv.js": "../node_modules/moment/locale/dv.js",
	"./el": "../node_modules/moment/locale/el.js",
	"./el.js": "../node_modules/moment/locale/el.js",
	"./en-SG": "../node_modules/moment/locale/en-SG.js",
	"./en-SG.js": "../node_modules/moment/locale/en-SG.js",
	"./en-au": "../node_modules/moment/locale/en-au.js",
	"./en-au.js": "../node_modules/moment/locale/en-au.js",
	"./en-ca": "../node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "../node_modules/moment/locale/en-ca.js",
	"./en-gb": "../node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "../node_modules/moment/locale/en-gb.js",
	"./en-ie": "../node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "../node_modules/moment/locale/en-ie.js",
	"./en-il": "../node_modules/moment/locale/en-il.js",
	"./en-il.js": "../node_modules/moment/locale/en-il.js",
	"./en-nz": "../node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "../node_modules/moment/locale/en-nz.js",
	"./eo": "../node_modules/moment/locale/eo.js",
	"./eo.js": "../node_modules/moment/locale/eo.js",
	"./es": "../node_modules/moment/locale/es.js",
	"./es-do": "../node_modules/moment/locale/es-do.js",
	"./es-do.js": "../node_modules/moment/locale/es-do.js",
	"./es-us": "../node_modules/moment/locale/es-us.js",
	"./es-us.js": "../node_modules/moment/locale/es-us.js",
	"./es.js": "../node_modules/moment/locale/es.js",
	"./et": "../node_modules/moment/locale/et.js",
	"./et.js": "../node_modules/moment/locale/et.js",
	"./eu": "../node_modules/moment/locale/eu.js",
	"./eu.js": "../node_modules/moment/locale/eu.js",
	"./fa": "../node_modules/moment/locale/fa.js",
	"./fa.js": "../node_modules/moment/locale/fa.js",
	"./fi": "../node_modules/moment/locale/fi.js",
	"./fi.js": "../node_modules/moment/locale/fi.js",
	"./fo": "../node_modules/moment/locale/fo.js",
	"./fo.js": "../node_modules/moment/locale/fo.js",
	"./fr": "../node_modules/moment/locale/fr.js",
	"./fr-ca": "../node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "../node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "../node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "../node_modules/moment/locale/fr-ch.js",
	"./fr.js": "../node_modules/moment/locale/fr.js",
	"./fy": "../node_modules/moment/locale/fy.js",
	"./fy.js": "../node_modules/moment/locale/fy.js",
	"./ga": "../node_modules/moment/locale/ga.js",
	"./ga.js": "../node_modules/moment/locale/ga.js",
	"./gd": "../node_modules/moment/locale/gd.js",
	"./gd.js": "../node_modules/moment/locale/gd.js",
	"./gl": "../node_modules/moment/locale/gl.js",
	"./gl.js": "../node_modules/moment/locale/gl.js",
	"./gom-latn": "../node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "../node_modules/moment/locale/gom-latn.js",
	"./gu": "../node_modules/moment/locale/gu.js",
	"./gu.js": "../node_modules/moment/locale/gu.js",
	"./he": "../node_modules/moment/locale/he.js",
	"./he.js": "../node_modules/moment/locale/he.js",
	"./hi": "../node_modules/moment/locale/hi.js",
	"./hi.js": "../node_modules/moment/locale/hi.js",
	"./hr": "../node_modules/moment/locale/hr.js",
	"./hr.js": "../node_modules/moment/locale/hr.js",
	"./hu": "../node_modules/moment/locale/hu.js",
	"./hu.js": "../node_modules/moment/locale/hu.js",
	"./hy-am": "../node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "../node_modules/moment/locale/hy-am.js",
	"./id": "../node_modules/moment/locale/id.js",
	"./id.js": "../node_modules/moment/locale/id.js",
	"./is": "../node_modules/moment/locale/is.js",
	"./is.js": "../node_modules/moment/locale/is.js",
	"./it": "../node_modules/moment/locale/it.js",
	"./it-ch": "../node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "../node_modules/moment/locale/it-ch.js",
	"./it.js": "../node_modules/moment/locale/it.js",
	"./ja": "../node_modules/moment/locale/ja.js",
	"./ja.js": "../node_modules/moment/locale/ja.js",
	"./jv": "../node_modules/moment/locale/jv.js",
	"./jv.js": "../node_modules/moment/locale/jv.js",
	"./ka": "../node_modules/moment/locale/ka.js",
	"./ka.js": "../node_modules/moment/locale/ka.js",
	"./kk": "../node_modules/moment/locale/kk.js",
	"./kk.js": "../node_modules/moment/locale/kk.js",
	"./km": "../node_modules/moment/locale/km.js",
	"./km.js": "../node_modules/moment/locale/km.js",
	"./kn": "../node_modules/moment/locale/kn.js",
	"./kn.js": "../node_modules/moment/locale/kn.js",
	"./ko": "../node_modules/moment/locale/ko.js",
	"./ko.js": "../node_modules/moment/locale/ko.js",
	"./ku": "../node_modules/moment/locale/ku.js",
	"./ku.js": "../node_modules/moment/locale/ku.js",
	"./ky": "../node_modules/moment/locale/ky.js",
	"./ky.js": "../node_modules/moment/locale/ky.js",
	"./lb": "../node_modules/moment/locale/lb.js",
	"./lb.js": "../node_modules/moment/locale/lb.js",
	"./lo": "../node_modules/moment/locale/lo.js",
	"./lo.js": "../node_modules/moment/locale/lo.js",
	"./lt": "../node_modules/moment/locale/lt.js",
	"./lt.js": "../node_modules/moment/locale/lt.js",
	"./lv": "../node_modules/moment/locale/lv.js",
	"./lv.js": "../node_modules/moment/locale/lv.js",
	"./me": "../node_modules/moment/locale/me.js",
	"./me.js": "../node_modules/moment/locale/me.js",
	"./mi": "../node_modules/moment/locale/mi.js",
	"./mi.js": "../node_modules/moment/locale/mi.js",
	"./mk": "../node_modules/moment/locale/mk.js",
	"./mk.js": "../node_modules/moment/locale/mk.js",
	"./ml": "../node_modules/moment/locale/ml.js",
	"./ml.js": "../node_modules/moment/locale/ml.js",
	"./mn": "../node_modules/moment/locale/mn.js",
	"./mn.js": "../node_modules/moment/locale/mn.js",
	"./mr": "../node_modules/moment/locale/mr.js",
	"./mr.js": "../node_modules/moment/locale/mr.js",
	"./ms": "../node_modules/moment/locale/ms.js",
	"./ms-my": "../node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "../node_modules/moment/locale/ms-my.js",
	"./ms.js": "../node_modules/moment/locale/ms.js",
	"./mt": "../node_modules/moment/locale/mt.js",
	"./mt.js": "../node_modules/moment/locale/mt.js",
	"./my": "../node_modules/moment/locale/my.js",
	"./my.js": "../node_modules/moment/locale/my.js",
	"./nb": "../node_modules/moment/locale/nb.js",
	"./nb.js": "../node_modules/moment/locale/nb.js",
	"./ne": "../node_modules/moment/locale/ne.js",
	"./ne.js": "../node_modules/moment/locale/ne.js",
	"./nl": "../node_modules/moment/locale/nl.js",
	"./nl-be": "../node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "../node_modules/moment/locale/nl-be.js",
	"./nl.js": "../node_modules/moment/locale/nl.js",
	"./nn": "../node_modules/moment/locale/nn.js",
	"./nn.js": "../node_modules/moment/locale/nn.js",
	"./pa-in": "../node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "../node_modules/moment/locale/pa-in.js",
	"./pl": "../node_modules/moment/locale/pl.js",
	"./pl.js": "../node_modules/moment/locale/pl.js",
	"./pt": "../node_modules/moment/locale/pt.js",
	"./pt-br": "../node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "../node_modules/moment/locale/pt-br.js",
	"./pt.js": "../node_modules/moment/locale/pt.js",
	"./ro": "../node_modules/moment/locale/ro.js",
	"./ro.js": "../node_modules/moment/locale/ro.js",
	"./ru": "../node_modules/moment/locale/ru.js",
	"./ru.js": "../node_modules/moment/locale/ru.js",
	"./sd": "../node_modules/moment/locale/sd.js",
	"./sd.js": "../node_modules/moment/locale/sd.js",
	"./se": "../node_modules/moment/locale/se.js",
	"./se.js": "../node_modules/moment/locale/se.js",
	"./si": "../node_modules/moment/locale/si.js",
	"./si.js": "../node_modules/moment/locale/si.js",
	"./sk": "../node_modules/moment/locale/sk.js",
	"./sk.js": "../node_modules/moment/locale/sk.js",
	"./sl": "../node_modules/moment/locale/sl.js",
	"./sl.js": "../node_modules/moment/locale/sl.js",
	"./sq": "../node_modules/moment/locale/sq.js",
	"./sq.js": "../node_modules/moment/locale/sq.js",
	"./sr": "../node_modules/moment/locale/sr.js",
	"./sr-cyrl": "../node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "../node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "../node_modules/moment/locale/sr.js",
	"./ss": "../node_modules/moment/locale/ss.js",
	"./ss.js": "../node_modules/moment/locale/ss.js",
	"./sv": "../node_modules/moment/locale/sv.js",
	"./sv.js": "../node_modules/moment/locale/sv.js",
	"./sw": "../node_modules/moment/locale/sw.js",
	"./sw.js": "../node_modules/moment/locale/sw.js",
	"./ta": "../node_modules/moment/locale/ta.js",
	"./ta.js": "../node_modules/moment/locale/ta.js",
	"./te": "../node_modules/moment/locale/te.js",
	"./te.js": "../node_modules/moment/locale/te.js",
	"./tet": "../node_modules/moment/locale/tet.js",
	"./tet.js": "../node_modules/moment/locale/tet.js",
	"./tg": "../node_modules/moment/locale/tg.js",
	"./tg.js": "../node_modules/moment/locale/tg.js",
	"./th": "../node_modules/moment/locale/th.js",
	"./th.js": "../node_modules/moment/locale/th.js",
	"./tl-ph": "../node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "../node_modules/moment/locale/tl-ph.js",
	"./tlh": "../node_modules/moment/locale/tlh.js",
	"./tlh.js": "../node_modules/moment/locale/tlh.js",
	"./tr": "../node_modules/moment/locale/tr.js",
	"./tr.js": "../node_modules/moment/locale/tr.js",
	"./tzl": "../node_modules/moment/locale/tzl.js",
	"./tzl.js": "../node_modules/moment/locale/tzl.js",
	"./tzm": "../node_modules/moment/locale/tzm.js",
	"./tzm-latn": "../node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "../node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "../node_modules/moment/locale/tzm.js",
	"./ug-cn": "../node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "../node_modules/moment/locale/ug-cn.js",
	"./uk": "../node_modules/moment/locale/uk.js",
	"./uk.js": "../node_modules/moment/locale/uk.js",
	"./ur": "../node_modules/moment/locale/ur.js",
	"./ur.js": "../node_modules/moment/locale/ur.js",
	"./uz": "../node_modules/moment/locale/uz.js",
	"./uz-latn": "../node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "../node_modules/moment/locale/uz-latn.js",
	"./uz.js": "../node_modules/moment/locale/uz.js",
	"./vi": "../node_modules/moment/locale/vi.js",
	"./vi.js": "../node_modules/moment/locale/vi.js",
	"./x-pseudo": "../node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "../node_modules/moment/locale/x-pseudo.js",
	"./yo": "../node_modules/moment/locale/yo.js",
	"./yo.js": "../node_modules/moment/locale/yo.js",
	"./zh-cn": "../node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "../node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "../node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "../node_modules/moment/locale/zh-hk.js",
	"./zh-tw": "../node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "../node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) { // check for number or string
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return id;
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "../node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./tsx/WaveformViewer/BrowseEvents.tsx":
/*!*********************************************!*\
  !*** ./tsx/WaveformViewer/BrowseEvents.tsx ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
//******************************************************************************************************
//  BrowseEvents.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/11/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};

var BrowseEvents = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(null), 2), nextID = _b[0], setNextID = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(null), 2), backID = _c[0], setBackID = _c[1];
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        var handle1 = GetEventID(false, all);
        var handle2 = GetEventID(true, all);
        handle1.done(function (next) { return setNextID(next == undefined || next.length == 0 ? null : next[0]['ID']); });
        handle2.done(function (back) { return setBackID(back == undefined || back.length == 0 ? null : back[0]['ID']); });
        return function () {
            if (handle1.abort != undefined)
                handle1.abort();
            if (handle2.abort != undefined)
                handle2.abort();
        };
    }, [props.EventID, all]);
    function GetEventID(n, a) {
        return $.ajax({
            type: "GET",
            url: homePath + "api/OpenXDA/Event/" + (n ? 'Next' : 'Previous') + "Event/" + (a ? 'AllMeters' : 'Meter') + "/" + props.EventID,
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: true,
            async: true
        });
    }
    try {
        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null,
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "form-check" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("label", { className: "form-check-label" },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("input", { type: "checkbox", style: { marginLeft: -15 }, className: "form-check-input", checked: all, onChange: function () { return setAll(!all); } }),
                    "All Meters")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("table", { className: "table" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tbody", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null,
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", { href: backID == null ? null : homePath + "WaveformViewer?EventID=" + backID }, "Previous")),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null,
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", { href: nextID == null ? null : homePath + "WaveformViewer?EventID=" + nextID }, "Next")))))));
    }
    catch (_d) {
        return null;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (BrowseEvents);


/***/ }),

/***/ "./tsx/WaveformViewer/ComparableEvents.tsx":
/*!*************************************************!*\
  !*** ./tsx/WaveformViewer/ComparableEvents.tsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
//******************************************************************************************************
//  ComparableEvents.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/12/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};

var ComparableEvents = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), comparableEvents = _a[0], setComparableEvents = _a[1];
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        var handle1 = GetComparableEvents();
        handle1.done(function (events) { return setComparableEvents(events); });
        return function () {
            if (handle1.abort != undefined)
                handle1.abort();
        };
    }, [props.EventID]);
    function GetComparableEvents() {
        return $.ajax({
            type: "GET",
            url: homePath + "api/OpenXDA/Event/ComparableEvents/" + props.EventID,
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: true,
            async: true
        });
    }
    try {
        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("select", { className: "form-control", value: props.ComparableEventID, onChange: function (evt) { return props.OnChange(parseInt(evt.target.value)); } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "0" }, "None"),
            comparableEvents.map(function (ces) { return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { key: ces.ID, value: ces.ID },
                ces.Meter,
                " (",
                ces.Difference,
                " ms)"); })));
    }
    catch (_b) {
        return null;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (ComparableEvents);


/***/ }),

/***/ "./tsx/WaveformViewer/Info.tsx":
/*!*************************************!*\
  !*** ./tsx/WaveformViewer/Info.tsx ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! moment */ "../node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_1__);
//******************************************************************************************************
//  Info.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/12/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};


var Info = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(null), 2), info = _a[0], setInfo = _a[1];
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        var handle1 = GetEventInfo();
        handle1.done(function (info) { return setInfo(info[0]); });
        return function () {
            if (handle1.abort != undefined)
                handle1.abort();
        };
    }, [props.EventID]);
    function GetEventInfo() {
        return $.ajax({
            type: "GET",
            url: homePath + "api/OpenXDA/Event/Info/" + props.EventID,
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: true,
            async: true
        });
    }
    try {
        if (info == null)
            return null;
        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("table", { className: "table" },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tbody", null,
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Meter"),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.Meter)),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Time"),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null,
                        moment__WEBPACK_IMPORTED_MODULE_1___default()(info.StartTime).format('MM/DD/YYYY HH:mm'),
                        "\u00A0(CST)")),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Type"),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.EventType)),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Phase"),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.Phase)),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Duration"),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.Duration)),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Magnitude"),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, info.SagDepth)))));
    }
    catch (_b) {
        return null;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (Info);


/***/ }),

/***/ "./tsx/WaveformViewer/Legend.tsx":
/*!***************************************!*\
  !*** ./tsx/WaveformViewer/Legend.tsx ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Legend_CurrentLegend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Legend/CurrentLegend */ "./tsx/WaveformViewer/Legend/CurrentLegend.tsx");
/* harmony import */ var _Legend_FrequencyLegend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Legend/FrequencyLegend */ "./tsx/WaveformViewer/Legend/FrequencyLegend.tsx");
/* harmony import */ var _Legend_PowerLegend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Legend/PowerLegend */ "./tsx/WaveformViewer/Legend/PowerLegend.tsx");
/* harmony import */ var _Legend_RapidVoltageChangeLegend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Legend/RapidVoltageChangeLegend */ "./tsx/WaveformViewer/Legend/RapidVoltageChangeLegend.tsx");
/* harmony import */ var _Legend_SpecifiedHarmonicLegend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Legend/SpecifiedHarmonicLegend */ "./tsx/WaveformViewer/Legend/SpecifiedHarmonicLegend.tsx");
/* harmony import */ var _Legend_SymmetricalComponentsLegend__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Legend/SymmetricalComponentsLegend */ "./tsx/WaveformViewer/Legend/SymmetricalComponentsLegend.tsx");
/* harmony import */ var _Legend_THDLegend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Legend/THDLegend */ "./tsx/WaveformViewer/Legend/THDLegend.tsx");
/* harmony import */ var _Legend_UnbalanceLegend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Legend/UnbalanceLegend */ "./tsx/WaveformViewer/Legend/UnbalanceLegend.tsx");
/* harmony import */ var _Legend_VoltageLegend__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Legend/VoltageLegend */ "./tsx/WaveformViewer/Legend/VoltageLegend.tsx");
//******************************************************************************************************
//  Legend.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/05/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};










var Legend = function (props) {
    if (props.Paths.length == 0)
        return null;
    else if (props.Type == 'Voltage')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend_VoltageLegend__WEBPACK_IMPORTED_MODULE_9__["default"], __assign({}, props));
    else if (props.Type == 'Current')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend_CurrentLegend__WEBPACK_IMPORTED_MODULE_1__["default"], __assign({}, props));
    else if (props.Type == 'Frequency')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend_FrequencyLegend__WEBPACK_IMPORTED_MODULE_2__["default"], __assign({}, props));
    else if (props.Type == 'Power')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend_PowerLegend__WEBPACK_IMPORTED_MODULE_3__["default"], __assign({}, props));
    else if (props.Type == 'RapidVoltageChange')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend_RapidVoltageChangeLegend__WEBPACK_IMPORTED_MODULE_4__["default"], __assign({}, props));
    else if (props.Type == 'SpecifiedHarmonic')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend_SpecifiedHarmonicLegend__WEBPACK_IMPORTED_MODULE_5__["default"], __assign({}, props));
    else if (props.Type == 'SymmetricalComponents')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend_SymmetricalComponentsLegend__WEBPACK_IMPORTED_MODULE_6__["default"], __assign({}, props));
    else if (props.Type == 'THD')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend_THDLegend__WEBPACK_IMPORTED_MODULE_7__["default"], __assign({}, props));
    else if (props.Type == 'Unbalance')
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend_UnbalanceLegend__WEBPACK_IMPORTED_MODULE_8__["default"], __assign({}, props));
    return null;
};
//const VoltageLegend = (props: {
//    Paths: { Key: string, Show: boolean, Color: string, Data: [number, number][] }[],
//    CallBack: (path: { Key: string, Show: boolean, Color: string, Data: [number, number][] }) => void,
//    CompareData: boolean,
//    GetColor: (key: string) => string
//}) => {
//    const [all, setAll] = React.useState<boolean>(false);
//    const [wf, setWf] = React.useState<boolean>(false);
//    const [rms, setRMS] = React.useState<boolean>(false);
//    const [amp, setAmp] = React.useState<boolean>(false);
//    const [ph, setPh] = React.useState<boolean>(false);
//    const [an, setAn] = React.useState<boolean>(false);
//    const [bn, setBn] = React.useState<boolean>(false);
//    const [cn, setCn] = React.useState<boolean>(false);
//    const [ab, setAb] = React.useState<boolean>(false);
//    const [bc, setBc] = React.useState<boolean>(false);
//    const [ca, setCa] = React.useState<boolean>(false);
//    const [showLegend, setShowLegend] = React.useState<boolean>(false);
//    const prefix = 'V';
//    return (
//        <div style={{ position: 'relative', zIndex: 1000 }}>
//            <button className="btn btn-primary btn-sm dropdown-toggle" style={{ position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }} onClick={() => setShowLegend(!showLegend)}>{props.CompareData ? 'Compare' : 'Legend'}</button>
//            <div className="btn-group-vertical" style={{ display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' }}>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: all ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Show == all).forEach(x => props.CallBack(x))
//                        setWf(!all);
//                        setRMS(!all);
//                        setAmp(!all);
//                        setPh(!all);
//                        setAn(!all);
//                        setBn(!all);
//                        setCn(!all);
//                        setAb(!all);
//                        setBc(!all);
//                        setCa(!all);
//                        setAll(!all);
//                    }}>All</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: wf ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('wf') >= 0 && x.Show == wf).forEach(x => props.CallBack(x))
//                        setWf(!wf);
//                    }}>Wf</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: rms ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('rms') >= 0 && x.Show == rms).forEach(x => props.CallBack(x))
//                        setRMS(!rms);
//                    }}>RMS</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: amp ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('amp') >= 0 && x.Show == amp).forEach(x => props.CallBack(x))
//                        setAmp(!amp);
//                    }}>Amp</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: ph ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('ph') >= 0 && x.Show == ph).forEach(x => props.CallBack(x))
//                        setPh(!ph);
//                    }}>Ph</button>
//                </div>
//                <div className="btn-group" >
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: an ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'AN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('an') >= 0 && x.Show == an).forEach(x => props.CallBack(x))
//                        setAn(!an);
//                    }}>{prefix}AN</button>
//                    <Button Key={`Wf-${prefix}AN`} Path={props.Paths.find(x => x.Key == `Wf-${prefix}AN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`RMS-${prefix}AN`} Path={props.Paths.find(x => x.Key == `RMS-${prefix}AN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Amp-${prefix}AN`} Path={props.Paths.find(x => x.Key == `Amp-${prefix}AN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Ph-${prefix}AN`} Path={props.Paths.find(x => x.Key == `Ph-${prefix}AN`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: bn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'BN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('bn') >= 0 && x.Show == bn).forEach(x => props.CallBack(x))
//                        setBn(!bn);
//                    }}>{prefix}BN</button>
//                    <Button Key={`Wf-${prefix}BN`} Path={props.Paths.find(x => x.Key == `Wf-${prefix}BN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`RMS-${prefix}BN`} Path={props.Paths.find(x => x.Key == `RMS-${prefix}BN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Amp-${prefix}BN`} Path={props.Paths.find(x => x.Key == `Amp-${prefix}BN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Ph-${prefix}BN`} Path={props.Paths.find(x => x.Key == `Ph-${prefix}BN`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: cn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'CN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('cn') >= 0 && x.Show == cn).forEach(x => props.CallBack(x))
//                        setCn(!cn);
//                    }}>{prefix}CN</button>
//                    <Button Key={`Wf-${prefix}CN`} Path={props.Paths.find(x => x.Key == `Wf-${prefix}CN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`RMS-${prefix}CN`} Path={props.Paths.find(x => x.Key == `RMS-${prefix}CN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Amp-${prefix}CN`} Path={props.Paths.find(x => x.Key == `Amp-${prefix}CN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Ph-${prefix}CN`} Path={props.Paths.find(x => x.Key == `Ph-${prefix}CN`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: ab ? 1 : 0.5, backgroundColor: props.GetColor(`${prefix}AB`) }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('ab') >= 0 && x.Show == ab).forEach(x => props.CallBack(x))
//                        setAb(!ab);
//                    }}>{prefix}AB</button>
//                    <Button Key={`Wf-${prefix}AB`} Path={props.Paths.find(x => x.Key == `Wf-${prefix}AB`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`RMS-${prefix}AB`} Path={props.Paths.find(x => x.Key == `RMS-${prefix}AB`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Amp-${prefix}AB`} Path={props.Paths.find(x => x.Key == `Amp-${prefix}AB`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Ph-${prefix}AB`} Path={props.Paths.find(x => x.Key == `Ph-${prefix}AB`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: bc ? 1 : 0.5, backgroundColor: props.GetColor(`${prefix}BC`) }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('bc') >= 0 && x.Show == bc).forEach(x => props.CallBack(x))
//                        setBc(!bc);
//                    }}>{prefix}BC</button>
//                    <Button Key={`Wf-${prefix}BC`} Path={props.Paths.find(x => x.Key == `Wf-${prefix}BC`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`RMS-${prefix}BC`} Path={props.Paths.find(x => x.Key == `RMS-${prefix}BC`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Amp-${prefix}BC`} Path={props.Paths.find(x => x.Key == `Amp-${prefix}BC`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Ph-${prefix}BC`} Path={props.Paths.find(x => x.Key == `Ph-${prefix}BC`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: ca ? 1 : 0.5, backgroundColor: props.GetColor(`${prefix}CA`) }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('ca') >= 0 && x.Show == ca).forEach(x => props.CallBack(x))
//                        setCa(!ca);
//                    }}>{prefix}CA</button>
//                    <Button Key={`Wf-${prefix}CA`} Path={props.Paths.find(x => x.Key == `Wf-${prefix}CA`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`RMS-${prefix}CA`} Path={props.Paths.find(x => x.Key == `RMS-${prefix}CA`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Amp-${prefix}CA`} Path={props.Paths.find(x => x.Key == `Amp-${prefix}CA`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Ph-${prefix}CA`} Path={props.Paths.find(x => x.Key == `Ph-${prefix}CA`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//            </div>
//        </div>
//    );
//}
//const CurrentLegend = (props: {
//    Paths: { Key: string, Show: boolean, Color: string, Data: [number, number][] }[],
//    CallBack: (path: { Key: string, Show: boolean, Color: string, Data: [number, number][] }) => void,
//    CompareData: boolean,
//    GetColor: (key: string) => string
//}) => {
//    const [all, setAll] = React.useState<boolean>(false);
//    const [wf, setWf] = React.useState<boolean>(false);
//    const [rms, setRMS] = React.useState<boolean>(false);
//    const [amp, setAmp] = React.useState<boolean>(false);
//    const [ph, setPh] = React.useState<boolean>(false);
//    const [an, setAn] = React.useState<boolean>(false);
//    const [bn, setBn] = React.useState<boolean>(false);
//    const [cn, setCn] = React.useState<boolean>(false);
//    const [showLegend, setShowLegend] = React.useState<boolean>(false);
//    const [ng, setNg] = React.useState<boolean>(false);
//    const [res, setRes] = React.useState<boolean>(false);
//    const prefix = 'I';
//    return (
//        <div style={{ position: 'relative', zIndex: 1000 }}>
//            <button className="btn btn-primary btn-sm dropdown-toggle" style={{ position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }} onClick={() => setShowLegend(!showLegend)}>{props.CompareData ? 'Compare' : 'Legend'}</button>
//            <div className="btn-group-vertical" style={{ display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' }}>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: all ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Show == all).forEach(x => props.CallBack(x))
//                        setWf(!all);
//                        setRMS(!all);
//                        setAmp(!all);
//                        setPh(!all);
//                        setAn(!all);
//                        setBn(!all);
//                        setCn(!all);
//                        setRes(!all);
//                        setNg(!all);
//                        setAll(!all);
//                    }}>All</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: wf ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('wf') >= 0 && x.Show == wf).forEach(x => props.CallBack(x))
//                        setWf(!wf);
//                    }}>Wf</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: rms ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('rms') >= 0 && x.Show == rms).forEach(x => props.CallBack(x))
//                        setRMS(!rms);
//                    }}>RMS</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: amp ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('amp') >= 0 && x.Show == amp).forEach(x => props.CallBack(x))
//                        setAmp(!amp);
//                    }}>Amp</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: ph ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('ph') >= 0 && x.Show == ph).forEach(x => props.CallBack(x))
//                        setPh(!ph);
//                    }}>Ph</button>
//                </div>
//                <div className="btn-group" >
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: an ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'AN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('an') >= 0 && x.Show == an).forEach(x => props.CallBack(x))
//                        setAn(!an);
//                    }}>{prefix}AN</button>
//                    <Button Key={`Wf-${prefix}AN`} Path={props.Paths.find(x => x.Key == `Wf-${prefix}AN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`RMS-${prefix}AN`} Path={props.Paths.find(x => x.Key == `RMS-${prefix}AN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Amp-${prefix}AN`} Path={props.Paths.find(x => x.Key == `Amp-${prefix}AN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Ph-${prefix}AN`} Path={props.Paths.find(x => x.Key == `Ph-${prefix}AN`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: bn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'BN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('bn') >= 0 && x.Show == bn).forEach(x => props.CallBack(x))
//                        setBn(!bn);
//                    }}>{prefix}BN</button>
//                    <Button Key={`Wf-${prefix}BN`} Path={props.Paths.find(x => x.Key == `Wf-${prefix}BN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`RMS-${prefix}BN`} Path={props.Paths.find(x => x.Key == `RMS-${prefix}BN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Amp-${prefix}BN`} Path={props.Paths.find(x => x.Key == `Amp-${prefix}BN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Ph-${prefix}BN`} Path={props.Paths.find(x => x.Key == `Ph-${prefix}BN`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: cn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'CN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('cn') >= 0 && x.Show == cn).forEach(x => props.CallBack(x))
//                        setCn(!cn);
//                    }}>{prefix}CN</button>
//                    <Button Key={`Wf-${prefix}CN`} Path={props.Paths.find(x => x.Key == `Wf-${prefix}CN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`RMS-${prefix}CN`} Path={props.Paths.find(x => x.Key == `RMS-${prefix}CN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Amp-${prefix}CN`} Path={props.Paths.find(x => x.Key == `Amp-${prefix}CN`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Ph-${prefix}CN`} Path={props.Paths.find(x => x.Key == `Ph-${prefix}CN`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group" >
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: ng ? 1 : 0.5, backgroundColor: props.GetColor(`${prefix}NG`) }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('ng') >= 0 && x.Show == ng).forEach(x => props.CallBack(x))
//                        setNg(!ng);
//                    }}>{prefix}NG</button>
//                    <Button Key={`Wf-${prefix}NG`} Path={props.Paths.find(x => x.Key == `Wf-${prefix}NG`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`RMS-${prefix}NG`} Path={props.Paths.find(x => x.Key == `RMS-${prefix}NG`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Amp-${prefix}NG`} Path={props.Paths.find(x => x.Key == `Amp-${prefix}NG`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Ph-${prefix}NG`} Path={props.Paths.find(x => x.Key == `Ph-${prefix}NG`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group" >
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: res ? 1 : 0.5, backgroundColor: props.GetColor(`${prefix}RES`) }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('res') >= 0 && x.Show == res).forEach(x => props.CallBack(x))
//                        setRes(!res);
//                    }}>{prefix}RES</button>
//                    <Button Key={`Wf-${prefix}RES`} Path={props.Paths.find(x => x.Key == `Wf-${prefix}RES`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`RMS-${prefix}RES`} Path={props.Paths.find(x => x.Key == `RMS-${prefix}RES`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Amp-${prefix}RES`} Path={props.Paths.find(x => x.Key == `Amp-${prefix}RES`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Ph-${prefix}RES`} Path={props.Paths.find(x => x.Key == `Ph-${prefix}RES`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//            </div>
//        </div>
//    );
//}
//const FrequencyLegend = (props: {
//    Paths: { Key: string, Show: boolean, Color: string, Data: [number, number][] }[],
//    CallBack: (path: { Key: string, Show: boolean, Color: string, Data: [number, number][] }) => void,
//    CompareData: boolean,
//    GetColor: (key: string) => string
//}) => {
//    const [showLegend, setShowLegend] = React.useState<boolean>(false);
//    const [all, setAll] = React.useState<boolean>(false);
//    return (
//        <div style={{ position: 'relative', zIndex: 1000 }}>
//            <button className="btn btn-primary btn-sm dropdown-toggle" style={{ position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }} onClick={() => setShowLegend(!showLegend)}>{props.CompareData ? 'Compare' : 'Legend'}</button>
//            <div className="btn-group-vertical" style={{ display: showLegend ? 'block' : 'none', position: 'absolute', width: 150, right: 0, top: 40, backgroundColor: 'white' }}>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: all ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Show == all).forEach(x => props.CallBack(x))
//                        setAll(!all);
//                    }}>All</button>
//                </div>
//                <div className="btn-group" >
//                    <Button Key={`VA`} Path={props.Paths.find(x => x.Key == `VA`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <Button Key={`VB`} Path={props.Paths.find(x => x.Key == `VB`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <Button Key={`VC`} Path={props.Paths.find(x => x.Key == `VC`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group" >
//                    <Button Key={`Average`} Path={props.Paths.find(x => x.Key == `Average`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//            </div>
//        </div>
//    );
//}
//const PowerLegend = (props: {
//    Paths: { Key: string, Show: boolean, Color: string, Data: [number, number][] }[],
//    CallBack: (path: { Key: string, Show: boolean, Color: string, Data: [number, number][] }) => void,
//    CompareData: boolean,
//    GetColor: (key: string) => string
//}) => {
//    const [showLegend, setShowLegend] = React.useState<boolean>(false);
//    const [all, setAll] = React.useState<boolean>(false);
//    const [active, setActive] = React.useState<boolean>(true);
//    const [apparent, setApparent] = React.useState<boolean>(false);
//    const [reactive, setReactive] = React.useState<boolean>(false);
//    const [powerFactor, setPowerFactor] = React.useState<boolean>(false);
//    const [an, setAn] = React.useState<boolean>(false);
//    const [bn, setBn] = React.useState<boolean>(false);
//    const [cn, setCn] = React.useState<boolean>(false);
//    const [total, setTotal] = React.useState<boolean>(false);
//    const prefix = 'I';
//    return (
//        <div style={{ position: 'relative', zIndex: 1000 }}>
//            <button className="btn btn-primary btn-sm dropdown-toggle" style={{ position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }} onClick={() => setShowLegend(!showLegend)}>{props.CompareData ? 'Compare' : 'Legend'}</button>
//            <div className="btn-group-vertical" style={{ display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' }}>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: all ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Show == all).forEach(x => props.CallBack(x))
//                        setActive(!all);
//                        setApparent(!all);
//                        setReactive(!all);
//                        setPowerFactor(!all);
//                        setAn(!all);
//                        setBn(!all);
//                        setCn(!all);
//                        setTotal(!all);
//                        setAll(!all);
//                    }}>All</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: active ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('w') >= 0 && x.Show == active).forEach(x => props.CallBack(x))
//                        setActive(!active);
//                    }}>W</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: apparent ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/-VA[^R]?$/g) != null && x.Show == apparent).forEach(x => props.CallBack(x))
//                        setApparent(!apparent);
//                    }}>VA</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: reactive ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/-VAR$/g) != null && x.Show == reactive).forEach(x => props.CallBack(x))
//                        setReactive(!reactive);
//                    }}>VAR</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: powerFactor ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('pf') >= 0 && x.Show == powerFactor).forEach(x => props.CallBack(x))
//                        setPowerFactor(!powerFactor);
//                    }}>PF</button>
//                </div>
//                <div className="btn-group" >
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: an ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'AN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('an') >= 0 && x.Show == an).forEach(x => props.CallBack(x))
//                        setAn(!an);
//                    }}>AN</button>
//                    <Button Key={`AN-W`} Path={props.Paths.find(x => x.Key == `AN-W`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`AN-VA`} Path={props.Paths.find(x => x.Key == `AN-VA`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`AN-VAR`} Path={props.Paths.find(x => x.Key == `AN-VAR`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`AN-PF`} Path={props.Paths.find(x => x.Key == `AN-PF`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: bn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'BN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('bn') >= 0 && x.Show == bn).forEach(x => props.CallBack(x))
//                        setBn(!bn);
//                    }}>BN</button>
//                    <Button Key={`BN-W`} Path={props.Paths.find(x => x.Key == `BN-W`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`BN-VA`} Path={props.Paths.find(x => x.Key == `BN-VA`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`BN-VAR`} Path={props.Paths.find(x => x.Key == `BN-VAR`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`BN-PF`} Path={props.Paths.find(x => x.Key == `BN-PF`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: cn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'CN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('cn') >= 0 && x.Show == cn).forEach(x => props.CallBack(x))
//                        setCn(!cn);
//                    }}>CN</button>
//                    <Button Key={`CN-W`} Path={props.Paths.find(x => x.Key == `CN-W`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`CN-VA`} Path={props.Paths.find(x => x.Key == `CN-VA`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`CN-VAR`} Path={props.Paths.find(x => x.Key == `CN-VAR`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`CN-PF`} Path={props.Paths.find(x => x.Key == `CN-PF`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group" >
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: total ? 1 : 0.5, backgroundColor: props.GetColor(`Total`) }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.toLowerCase().indexOf('total') >= 0 && x.Show == total).forEach(x => props.CallBack(x))
//                        setTotal(!total);
//                    }}>Total</button>
//                    <Button Key={`Total-W`} Path={props.Paths.find(x => x.Key == `Total-W`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Total-VA`} Path={props.Paths.find(x => x.Key == `Total-VA`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Total-VAR`} Path={props.Paths.find(x => x.Key == `Total-VAR`)} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={`Total-PF`} Path={props.Paths.find(x => x.Key == `Total-PF`)} CallBack={(path) => props.CallBack(path)} />
//                </div>
//            </div>
//        </div>
//    );
//}
//const RapidVoltageChangeLegend = (props: {
//    Paths: { Key: string, Show: boolean, Color: string, Data: [number, number][] }[],
//    CallBack: (path: { Key: string, Show: boolean, Color: string, Data: [number, number][] }) => void,
//    CompareData: boolean,
//    GetColor: (key: string) => string
//}) => {
//    const [all, setAll] = React.useState<boolean>(false);
//    const [ln, setLn] = React.useState<boolean>(true);
//    const [ll, setLl] = React.useState<boolean>(false);
//    const [a, setA] = React.useState<boolean>(false);
//    const [b, setB] = React.useState<boolean>(false);
//    const [c, setC] = React.useState<boolean>(false);
//    const [showLegend, setShowLegend] = React.useState<boolean>(false);
//    return (
//        <div style={{ position: 'relative', zIndex: 1000 }}>
//            <button className="btn btn-primary btn-sm dropdown-toggle" style={{ position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }} onClick={() => setShowLegend(!showLegend)}>{props.CompareData ? 'Compare' : 'Legend'}</button>
//            <div className="btn-group-vertical" style={{ display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' }}>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: all ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Show == all).forEach(x => props.CallBack(x))
//                        setLn(!all);
//                        setLl(!all);
//                        setA(!all);
//                        setB(!all);
//                        setC(!all);
//                        setAll(!all);
//                    }}>All</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: ln ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/V[ABC]N/g) != null && x.Show == ln).forEach(x => props.CallBack(x))
//                        setLn(!ln);
//                    }}>LN</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: ll ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/V[ABC][ABC]/g) != null && x.Show == ll).forEach(x => props.CallBack(x))
//                        setLl(!ll);
//                    }}>LL</button>
//                </div>
//                <div className="btn-group" >
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: a ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/VA[BN]/g) != null && x.Show == a).forEach(x => props.CallBack(x))
//                        setA(!a);
//                    }}>A</button>
//                    <Button Key={'VAN'} Path={props.Paths.find(x => x.Key == 'VAN')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'VAB'} Path={props.Paths.find(x => x.Key == 'VAB')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: b ? 1 : 0.5, backgroundColor: props.GetColor('VBN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/VB[CN]/g) != null && x.Show == b).forEach(x => props.CallBack(x))
//                        setB(!b);
//                    }}>B</button>
//                    <Button Key={'VBN'} Path={props.Paths.find(x => x.Key == 'VBN')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'VBC'} Path={props.Paths.find(x => x.Key == 'VBC')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: c ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/VC[AN]/g) != null && x.Show == c).forEach(x => props.CallBack(x))
//                        setC(!c);
//                    }}>C</button>
//                    <Button Key={'VCN'} Path={props.Paths.find(x => x.Key == 'VCN')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'VCA'} Path={props.Paths.find(x => x.Key == 'VCA')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//            </div>
//        </div>
//    );
//}
//const SpecifiedHarmonicLegend = (props: {
//    Paths: { Key: string, Show: boolean, Color: string, Data: [number, number][] }[],
//    CallBack: (path: { Key: string, Show: boolean, Color: string, Data: [number, number][] }) => void,
//    CompareData: boolean,
//    GetColor: (key: string) => string
//}) => {
//    const [all, setAll] = React.useState<boolean>(false);
//    const [vMag, setVMag] = React.useState<boolean>(true);
//    const [vAng, setVAng] = React.useState<boolean>(false);
//    const [iMag, setIMag] = React.useState<boolean>(false);
//    const [iAng, setIAng] = React.useState<boolean>(false);
//    const [a, setA] = React.useState<boolean>(false);
//    const [b, setB] = React.useState<boolean>(false);
//    const [c, setC] = React.useState<boolean>(false);
//    const [showLegend, setShowLegend] = React.useState<boolean>(false);
//    return (
//        <div style={{ position: 'relative', zIndex: 1000 }}>
//            <button className="btn btn-primary btn-sm dropdown-toggle" style={{ position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }} onClick={() => setShowLegend(!showLegend)}>{props.CompareData ? 'Compare' : 'Legend'}</button>
//            <div className="btn-group-vertical" style={{ display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' }}>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: all ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Show == all).forEach(x => props.CallBack(x))
//                        setVMag(!all);
//                        setVAng(!all);
//                        setIMag(!all);
//                        setIAng(!all);
//                        setA(!all);
//                        setB(!all);
//                        setC(!all);
//                        setAll(!all);
//                    }}>All</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: vMag ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/V[ABC]N Mag/g) != null && x.Show == vMag).forEach(x => props.CallBack(x))
//                        setVMag(!vMag);
//                    }}>V Mag</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: vAng ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/V[ABC][ABC] Ang/g) != null && x.Show == vAng).forEach(x => props.CallBack(x))
//                        setVAng(!vAng);
//                    }}>V Ang</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: iMag ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/I[ABC]N Mag/g) != null && x.Show == iMag).forEach(x => props.CallBack(x))
//                        setIMag(!iMag);
//                    }}>I Mag</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: iAng ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/I[ABC][ABC] Ang/g) != null && x.Show == iAng).forEach(x => props.CallBack(x))
//                        setIAng(!iAng);
//                    }}>I Ang</button>
//                </div>
//                <div className="btn-group" >
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: a ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/[VI]AN/g) != null && x.Show == a).forEach(x => props.CallBack(x))
//                        setA(!a);
//                    }}>A</button>
//                    <Button Key={'VAN Mag'} Path={props.Paths.find(x => x.Key == 'VAN Mag')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'VAN Ang'} Path={props.Paths.find(x => x.Key == 'VAN Ang')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'IAN Mag'} Path={props.Paths.find(x => x.Key == 'IAN Mag')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'IAN Ang'} Path={props.Paths.find(x => x.Key == 'IAN Ang')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: b ? 1 : 0.5, backgroundColor: props.GetColor('VBN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/[VI]BN/g) != null && x.Show == b).forEach(x => props.CallBack(x))
//                        setB(!b);
//                    }}>B</button>
//                    <Button Key={'VBN Mag'} Path={props.Paths.find(x => x.Key == 'VBN Mag')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'VBN Ang'} Path={props.Paths.find(x => x.Key == 'VBN Ang')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'IBN Mag'} Path={props.Paths.find(x => x.Key == 'IBN Mag')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'IBN Ang'} Path={props.Paths.find(x => x.Key == 'IBN Ang')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: c ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/[VI]CN/g) != null && x.Show == c).forEach(x => props.CallBack(x))
//                        setC(!c);
//                    }}>C</button>
//                    <Button Key={'VCN Mag'} Path={props.Paths.find(x => x.Key == 'VCN Mag')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'VCN Ang'} Path={props.Paths.find(x => x.Key == 'VCN Ang')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'ICN Mag'} Path={props.Paths.find(x => x.Key == 'ICN Mag')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'ICN Ang'} Path={props.Paths.find(x => x.Key == 'ICN Ang')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//            </div>
//        </div>
//    );
//}
//const SymmetricalComponentsLegend = (props: {
//    Paths: { Key: string, Show: boolean, Color: string, Data: [number, number][] }[],
//    CallBack: (path: { Key: string, Show: boolean, Color: string, Data: [number, number][] }) => void,
//    CompareData: boolean,
//    GetColor: (key: string) => string
//}) => {
//    const [all, setAll] = React.useState<boolean>(false);
//    const [v, setV] = React.useState<boolean>(true);
//    const [i, setI] = React.useState<boolean>(false);
//    const [s0, setS0] = React.useState<boolean>(false);
//    const [s1, setS1] = React.useState<boolean>(false);
//    const [s2, setS2] = React.useState<boolean>(false);
//    const [showLegend, setShowLegend] = React.useState<boolean>(false);
//    return (
//        <div style={{ position: 'relative', zIndex: 1000 }}>
//            <button className="btn btn-primary btn-sm dropdown-toggle" style={{ position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }} onClick={() => setShowLegend(!showLegend)}>{props.CompareData ? 'Compare' : 'Legend'}</button>
//            <div className="btn-group-vertical" style={{ display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' }}>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: all ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Show == all).forEach(x => props.CallBack(x))
//                        setV(!all);
//                        setI(!all);
//                        setS0(!all);
//                        setS1(!all);
//                        setS2(!all);
//                        setAll(!all);
//                    }}>All</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: v ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/Voltage/g) != null && x.Show == v).forEach(x => props.CallBack(x))
//                        setV(!v);
//                    }}>V</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: i ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/Current/g) != null && x.Show == i).forEach(x => props.CallBack(x))
//                        setI(!i);
//                    }}>I</button>
//                </div>
//                <div className="btn-group" >
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: s0 ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/S0/g) != null && x.Show == s0).forEach(x => props.CallBack(x))
//                        setS0(!s0);
//                    }}>S0</button>
//                    <Button Key={'V S0'} Path={props.Paths.find(x => x.Key == 'Voltage S0')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'I S0'} Path={props.Paths.find(x => x.Key == 'Current S0')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: s1 ? 1 : 0.5, backgroundColor: props.GetColor('VBN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/S1/g) != null && x.Show == s1).forEach(x => props.CallBack(x))
//                        setS1(!s1);
//                    }}>S1</button>
//                    <Button Key={'V S1'} Path={props.Paths.find(x => x.Key == 'Voltage S1')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'I S1'} Path={props.Paths.find(x => x.Key == 'Current S1')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: s2 ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/S2/g) != null && x.Show == s2).forEach(x => props.CallBack(x))
//                        setS2(!s2);
//                    }}>S2</button>
//                    <Button Key={'V S2'} Path={props.Paths.find(x => x.Key == 'Voltage S2')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'I S2'} Path={props.Paths.find(x => x.Key == 'Current S2')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//            </div>
//        </div>
//    );
//}
//const THDLegend = (props: {
//    Paths: { Key: string, Show: boolean, Color: string, Data: [number, number][] }[],
//    CallBack: (path: { Key: string, Show: boolean, Color: string, Data: [number, number][] }) => void,
//    CompareData: boolean,
//    GetColor: (key: string) => string
//}) => {
//    const [all, setAll] = React.useState<boolean>(false);
//    const [v, setV] = React.useState<boolean>(true);
//    const [i, setI] = React.useState<boolean>(false);
//    const [a, setA] = React.useState<boolean>(false);
//    const [b, setB] = React.useState<boolean>(false);
//    const [c, setC] = React.useState<boolean>(false);
//    const [showLegend, setShowLegend] = React.useState<boolean>(false);
//    return (
//        <div style={{ position: 'relative', zIndex: 1000 }}>
//            <button className="btn btn-primary btn-sm dropdown-toggle" style={{ position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }} onClick={() => setShowLegend(!showLegend)}>{props.CompareData ? 'Compare' : 'Legend'}</button>
//            <div className="btn-group-vertical" style={{ display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' }}>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: all ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Show == all).forEach(x => props.CallBack(x))
//                        setV(!all);
//                        setI(!all);
//                        setA(!all);
//                        setB(!all);
//                        setC(!all);
//                        setAll(!all);
//                    }}>All</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: v ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/V[ABC]N/g) != null && x.Show == v).forEach(x => props.CallBack(x))
//                        setV(!v);
//                    }}>V</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: i ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/I[ABC]N/g) != null && x.Show == i).forEach(x => props.CallBack(x))
//                        setI(!i);
//                    }}>I</button>
//                </div>
//                <div className="btn-group" >
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: a ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/[VI]AN/g) != null && x.Show == a).forEach(x => props.CallBack(x))
//                        setA(!a);
//                    }}>A</button>
//                    <Button Key={'VAN'} Path={props.Paths.find(x => x.Key == 'VAN')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'IAN'} Path={props.Paths.find(x => x.Key == 'IAN')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: b ? 1 : 0.5, backgroundColor: props.GetColor('VBN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/[VI]BN/g) != null && x.Show == b).forEach(x => props.CallBack(x))
//                        setB(!b);
//                    }}>B</button>
//                    <Button Key={'VBN'} Path={props.Paths.find(x => x.Key == 'VBN')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'IBN'} Path={props.Paths.find(x => x.Key == 'IBN')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: c ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/[VI]CN/g) != null && x.Show == c).forEach(x => props.CallBack(x))
//                        setC(!c);
//                    }}>C</button>
//                    <Button Key={'VCN'} Path={props.Paths.find(x => x.Key == 'VCN')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'ICN'} Path={props.Paths.find(x => x.Key == 'ICN')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//            </div>
//        </div>
//    );
//}
//const UnbalanceLegend = (props: {
//    Paths: { Key: string, Show: boolean, Color: string, Data: [number, number][] }[],
//    CallBack: (path: { Key: string, Show: boolean, Color: string, Data: [number, number][] }) => void,
//    CompareData: boolean,
//    GetColor: (key: string) => string
//}) => {
//    const [all, setAll] = React.useState<boolean>(false);
//    const [v, setV] = React.useState<boolean>(true);
//    const [i, setI] = React.useState<boolean>(false);
//    const [s0s1, setS0s1] = React.useState<boolean>(false);
//    const [s2s1, setS2s1] = React.useState<boolean>(false);
//    const [showLegend, setShowLegend] = React.useState<boolean>(false);
//    return (
//        <div style={{ position: 'relative', zIndex: 1000 }}>
//            <button className="btn btn-primary btn-sm dropdown-toggle" style={{ position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }} onClick={() => setShowLegend(!showLegend)}>{props.CompareData ? 'Compare' : 'Legend'}</button>
//            <div className="btn-group-vertical" style={{ display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' }}>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: all ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Show == all).forEach(x => props.CallBack(x))
//                        setV(!all);
//                        setI(!all);
//                        setS0s1(!all);
//                        setS2s1(!all);
//                        setAll(!all);
//                    }}>All</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: v ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/Voltage/g) != null && x.Show == v).forEach(x => props.CallBack(x))
//                        setV(!v);
//                    }}>V</button>
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: i ? 1 : 0.5 }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/Current/g) != null && x.Show == i).forEach(x => props.CallBack(x))
//                        setI(!i);
//                    }}>I</button>
//                </div>
//                <div className="btn-group" >
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: s0s1 ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/S0/g) != null && x.Show == s0s1).forEach(x => props.CallBack(x))
//                        setS0s1(!s0s1);
//                    }}>S0/S1</button>
//                    <Button Key={'V S0/S1'} Path={props.Paths.find(x => x.Key == 'S0/S1 Voltage')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'I S0/S1'} Path={props.Paths.find(x => x.Key == 'S0/S1 Current')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//                <div className="btn-group">
//                    <button type="button" className="btn btn-primary btn-sm" style={{ opacity: s2s1 ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }} onClick={(evt) => {
//                        props.Paths.filter(x => x.Key.match(/S2/g) != null && x.Show == s2s1).forEach(x => props.CallBack(x))
//                        setS2s1(!s2s1);
//                    }}>S2/S1</button>
//                    <Button Key={'V S2/S1'} Path={props.Paths.find(x => x.Key == 'S2/S1 Voltage')} CallBack={(path) => props.CallBack(path)} />
//                    <Button Key={'I S2/S1'} Path={props.Paths.find(x => x.Key == 'S2/S1 Current')} CallBack={(path) => props.CallBack(path)} />
//                </div>
//            </div>
//        </div>
//    );
//}
//const Button = (props: { Path: { Key: string, Show: boolean, Color: string, Data: [number,number][] }, Key: string, CallBack: (path) => void }) => {
//    return (
//        <button
//            type="button"
//            className="btn btn-primary btn-sm"
//            style={{
//                backgroundColor: props.Path == undefined ? 'black' : props.Path.Color,
//                opacity: props.Path == undefined || props.Path.Show ? 1 : 0.5
//            }}
//            disabled={props.Path == undefined}
//            onClick={(evt) => props.CallBack(props.Path)}>{props.Key}</button>
//    )
//}
/* harmony default export */ __webpack_exports__["default"] = (Legend);


/***/ }),

/***/ "./tsx/WaveformViewer/Legend/Button.tsx":
/*!**********************************************!*\
  !*** ./tsx/WaveformViewer/Legend/Button.tsx ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
//******************************************************************************************************
//  Legend.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/05/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************

var Button = function (props) {
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: {
            backgroundColor: props.Path == undefined ? 'black' : props.Path.Color,
            opacity: props.Path == undefined || props.Path.Show ? 1 : 0.5
        }, disabled: props.Path == undefined, onClick: function (evt) { return props.CallBack(props.Path); } }, props.Key));
};
/* harmony default export */ __webpack_exports__["default"] = (Button);


/***/ }),

/***/ "./tsx/WaveformViewer/Legend/CurrentLegend.tsx":
/*!*****************************************************!*\
  !*** ./tsx/WaveformViewer/Legend/CurrentLegend.tsx ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./tsx/WaveformViewer/Legend/Button.tsx");
//******************************************************************************************************
//  Legend.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/05/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};


var CurrentLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), wf = _b[0], setWf = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), rms = _c[0], setRMS = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), amp = _d[0], setAmp = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), ph = _e[0], setPh = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), an = _f[0], setAn = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), bn = _g[0], setBn = _g[1];
    var _h = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), cn = _h[0], setCn = _h[1];
    var _j = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _j[0], setShowLegend = _j[1];
    var _k = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), ng = _k[0], setNg = _k[1];
    var _l = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), res = _l[0], setRes = _l[1];
    var prefix = 'I';
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setWf(!all);
                        setRMS(!all);
                        setAmp(!all);
                        setPh(!all);
                        setAn(!all);
                        setBn(!all);
                        setCn(!all);
                        setRes(!all);
                        setNg(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: wf ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('wf') >= 0 && x.Show == wf; }).forEach(function (x) { return props.CallBack(x); });
                        setWf(!wf);
                    } }, "Wf"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: rms ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('rms') >= 0 && x.Show == rms; }).forEach(function (x) { return props.CallBack(x); });
                        setRMS(!rms);
                    } }, "RMS"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: amp ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('amp') >= 0 && x.Show == amp; }).forEach(function (x) { return props.CallBack(x); });
                        setAmp(!amp);
                    } }, "Amp"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ph ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('ph') >= 0 && x.Show == ph; }).forEach(function (x) { return props.CallBack(x); });
                        setPh(!ph);
                    } }, "Ph")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: an ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'AN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('an') >= 0 && x.Show == an; }).forEach(function (x) { return props.CallBack(x); });
                        setAn(!an);
                    } },
                    prefix,
                    "AN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Wf-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "RMS-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Amp-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Ph-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: bn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'BN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('bn') >= 0 && x.Show == bn; }).forEach(function (x) { return props.CallBack(x); });
                        setBn(!bn);
                    } },
                    prefix,
                    "BN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Wf-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "RMS-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Amp-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Ph-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: cn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'CN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('cn') >= 0 && x.Show == cn; }).forEach(function (x) { return props.CallBack(x); });
                        setCn(!cn);
                    } },
                    prefix,
                    "CN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Wf-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "RMS-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Amp-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Ph-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ng ? 1 : 0.5, backgroundColor: props.GetColor(prefix + "NG") }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('ng') >= 0 && x.Show == ng; }).forEach(function (x) { return props.CallBack(x); });
                        setNg(!ng);
                    } },
                    prefix,
                    "NG"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Wf-" + prefix + "NG", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "NG"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "RMS-" + prefix + "NG", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "NG"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Amp-" + prefix + "NG", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "NG"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Ph-" + prefix + "NG", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "NG"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: res ? 1 : 0.5, backgroundColor: props.GetColor(prefix + "RES") }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('res') >= 0 && x.Show == res; }).forEach(function (x) { return props.CallBack(x); });
                        setRes(!res);
                    } },
                    prefix,
                    "RES"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Wf-" + prefix + "RES", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "RES"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "RMS-" + prefix + "RES", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "RES"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Amp-" + prefix + "RES", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "RES"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Ph-" + prefix + "RES", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "RES"; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
/* harmony default export */ __webpack_exports__["default"] = (CurrentLegend);


/***/ }),

/***/ "./tsx/WaveformViewer/Legend/FrequencyLegend.tsx":
/*!*******************************************************!*\
  !*** ./tsx/WaveformViewer/Legend/FrequencyLegend.tsx ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./tsx/WaveformViewer/Legend/Button.tsx");
//******************************************************************************************************
//  Legend.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/05/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};


var FrequencyLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _a[0], setShowLegend = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _b[0], setAll = _b[1];
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 150, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setAll(!all);
                    } }, "All")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "VA", Path: props.Paths.find(function (x) { return x.Key == "VA"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "VB", Path: props.Paths.find(function (x) { return x.Key == "VB"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "VC", Path: props.Paths.find(function (x) { return x.Key == "VC"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Average", Path: props.Paths.find(function (x) { return x.Key == "Average"; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
/* harmony default export */ __webpack_exports__["default"] = (FrequencyLegend);


/***/ }),

/***/ "./tsx/WaveformViewer/Legend/PowerLegend.tsx":
/*!***************************************************!*\
  !*** ./tsx/WaveformViewer/Legend/PowerLegend.tsx ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./tsx/WaveformViewer/Legend/Button.tsx");
//******************************************************************************************************
//  Legend.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/05/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};


var PowerLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _a[0], setShowLegend = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _b[0], setAll = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), active = _c[0], setActive = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), apparent = _d[0], setApparent = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), reactive = _e[0], setReactive = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), powerFactor = _f[0], setPowerFactor = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), an = _g[0], setAn = _g[1];
    var _h = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), bn = _h[0], setBn = _h[1];
    var _j = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), cn = _j[0], setCn = _j[1];
    var _k = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), total = _k[0], setTotal = _k[1];
    var prefix = 'I';
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setActive(!all);
                        setApparent(!all);
                        setReactive(!all);
                        setPowerFactor(!all);
                        setAn(!all);
                        setBn(!all);
                        setCn(!all);
                        setTotal(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: active ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('w') >= 0 && x.Show == active; }).forEach(function (x) { return props.CallBack(x); });
                        setActive(!active);
                    } }, "W"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: apparent ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/-VA[^R]?$/g) != null && x.Show == apparent; }).forEach(function (x) { return props.CallBack(x); });
                        setApparent(!apparent);
                    } }, "VA"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: reactive ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/-VAR$/g) != null && x.Show == reactive; }).forEach(function (x) { return props.CallBack(x); });
                        setReactive(!reactive);
                    } }, "VAR"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: powerFactor ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('pf') >= 0 && x.Show == powerFactor; }).forEach(function (x) { return props.CallBack(x); });
                        setPowerFactor(!powerFactor);
                    } }, "PF")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: an ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'AN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('an') >= 0 && x.Show == an; }).forEach(function (x) { return props.CallBack(x); });
                        setAn(!an);
                    } }, "AN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "AN-W", Path: props.Paths.find(function (x) { return x.Key == "AN-W"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "AN-VA", Path: props.Paths.find(function (x) { return x.Key == "AN-VA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "AN-VAR", Path: props.Paths.find(function (x) { return x.Key == "AN-VAR"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "AN-PF", Path: props.Paths.find(function (x) { return x.Key == "AN-PF"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: bn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'BN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('bn') >= 0 && x.Show == bn; }).forEach(function (x) { return props.CallBack(x); });
                        setBn(!bn);
                    } }, "BN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "BN-W", Path: props.Paths.find(function (x) { return x.Key == "BN-W"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "BN-VA", Path: props.Paths.find(function (x) { return x.Key == "BN-VA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "BN-VAR", Path: props.Paths.find(function (x) { return x.Key == "BN-VAR"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "BN-PF", Path: props.Paths.find(function (x) { return x.Key == "BN-PF"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: cn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'CN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('cn') >= 0 && x.Show == cn; }).forEach(function (x) { return props.CallBack(x); });
                        setCn(!cn);
                    } }, "CN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "CN-W", Path: props.Paths.find(function (x) { return x.Key == "CN-W"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "CN-VA", Path: props.Paths.find(function (x) { return x.Key == "CN-VA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "CN-VAR", Path: props.Paths.find(function (x) { return x.Key == "CN-VAR"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "CN-PF", Path: props.Paths.find(function (x) { return x.Key == "CN-PF"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: total ? 1 : 0.5, backgroundColor: props.GetColor("Total") }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('total') >= 0 && x.Show == total; }).forEach(function (x) { return props.CallBack(x); });
                        setTotal(!total);
                    } }, "Total"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Total-W", Path: props.Paths.find(function (x) { return x.Key == "Total-W"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Total-VA", Path: props.Paths.find(function (x) { return x.Key == "Total-VA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Total-VAR", Path: props.Paths.find(function (x) { return x.Key == "Total-VAR"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Total-PF", Path: props.Paths.find(function (x) { return x.Key == "Total-PF"; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
/* harmony default export */ __webpack_exports__["default"] = (PowerLegend);


/***/ }),

/***/ "./tsx/WaveformViewer/Legend/RapidVoltageChangeLegend.tsx":
/*!****************************************************************!*\
  !*** ./tsx/WaveformViewer/Legend/RapidVoltageChangeLegend.tsx ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./tsx/WaveformViewer/Legend/Button.tsx");
//******************************************************************************************************
//  Legend.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/05/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};


var RapidVoltageChangeLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), ln = _b[0], setLn = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), ll = _c[0], setLl = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), a = _d[0], setA = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), b = _e[0], setB = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), c = _f[0], setC = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _g[0], setShowLegend = _g[1];
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setLn(!all);
                        setLl(!all);
                        setA(!all);
                        setB(!all);
                        setC(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ln ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/V[ABC]N/g) != null && x.Show == ln; }).forEach(function (x) { return props.CallBack(x); });
                        setLn(!ln);
                    } }, "LN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ll ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/V[ABC][ABC]/g) != null && x.Show == ll; }).forEach(function (x) { return props.CallBack(x); });
                        setLl(!ll);
                    } }, "LL")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: a ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/VA[BN]/g) != null && x.Show == a; }).forEach(function (x) { return props.CallBack(x); });
                        setA(!a);
                    } }, "A"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VAN', Path: props.Paths.find(function (x) { return x.Key == 'VAN'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VAB', Path: props.Paths.find(function (x) { return x.Key == 'VAB'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: b ? 1 : 0.5, backgroundColor: props.GetColor('VBN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/VB[CN]/g) != null && x.Show == b; }).forEach(function (x) { return props.CallBack(x); });
                        setB(!b);
                    } }, "B"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VBN', Path: props.Paths.find(function (x) { return x.Key == 'VBN'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VBC', Path: props.Paths.find(function (x) { return x.Key == 'VBC'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: c ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/VC[AN]/g) != null && x.Show == c; }).forEach(function (x) { return props.CallBack(x); });
                        setC(!c);
                    } }, "C"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VCN', Path: props.Paths.find(function (x) { return x.Key == 'VCN'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VCA', Path: props.Paths.find(function (x) { return x.Key == 'VCA'; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
/* harmony default export */ __webpack_exports__["default"] = (RapidVoltageChangeLegend);


/***/ }),

/***/ "./tsx/WaveformViewer/Legend/SpecifiedHarmonicLegend.tsx":
/*!***************************************************************!*\
  !*** ./tsx/WaveformViewer/Legend/SpecifiedHarmonicLegend.tsx ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./tsx/WaveformViewer/Legend/Button.tsx");
//******************************************************************************************************
//  Legend.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/05/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};


var SpecifiedHarmonicLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), vMag = _b[0], setVMag = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), vAng = _c[0], setVAng = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), iMag = _d[0], setIMag = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), iAng = _e[0], setIAng = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), a = _f[0], setA = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), b = _g[0], setB = _g[1];
    var _h = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), c = _h[0], setC = _h[1];
    var _j = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _j[0], setShowLegend = _j[1];
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setVMag(!all);
                        setVAng(!all);
                        setIMag(!all);
                        setIAng(!all);
                        setA(!all);
                        setB(!all);
                        setC(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: vMag ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/V[ABC]N Mag/g) != null && x.Show == vMag; }).forEach(function (x) { return props.CallBack(x); });
                        setVMag(!vMag);
                    } }, "V Mag"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: vAng ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/V[ABC]N Ang/g) != null && x.Show == vAng; }).forEach(function (x) { return props.CallBack(x); });
                        setVAng(!vAng);
                    } }, "V Ang"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: iMag ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/I[ABC]N Mag/g) != null && x.Show == iMag; }).forEach(function (x) { return props.CallBack(x); });
                        setIMag(!iMag);
                    } }, "I Mag"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: iAng ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/I[ABC]N Ang/g) != null && x.Show == iAng; }).forEach(function (x) { return props.CallBack(x); });
                        setIAng(!iAng);
                    } }, "I Ang")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: a ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/[VI]AN/g) != null && x.Show == a; }).forEach(function (x) { return props.CallBack(x); });
                        setA(!a);
                    } }, "A"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VAN Mag', Path: props.Paths.find(function (x) { return x.Key == 'VAN Mag'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VAN Ang', Path: props.Paths.find(function (x) { return x.Key == 'VAN Ang'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'IAN Mag', Path: props.Paths.find(function (x) { return x.Key == 'IAN Mag'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'IAN Ang', Path: props.Paths.find(function (x) { return x.Key == 'IAN Ang'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: b ? 1 : 0.5, backgroundColor: props.GetColor('VBN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/[VI]BN/g) != null && x.Show == b; }).forEach(function (x) { return props.CallBack(x); });
                        setB(!b);
                    } }, "B"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VBN Mag', Path: props.Paths.find(function (x) { return x.Key == 'VBN Mag'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VBN Ang', Path: props.Paths.find(function (x) { return x.Key == 'VBN Ang'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'IBN Mag', Path: props.Paths.find(function (x) { return x.Key == 'IBN Mag'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'IBN Ang', Path: props.Paths.find(function (x) { return x.Key == 'IBN Ang'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: c ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/[VI]CN/g) != null && x.Show == c; }).forEach(function (x) { return props.CallBack(x); });
                        setC(!c);
                    } }, "C"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VCN Mag', Path: props.Paths.find(function (x) { return x.Key == 'VCN Mag'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VCN Ang', Path: props.Paths.find(function (x) { return x.Key == 'VCN Ang'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'ICN Mag', Path: props.Paths.find(function (x) { return x.Key == 'ICN Mag'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'ICN Ang', Path: props.Paths.find(function (x) { return x.Key == 'ICN Ang'; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
/* harmony default export */ __webpack_exports__["default"] = (SpecifiedHarmonicLegend);


/***/ }),

/***/ "./tsx/WaveformViewer/Legend/SymmetricalComponentsLegend.tsx":
/*!*******************************************************************!*\
  !*** ./tsx/WaveformViewer/Legend/SymmetricalComponentsLegend.tsx ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./tsx/WaveformViewer/Legend/Button.tsx");
//******************************************************************************************************
//  Legend.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/05/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};


var SymmetricalComponentsLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), v = _b[0], setV = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), i = _c[0], setI = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), s0 = _d[0], setS0 = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), s1 = _e[0], setS1 = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), s2 = _f[0], setS2 = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _g[0], setShowLegend = _g[1];
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setV(!all);
                        setI(!all);
                        setS0(!all);
                        setS1(!all);
                        setS2(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: v ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/Voltage/g) != null && x.Show == v; }).forEach(function (x) { return props.CallBack(x); });
                        setV(!v);
                    } }, "V"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: i ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/Current/g) != null && x.Show == i; }).forEach(function (x) { return props.CallBack(x); });
                        setI(!i);
                    } }, "I")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: s0 ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/S0/g) != null && x.Show == s0; }).forEach(function (x) { return props.CallBack(x); });
                        setS0(!s0);
                    } }, "S0"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'V S0', Path: props.Paths.find(function (x) { return x.Key == 'Voltage S0'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'I S0', Path: props.Paths.find(function (x) { return x.Key == 'Current S0'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: s1 ? 1 : 0.5, backgroundColor: props.GetColor('VBN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/S1/g) != null && x.Show == s1; }).forEach(function (x) { return props.CallBack(x); });
                        setS1(!s1);
                    } }, "S1"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'V S1', Path: props.Paths.find(function (x) { return x.Key == 'Voltage S1'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'I S1', Path: props.Paths.find(function (x) { return x.Key == 'Current S1'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: s2 ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/S2/g) != null && x.Show == s2; }).forEach(function (x) { return props.CallBack(x); });
                        setS2(!s2);
                    } }, "S2"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'V S2', Path: props.Paths.find(function (x) { return x.Key == 'Voltage S2'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'I S2', Path: props.Paths.find(function (x) { return x.Key == 'Current S2'; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
/* harmony default export */ __webpack_exports__["default"] = (SymmetricalComponentsLegend);


/***/ }),

/***/ "./tsx/WaveformViewer/Legend/THDLegend.tsx":
/*!*************************************************!*\
  !*** ./tsx/WaveformViewer/Legend/THDLegend.tsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./tsx/WaveformViewer/Legend/Button.tsx");
//******************************************************************************************************
//  Legend.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/05/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};


var THDLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(true), 2), v = _b[0], setV = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), i = _c[0], setI = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), a = _d[0], setA = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), b = _e[0], setB = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), c = _f[0], setC = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _g[0], setShowLegend = _g[1];
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setV(!all);
                        setI(!all);
                        setA(!all);
                        setB(!all);
                        setC(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: v ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/V[ABC]N/g) != null && x.Show == v; }).forEach(function (x) { return props.CallBack(x); });
                        setV(!v);
                    } }, "V"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: i ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/I[ABC]N/g) != null && x.Show == i; }).forEach(function (x) { return props.CallBack(x); });
                        setI(!i);
                    } }, "I")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: a ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/[VI]AN/g) != null && x.Show == a; }).forEach(function (x) { return props.CallBack(x); });
                        setA(!a);
                    } }, "A"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VAN', Path: props.Paths.find(function (x) { return x.Key == 'VAN'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'IAN', Path: props.Paths.find(function (x) { return x.Key == 'IAN'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: b ? 1 : 0.5, backgroundColor: props.GetColor('VBN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/[VI]BN/g) != null && x.Show == b; }).forEach(function (x) { return props.CallBack(x); });
                        setB(!b);
                    } }, "B"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VBN', Path: props.Paths.find(function (x) { return x.Key == 'VBN'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'IBN', Path: props.Paths.find(function (x) { return x.Key == 'IBN'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: c ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/[VI]CN/g) != null && x.Show == c; }).forEach(function (x) { return props.CallBack(x); });
                        setC(!c);
                    } }, "C"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'VCN', Path: props.Paths.find(function (x) { return x.Key == 'VCN'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'ICN', Path: props.Paths.find(function (x) { return x.Key == 'ICN'; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
/* harmony default export */ __webpack_exports__["default"] = (THDLegend);


/***/ }),

/***/ "./tsx/WaveformViewer/Legend/UnbalanceLegend.tsx":
/*!*******************************************************!*\
  !*** ./tsx/WaveformViewer/Legend/UnbalanceLegend.tsx ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./tsx/WaveformViewer/Legend/Button.tsx");
//******************************************************************************************************
//  Legend.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/05/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};


var UnbalanceLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), v = _b[0], setV = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), i = _c[0], setI = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), s0s1 = _d[0], setS0s1 = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), s2s1 = _e[0], setS2s1 = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _f[0], setShowLegend = _f[1];
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setV(!all);
                        setI(!all);
                        setS0s1(!all);
                        setS2s1(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: v ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/Voltage/g) != null && x.Show == v; }).forEach(function (x) { return props.CallBack(x); });
                        setV(!v);
                    } }, "V"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: i ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/Current/g) != null && x.Show == i; }).forEach(function (x) { return props.CallBack(x); });
                        setI(!i);
                    } }, "I")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: s0s1 ? 1 : 0.5, backgroundColor: props.GetColor('VAN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/S0/g) != null && x.Show == s0s1; }).forEach(function (x) { return props.CallBack(x); });
                        setS0s1(!s0s1);
                    } }, "S0/S1"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'V S0/S1', Path: props.Paths.find(function (x) { return x.Key == 'S0/S1 Voltage'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'I S0/S1', Path: props.Paths.find(function (x) { return x.Key == 'S0/S1 Current'; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: s2s1 ? 1 : 0.5, backgroundColor: props.GetColor('VCN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.match(/S2/g) != null && x.Show == s2s1; }).forEach(function (x) { return props.CallBack(x); });
                        setS2s1(!s2s1);
                    } }, "S2/S1"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'V S2/S1', Path: props.Paths.find(function (x) { return x.Key == 'S2/S1 Voltage'; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: 'I S2/S1', Path: props.Paths.find(function (x) { return x.Key == 'S2/S1 Current'; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
/* harmony default export */ __webpack_exports__["default"] = (UnbalanceLegend);


/***/ }),

/***/ "./tsx/WaveformViewer/Legend/VoltageLegend.tsx":
/*!*****************************************************!*\
  !*** ./tsx/WaveformViewer/Legend/VoltageLegend.tsx ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./tsx/WaveformViewer/Legend/Button.tsx");
//******************************************************************************************************
//  Legend.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/05/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};


var VoltageLegend = function (props) {
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), all = _a[0], setAll = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), wf = _b[0], setWf = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), rms = _c[0], setRMS = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), amp = _d[0], setAmp = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), ph = _e[0], setPh = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), an = _f[0], setAn = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), bn = _g[0], setBn = _g[1];
    var _h = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), cn = _h[0], setCn = _h[1];
    var _j = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), ab = _j[0], setAb = _j[1];
    var _k = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), bc = _k[0], setBc = _k[1];
    var _l = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), ca = _l[0], setCa = _l[1];
    var _m = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(false), 2), showLegend = _m[0], setShowLegend = _m[1];
    var prefix = 'V';
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { position: 'relative', zIndex: 1000 } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { className: "btn btn-primary btn-sm dropdown-toggle", style: { position: 'absolute', width: 86, right: (props.CompareData ? 86 : 0) }, onClick: function () { return setShowLegend(!showLegend); } }, props.CompareData ? 'Compare' : 'Legend'),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group-vertical", style: { display: showLegend ? 'block' : 'none', position: 'absolute', width: 400, right: 0, top: 40, backgroundColor: 'white' } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: all ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Show == all; }).forEach(function (x) { return props.CallBack(x); });
                        setWf(!all);
                        setRMS(!all);
                        setAmp(!all);
                        setPh(!all);
                        setAn(!all);
                        setBn(!all);
                        setCn(!all);
                        setAb(!all);
                        setBc(!all);
                        setCa(!all);
                        setAll(!all);
                    } }, "All"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: wf ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('wf') >= 0 && x.Show == wf; }).forEach(function (x) { return props.CallBack(x); });
                        setWf(!wf);
                    } }, "Wf"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: rms ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('rms') >= 0 && x.Show == rms; }).forEach(function (x) { return props.CallBack(x); });
                        setRMS(!rms);
                    } }, "RMS"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: amp ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('amp') >= 0 && x.Show == amp; }).forEach(function (x) { return props.CallBack(x); });
                        setAmp(!amp);
                    } }, "Amp"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ph ? 1 : 0.5 }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('ph') >= 0 && x.Show == ph; }).forEach(function (x) { return props.CallBack(x); });
                        setPh(!ph);
                    } }, "Ph")),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: an ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'AN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('an') >= 0 && x.Show == an; }).forEach(function (x) { return props.CallBack(x); });
                        setAn(!an);
                    } },
                    prefix,
                    "AN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Wf-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "RMS-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Amp-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Ph-" + prefix + "AN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "AN"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: bn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'BN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('bn') >= 0 && x.Show == bn; }).forEach(function (x) { return props.CallBack(x); });
                        setBn(!bn);
                    } },
                    prefix,
                    "BN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Wf-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "RMS-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Amp-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Ph-" + prefix + "BN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "BN"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: cn ? 1 : 0.5, backgroundColor: props.GetColor(prefix + 'CN') }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('cn') >= 0 && x.Show == cn; }).forEach(function (x) { return props.CallBack(x); });
                        setCn(!cn);
                    } },
                    prefix,
                    "CN"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Wf-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "RMS-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Amp-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Ph-" + prefix + "CN", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "CN"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ab ? 1 : 0.5, backgroundColor: props.GetColor(prefix + "AB") }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('ab') >= 0 && x.Show == ab; }).forEach(function (x) { return props.CallBack(x); });
                        setAb(!ab);
                    } },
                    prefix,
                    "AB"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Wf-" + prefix + "AB", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "AB"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "RMS-" + prefix + "AB", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "AB"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Amp-" + prefix + "AB", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "AB"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Ph-" + prefix + "AB", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "AB"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: bc ? 1 : 0.5, backgroundColor: props.GetColor(prefix + "BC") }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('bc') >= 0 && x.Show == bc; }).forEach(function (x) { return props.CallBack(x); });
                        setBc(!bc);
                    } },
                    prefix,
                    "BC"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Wf-" + prefix + "BC", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "BC"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "RMS-" + prefix + "BC", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "BC"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Amp-" + prefix + "BC", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "BC"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Ph-" + prefix + "BC", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "BC"; }), CallBack: function (path) { return props.CallBack(path); } })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "btn-group" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { type: "button", className: "btn btn-primary btn-sm", style: { opacity: ca ? 1 : 0.5, backgroundColor: props.GetColor(prefix + "CA") }, onClick: function (evt) {
                        props.Paths.filter(function (x) { return x.Key.toLowerCase().indexOf('ca') >= 0 && x.Show == ca; }).forEach(function (x) { return props.CallBack(x); });
                        setCa(!ca);
                    } },
                    prefix,
                    "CA"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Wf-" + prefix + "CA", Path: props.Paths.find(function (x) { return x.Key == "Wf-" + prefix + "CA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "RMS-" + prefix + "CA", Path: props.Paths.find(function (x) { return x.Key == "RMS-" + prefix + "CA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Amp-" + prefix + "CA", Path: props.Paths.find(function (x) { return x.Key == "Amp-" + prefix + "CA"; }), CallBack: function (path) { return props.CallBack(path); } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { Key: "Ph-" + prefix + "CA", Path: props.Paths.find(function (x) { return x.Key == "Ph-" + prefix + "CA"; }), CallBack: function (path) { return props.CallBack(path); } })))));
};
/* harmony default export */ __webpack_exports__["default"] = (VoltageLegend);


/***/ }),

/***/ "./tsx/WaveformViewer/PolarChart.tsx":
/*!*******************************************!*\
  !*** ./tsx/WaveformViewer/PolarChart.tsx ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3 */ "../node_modules/d3/index.js");
//******************************************************************************************************
//  PolarChart.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/06/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************


var PolarChart = function (props) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
    try {
        var chartHeight = props.Height - 150;
        if (props.VoltageData.length == 0 || props.CurrentData.length == 0)
            return null;
        var vData = props.VoltageData.map(function (x) {
            var data = x.Data[Object(d3__WEBPACK_IMPORTED_MODULE_1__["bisect"])(x.Data.map(function (x) { return x[0]; }), props.Time)];
            return { Key: x.Key, Value: data != undefined ? data[1] : undefined, Color: x.Color };
        });
        var vMax = parseFloat(Object(d3__WEBPACK_IMPORTED_MODULE_1__["max"])(vData.filter(function (x) { return x.Key.indexOf('RMS-V') >= 0; }).map(function (x) { return x.Value; })).toString());
        var iData = props.CurrentData.map(function (x) {
            var data = x.Data[Object(d3__WEBPACK_IMPORTED_MODULE_1__["bisect"])(x.Data.map(function (x) { return x[0]; }), props.Time)];
            return { Key: x.Key, Value: data != undefined ? data[1] : undefined, Color: x.Color };
        });
        var iMax = parseFloat(Object(d3__WEBPACK_IMPORTED_MODULE_1__["max"])(iData.filter(function (x) { return x.Key.indexOf('RMS-I') >= 0; }).map(function (x) { return x.Value; })).toString());
        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null,
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg", { width: props.Width, height: chartHeight },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("circle", { cx: props.Width / 2, cy: chartHeight / 2, r: chartHeight * 0.3, stroke: "lightgrey", strokeWidth: "1", fill: 'white', fillOpacity: "0" }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("circle", { cx: props.Width / 2, cy: chartHeight / 2, r: chartHeight * 0.45, stroke: "lightgrey", strokeWidth: "1", fill: 'white', fillOpacity: "0" }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("line", { x1: props.Width / 2, y1: "0", x2: props.Width / 2, y2: chartHeight, style: { stroke: 'lightgrey', strokeWidth: 2 } }),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("line", { x1: props.Width / 2 - chartHeight / 2, y1: chartHeight / 2, x2: props.Width / 2 + chartHeight / 2, y2: chartHeight / 2, style: { stroke: 'lightgrey', strokeWidth: 2 } }),
                vData.find(function (x) { return x.Key == 'RMS-VAN'; }) != undefined && vData.find(function (x) { return x.Key == 'Ph-VAN'; }) != undefined ?
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: DrawVectorSVG(props.Width / 2, chartHeight / 2, chartHeight / 2, vData.find(function (x) { return x.Key == 'RMS-VAN'; }).Value, vMax, vData.find(function (x) { return x.Key == 'Ph-VAN'; }).Value), style: { stroke: vData.find(function (x) { return x.Key == 'Ph-VAN'; }).Color, strokeWidth: 3 } })
                    : null,
                vData.find(function (x) { return x.Key == 'RMS-VBN'; }) != undefined && vData.find(function (x) { return x.Key == 'Ph-VBN'; }) != undefined ?
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: DrawVectorSVG(props.Width / 2, chartHeight / 2, chartHeight / 2, vData.find(function (x) { return x.Key == 'RMS-VBN'; }).Value, vMax, vData.find(function (x) { return x.Key == 'Ph-VBN'; }).Value), style: { stroke: vData.find(function (x) { return x.Key == 'Ph-VBN'; }).Color, strokeWidth: 3 } })
                    : null,
                vData.find(function (x) { return x.Key == 'RMS-VCN'; }) != undefined && vData.find(function (x) { return x.Key == 'Ph-VCN'; }) != undefined ?
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: DrawVectorSVG(props.Width / 2, chartHeight / 2, chartHeight / 2, vData.find(function (x) { return x.Key == 'RMS-VCN'; }).Value, vMax, vData.find(function (x) { return x.Key == 'Ph-VCN'; }).Value), style: { stroke: vData.find(function (x) { return x.Key == 'Ph-VCN'; }).Color, strokeWidth: 3 } })
                    : null,
                iData.find(function (x) { return x.Key == 'RMS-IAN'; }) != undefined && iData.find(function (x) { return x.Key == 'Ph-IAN'; }) != undefined ?
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: DrawVectorSVG(props.Width / 2, chartHeight / 2, chartHeight / 2, iData.find(function (x) { return x.Key == 'RMS-IAN'; }).Value, iMax, iData.find(function (x) { return x.Key == 'Ph-IAN'; }).Value), style: { stroke: iData.find(function (x) { return x.Key == 'Ph-IAN'; }).Color, strokeWidth: 3 } })
                    : null,
                iData.find(function (x) { return x.Key == 'RMS-IBN'; }) != undefined && iData.find(function (x) { return x.Key == 'Ph-IBN'; }) != undefined ?
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: DrawVectorSVG(props.Width / 2, chartHeight / 2, chartHeight / 2, iData.find(function (x) { return x.Key == 'RMS-IBN'; }).Value, iMax, iData.find(function (x) { return x.Key == 'Ph-IBN'; }).Value), style: { stroke: iData.find(function (x) { return x.Key == 'Ph-IBN'; }).Color, strokeWidth: 3 } })
                    : null,
                iData.find(function (x) { return x.Key == 'RMS-ICN'; }) != undefined && iData.find(function (x) { return x.Key == 'Ph-ICN'; }) != undefined ?
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { d: DrawVectorSVG(props.Width / 2, chartHeight / 2, chartHeight / 2, iData.find(function (x) { return x.Key == 'RMS-ICN'; }).Value, iMax, iData.find(function (x) { return x.Key == 'Ph-ICN'; }).Value), style: { stroke: iData.find(function (x) { return x.Key == 'Ph-ICN'; }).Color, strokeWidth: 3 } })
                    : null),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("table", { className: "table" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("thead", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", null),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", { style: { backgroundColor: (_b = (_a = vData.find(function (x) { return x.Key == 'RMS-VAN'; })) === null || _a === void 0 ? void 0 : _a.Color) !== null && _b !== void 0 ? _b : null, color: 'white' } }, "VAN"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", { style: { backgroundColor: (_d = (_c = vData.find(function (x) { return x.Key == 'RMS-VBN'; })) === null || _c === void 0 ? void 0 : _c.Color) !== null && _d !== void 0 ? _d : null, color: 'white' } }, "VBN"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", { style: { backgroundColor: (_f = (_e = vData.find(function (x) { return x.Key == 'RMS-VCN'; })) === null || _e === void 0 ? void 0 : _e.Color) !== null && _f !== void 0 ? _f : null, color: 'white' } }, "VCN"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", { style: { backgroundColor: (_h = (_g = iData.find(function (x) { return x.Key == 'RMS-IAN'; })) === null || _g === void 0 ? void 0 : _g.Color) !== null && _h !== void 0 ? _h : null, color: 'white' } }, "IAN"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", { style: { backgroundColor: (_k = (_j = iData.find(function (x) { return x.Key == 'RMS-IBN'; })) === null || _j === void 0 ? void 0 : _j.Color) !== null && _k !== void 0 ? _k : null, color: 'white' } }, "IBN"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("th", { style: { backgroundColor: (_m = (_l = iData.find(function (x) { return x.Key == 'RMS-ICN'; })) === null || _l === void 0 ? void 0 : _l.Color) !== null && _m !== void 0 ? _m : null, color: 'white' } }, "ICN"))),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tbody", null,
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Mag (V or A)"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, vData.find(function (x) { return x.Key == 'RMS-VAN'; }) != undefined ? vData.find(function (x) { return x.Key == 'RMS-VAN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, vData.find(function (x) { return x.Key == 'RMS-VBN'; }) != undefined ? vData.find(function (x) { return x.Key == 'RMS-VBN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, vData.find(function (x) { return x.Key == 'RMS-VCN'; }) != undefined ? vData.find(function (x) { return x.Key == 'RMS-VCN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, iData.find(function (x) { return x.Key == 'RMS-IAN'; }) != undefined ? iData.find(function (x) { return x.Key == 'RMS-IAN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, iData.find(function (x) { return x.Key == 'RMS-IBN'; }) != undefined ? iData.find(function (x) { return x.Key == 'RMS-IBN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, iData.find(function (x) { return x.Key == 'RMS-ICN'; }) != undefined ? iData.find(function (x) { return x.Key == 'RMS-ICN'; }).Value.toFixed(0) : '')),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", null,
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, "Ang (Degrees)"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, vData.find(function (x) { return x.Key == 'Ph-VAN'; }) != undefined ? vData.find(function (x) { return x.Key == 'Ph-VAN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, vData.find(function (x) { return x.Key == 'Ph-VBN'; }) != undefined ? vData.find(function (x) { return x.Key == 'Ph-VBN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, vData.find(function (x) { return x.Key == 'Ph-VCN'; }) != undefined ? vData.find(function (x) { return x.Key == 'Ph-VCN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, iData.find(function (x) { return x.Key == 'Ph-IAN'; }) != undefined ? iData.find(function (x) { return x.Key == 'Ph-IAN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, iData.find(function (x) { return x.Key == 'Ph-IBN'; }) != undefined ? iData.find(function (x) { return x.Key == 'Ph-IBN'; }).Value.toFixed(0) : ''),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, iData.find(function (x) { return x.Key == 'Ph-ICN'; }) != undefined ? iData.find(function (x) { return x.Key == 'Ph-ICN'; }).Value.toFixed(0) : ''))))));
    }
    catch (_o) {
        return null;
    }
};
function DrawVectorSVG(x0, y0, radius, mag, max, angle) {
    if (mag == undefined || max == undefined || angle == undefined)
        return '';
    var x = (mag / max) * Math.cos(angle * Math.PI / 180);
    var y = (mag / max) * Math.sin(angle * Math.PI / 180);
    return "M " + x0 + " " + y0 + " L " + (x0 + radius * x) + " " + (y0 - radius * y) + " Z";
}
/* harmony default export */ __webpack_exports__["default"] = (PolarChart);


/***/ }),

/***/ "./tsx/WaveformViewer/WaveformViewer.tsx":
/*!***********************************************!*\
  !*** ./tsx/WaveformViewer/WaveformViewer.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _WaveformViewerD3Chart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WaveformViewerD3Chart */ "./tsx/WaveformViewer/WaveformViewerD3Chart.tsx");
/* harmony import */ var _Legend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Legend */ "./tsx/WaveformViewer/Legend.tsx");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ "../node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3 */ "../node_modules/d3/index.js");
/* harmony import */ var _PolarChart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./PolarChart */ "./tsx/WaveformViewer/PolarChart.tsx");
/* harmony import */ var _BrowseEvents__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BrowseEvents */ "./tsx/WaveformViewer/BrowseEvents.tsx");
/* harmony import */ var _Info__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Info */ "./tsx/WaveformViewer/Info.tsx");
/* harmony import */ var _ComparableEvents__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ComparableEvents */ "./tsx/WaveformViewer/ComparableEvents.tsx");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! moment */ "../node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_9__);
//******************************************************************************************************
//  WaveformViewer.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  07/30/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};










var WaveformViewer = function (props) {
    var infoWidth = 300;
    var pointsWidth = 500;
    var waveformWidth = window.innerWidth - infoWidth - pointsWidth - 10;
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(0), 2), compareEventID = _a[0], setCompareEventID = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), voltageData = _b[0], setVoltageData = _b[1];
    var _c = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), currentData = _c[0], setCurrentData = _c[1];
    var _d = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), analyticData = _d[0], setAnaltyicData = _d[1];
    var _e = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), compareVoltageData = _e[0], setCompareVoltageData = _e[1];
    var _f = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), compareCurrentData = _f[0], setCompareCurrentData = _f[1];
    var _g = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState([]), 2), compareAnaltyicData = _g[0], setCompareAnaltyicData = _g[1];
    var _h = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState('Frequency'), 2), analytic = _h[0], setAnalytic = _h[1];
    var _j = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(5), 2), harmonic = _j[0], setHarmonic = _j[1];
    var _k = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState('Click'), 2), chartAction = _k[0], setChartAction = _k[1];
    var _l = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(-1), 2), hover = _l[0], setHover = _l[1];
    var _m = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(-1), 2), click = _m[0], setClick = _m[1];
    var _o = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState({ X: { Min: null, Max: null }, Y: { Min: null, Max: null } }), 2), extents = _o[0], setExtents = _o[1];
    var _p = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useReducer(function (x) { return x + 1; }, 0), 2), ignored = _p[0], forceUpdate = _p[1]; // integer state for resize renders
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        window.addEventListener('resize', function (evt) { return forceUpdate(1); });
        return function cleanup() {
            window.removeEventListener('resize', function (evt) { });
        };
    }, []);
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        var handle1 = GetWaveformData('Current', props.EventID);
        handle1.done(function (data) {
            var returnData = Object.keys(data).map(function (key) { return { Key: GetKey('Current', key), Show: ShowPath('Current', key), Color: GetColor(key), Data: data[key] }; });
            setCurrentData(returnData);
        });
        var handle2 = GetWaveformData('Voltage', props.EventID);
        handle2.done(function (data) {
            var returnData = Object.keys(data).map(function (key) { return { Key: GetKey('Voltage', key), Show: ShowPath('Voltage', key), Color: GetColor(key), Data: data[key] }; });
            setVoltageData(returnData);
        });
        return function () {
            if (handle1.abort != undefined)
                handle1.abort();
            if (handle2.abort != undefined)
                handle2.abort();
        };
    }, [props.EventID]);
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        var handle = GetAnalyticData(analytic, props.EventID);
        handle.done(function (data) {
            var returnData = Object.keys(data).map(function (key) { return { Key: GetKey(analytic, key), Show: ShowPath(analytic, key), Color: GetColor(key), Data: data[key] }; });
            setAnaltyicData(returnData);
        });
        return function () {
            if (handle.abort != undefined)
                handle.abort();
        };
    }, [props.EventID, analytic, harmonic]);
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        if (compareEventID == 0) {
            setCompareVoltageData([]);
            setCompareCurrentData([]);
            setCompareAnaltyicData([]);
            return;
        }
        var handle1 = GetWaveformData('Current', compareEventID);
        handle1.done(function (data) {
            var returnData = Object.keys(data).map(function (key) { return { Key: GetKey('Current', key), Show: false, Color: GetCompareColor(key), Data: data[key] }; });
            setCompareCurrentData(returnData);
        });
        var handle2 = GetWaveformData('Voltage', compareEventID);
        handle2.done(function (data) {
            var returnData = Object.keys(data).map(function (key) { return { Key: GetKey('Voltage', key), Show: false, Color: GetCompareColor(key), Data: data[key] }; });
            setCompareVoltageData(returnData);
        });
        return function () {
            if (handle1.abort != undefined)
                handle1.abort();
            if (handle2.abort != undefined)
                handle2.abort();
        };
    }, [compareEventID]);
    react__WEBPACK_IMPORTED_MODULE_0___default.a.useEffect(function () {
        var handle = GetAnalyticData(analytic, compareEventID);
        handle.done(function (data) {
            var returnData = Object.keys(data).map(function (key) { return { Key: GetKey(analytic, key), Show: false, Color: GetCompareColor(key), Data: data[key] }; });
            setCompareAnaltyicData(returnData);
        });
        return function () {
            if (handle.abort != undefined)
                handle.abort();
        };
    }, [compareEventID, analytic, harmonic]);
    function GetWaveformData(type, id) {
        return $.ajax({
            type: "GET",
            url: homePath + "api/OpenXDA/Event/Waveform/" + id + "/" + type + "/" + Math.floor(waveformWidth),
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: true,
            async: true
        });
    }
    function GetAnalyticData(type, id) {
        return $.ajax({
            type: "GET",
            url: homePath + "api/OpenXDA/Event/Analytic/" + type + "/" + id + (type == 'SpecifiedHarmonic' ? '/' + harmonic : '') + "/" + Math.floor(waveformWidth),
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: true,
            async: true
        });
    }
    function HandleReset() {
        setExtents({ X: { Min: null, Max: null }, Y: { Min: null, Max: null } });
    }
    function HandleChartAction(value) {
        if (chartAction == 'Click' && typeof (value) == 'number') {
            setClick(value);
        }
        else if (typeof (value) == 'object')
            setExtents(value);
    }
    function HandleExportCSV() {
        var req = new XMLHttpRequest();
        req.open("GET", homePath + "api/OpenXDA/Event/CSV/" + props.EventID, true);
        req.responseType = "blob";
        req.onload = function (event) {
            var blob = req.response;
            var fileName = req.getResponseHeader("fileName"); //if you have the fileName header available
            var link = document.createElement('a');
            link.href = window.URL.createObjectURL(blob);
            link.download = fileName;
            link.click();
        };
        req.send();
    }
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "row", style: { height: "100%", margin: '5px 5px 5px 5px ' } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "", style: { padding: '0px 2px 0px 0px', width: infoWidth } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, "Info"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 296) / 2 + 25, height: (window.innerHeight - 296) / 2 + 25, overflowY: 'hidden' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Info__WEBPACK_IMPORTED_MODULE_7__["default"], { EventID: props.EventID }))),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, "Browse Events"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 296) / 4 - 75, height: (window.innerHeight - 296) / 4 - 75, overflowY: 'hidden' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_BrowseEvents__WEBPACK_IMPORTED_MODULE_6__["default"], { EventID: props.EventID }))),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, "Compare"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 296) / 4 + 50, height: (window.innerHeight - 296) / 4 + 50, overflowY: 'hidden' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ComparableEvents__WEBPACK_IMPORTED_MODULE_8__["default"], { EventID: props.EventID, ComparableEventID: compareEventID, OnChange: function (id) { return setCompareEventID(id); } })))),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "", style: { padding: '0px 2px 0px 0px', width: waveformWidth } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header", style: { paddingBottom: 9, paddingTop: 9 } },
                    "Waveforms",
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "pull-right" },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "form-check-inline" },
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("label", { className: "form-check-label" },
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("input", { type: "radio", className: "form-check-input", checked: chartAction == 'Click', onChange: function (evt) { return setChartAction('Click'); } }),
                                "Click")),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "form-check-inline" },
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("label", { className: "form-check-label" },
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("input", { type: "radio", className: "form-check-input", checked: chartAction == 'Pan', onChange: function (evt) { return setChartAction('Pan'); } }),
                                "Pan")),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "form-check-inline" },
                            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("label", { className: "form-check-label" },
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("input", { type: "radio", className: "form-check-input", checked: chartAction == 'ZoomX', onChange: function (evt) { return setChartAction('ZoomX'); } }),
                                "Zoom")),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { onClick: HandleReset }, "Reset"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", { onClick: HandleExportCSV }, "Export CSV"))),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: 2 * (window.innerHeight - 246) / 3, height: 2 * (window.innerHeight - 246) / 3, overflowY: 'hidden' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { height: (window.innerHeight - 246) / 3, position: 'relative' } },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend__WEBPACK_IMPORTED_MODULE_2__["default"], { Type: 'Voltage', Paths: voltageData, CompareData: false, GetColor: GetColor, CallBack: function (path) {
                                var newPaths = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.clone(voltageData);
                                var newPath = newPaths.find(function (x) { return x.Key == path.Key; });
                                newPath.Show = !path.Show;
                                setVoltageData(newPaths);
                            } }),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend__WEBPACK_IMPORTED_MODULE_2__["default"], { Type: 'Voltage', Paths: compareVoltageData, CompareData: true, GetColor: GetCompareColor, CallBack: function (path) {
                                var newPaths = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.clone(compareVoltageData);
                                var newPath = newPaths.find(function (x) { return x.Key == path.Key; });
                                newPath.Show = !path.Show;
                                setCompareVoltageData(newPaths);
                            } }),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_WaveformViewerD3Chart__WEBPACK_IMPORTED_MODULE_1__["default"], { EventID: props.EventID, Data: voltageData, CompareData: compareVoltageData, ChartAction: chartAction, Extent: extents, Units: "Volts", DataType: "Time", Height: (window.innerHeight - 246) / 3, Width: waveformWidth - 4, Margin: { Top: 10, Bottom: 30, Left: 50, Right: 1 }, Hover: hover, SetHover: function (value) { return setHover(value); }, Click: click, HandleChartAction: HandleChartAction })),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { height: (window.innerHeight - 246) / 3, position: 'relative' } },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend__WEBPACK_IMPORTED_MODULE_2__["default"], { Type: 'Current', Paths: currentData, CompareData: false, GetColor: GetColor, CallBack: function (path) {
                                var newPaths = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.clone(currentData);
                                var newPath = newPaths.find(function (x) { return x.Key == path.Key; });
                                newPath.Show = !path.Show;
                                setCurrentData(newPaths);
                            } }),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend__WEBPACK_IMPORTED_MODULE_2__["default"], { Type: 'Current', Paths: compareCurrentData, CompareData: true, GetColor: GetCompareColor, CallBack: function (path) {
                                var newPaths = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.clone(compareCurrentData);
                                var newPath = newPaths.find(function (x) { return x.Key == path.Key; });
                                newPath.Show = !path.Show;
                                setCompareCurrentData(newPaths);
                            } }),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_WaveformViewerD3Chart__WEBPACK_IMPORTED_MODULE_1__["default"], { EventID: props.EventID, Data: currentData, CompareData: compareCurrentData, ChartAction: chartAction, Extent: extents, Units: "Amps", DataType: "Time", Height: (window.innerHeight - 246) / 3, Width: waveformWidth - 4, Margin: { Top: 10, Bottom: 30, Left: 50, Right: 1 }, Hover: hover, SetHover: function (value) { return setHover(value); }, Click: click, HandleChartAction: HandleChartAction })))),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("select", { value: analytic, onChange: function (evt) { return setAnalytic(evt.target.value); }, style: { width: 200 } },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "Power" }, "Power"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "Frequency" }, "Frequency"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "RapidVoltageChange" }, "Rapid Voltage Change"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "SpecifiedHarmonic" }, "Specified Harmonic"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "SymmetricalComponents" }, "Symmetrical Components"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "THD" }, "Total Harmonic Distortion"),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { value: "Unbalance" }, "Unbalance")),
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("select", { value: harmonic, onChange: function (evt) { return setHarmonic(parseInt(evt.target.value)); }, hidden: analytic != 'SpecifiedHarmonic' }, Array.from(Array(40), function (x, i) { return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", { key: i, value: i }, i); }))),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 246) / 3, height: (window.innerHeight - 246) / 3, overflowY: 'hidden' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: { height: (window.innerHeight - 246) / 3, position: 'relative' } },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend__WEBPACK_IMPORTED_MODULE_2__["default"], { Type: analytic, Paths: analyticData, CompareData: false, GetColor: GetColor, CallBack: function (path) {
                                var newPaths = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.clone(analyticData);
                                var newPath = newPaths.find(function (x) { return x.Key == path.Key; });
                                newPath.Show = !path.Show;
                                setAnaltyicData(newPaths);
                            } }),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Legend__WEBPACK_IMPORTED_MODULE_2__["default"], { Type: analytic, Paths: compareAnaltyicData, CompareData: true, GetColor: GetCompareColor, CallBack: function (path) {
                                var newPaths = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.clone(compareAnaltyicData);
                                var newPath = newPaths.find(function (x) { return x.Key == path.Key; });
                                newPath.Show = !path.Show;
                                setCompareAnaltyicData(newPaths);
                            } }),
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_WaveformViewerD3Chart__WEBPACK_IMPORTED_MODULE_1__["default"], { EventID: props.EventID, Data: analyticData, CompareData: compareAnaltyicData, ChartAction: chartAction, Extent: extents, Units: GetUnits(analytic), DataType: "Time", Height: (window.innerHeight - 246) / 3, Width: waveformWidth - 4, Margin: { Top: 10, Bottom: 30, Left: 50, Right: 1 }, Hover: hover, SetHover: function (value) { return setHover(value); }, Click: click, HandleChartAction: HandleChartAction }))))),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "", style: { padding: '0px 2px 0px 0px', width: pointsWidth } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, click < 0 ? 'Click to get values ...' : 'Values at ' + moment__WEBPACK_IMPORTED_MODULE_9___default()(click).utc().format('MM/DD/YYYY HH:mm:ss.SSSS') + ' (CST)'),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 246) / 2, height: (window.innerHeight - 246) / 2, overflowY: 'auto' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("table", { className: "table" },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tbody", null,
                            voltageData.filter(function (x) { return x.Show; }).map(function (x) {
                                try {
                                    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", { key: x.Key },
                                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, x.Key),
                                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, x.Data[Object(d3__WEBPACK_IMPORTED_MODULE_4__["bisect"])(x.Data.map(function (x) { return x[0]; }), click)][1].toFixed(2)));
                                }
                                catch (_a) {
                                    return null;
                                }
                            }),
                            currentData.filter(function (x) { return x.Show; }).map(function (x) {
                                try {
                                    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("tr", { key: x.Key },
                                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, x.Key),
                                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("td", null, x.Data[Object(d3__WEBPACK_IMPORTED_MODULE_4__["bisect"])(x.Data.map(function (x) { return x[0]; }), click)][1].toFixed(2)));
                                }
                                catch (_a) {
                                    return null;
                                }
                            }))))),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card" },
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-header" }, "Phasor"),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: "card-body", style: { padding: 0, maxHeight: (window.innerHeight - 246) / 2, height: (window.innerHeight - 246) / 2, overflowY: 'hidden' } },
                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_PolarChart__WEBPACK_IMPORTED_MODULE_5__["default"], { Height: (window.innerHeight - 246) / 2, Width: pointsWidth - 5, Time: click, VoltageData: voltageData, CurrentData: currentData }))))));
};
function GetUnits(type) {
    if (type == 'Frequency')
        return 'Hz';
    else if (type == 'Power')
        return 'kW/kVA/kVAr';
    else if (type == 'RapidVoltageChange')
        return 'V';
    else if (type == 'SpecifiedHarmonic')
        return 'V/A/Degs';
    else if (type == 'SymmetricalComponents')
        return 'kV';
    else if (type == 'THD')
        return '%';
    else if (type == 'Unbalance')
        return '%';
    else
        return '';
}
function ShowPath(type, label) {
    if (type == 'Voltage' || type == 'Current' || type == 'RapidVoltageChange') {
        if (label.match(/^[VI][ABC]N$/g) != null)
            return true;
    }
    else if (type == 'Frequency' && label == 'Average')
        return true;
    else if (type == 'Power') {
        if (label.match(/Active Power/g) != null)
            return true;
    }
    else if (type == 'SpecifiedHarmonic') {
        if (label.match(/V[ABC]N Mag/g) != null)
            return true;
    }
    else if (type == 'SymmetricalComponents' && label.indexOf('Voltage') >= 0)
        return true;
    else if (type == 'THD' && label.indexOf('V') >= 0)
        return true;
    else if (type == 'Unbalance' && label.indexOf('S2/S1 Voltage') >= 0)
        return true;
    return false;
}
function GetKey(type, label) {
    var prefix = type == 'Voltage' ? 'V' : 'I';
    if ((type == 'Voltage' || type == 'Current') && label == prefix + "AN")
        return "Wf-" + prefix + "AN";
    if ((type == 'Voltage' || type == 'Current') && label == prefix + "BN")
        return "Wf-" + prefix + "BN";
    if ((type == 'Voltage' || type == 'Current') && label == prefix + "CN")
        return "Wf-" + prefix + "CN";
    if ((type == 'Voltage' || type == 'Current') && label == prefix + "AB")
        return "Wf-" + prefix + "AB";
    if ((type == 'Voltage' || type == 'Current') && label == prefix + "BC")
        return "Wf-" + prefix + "BC";
    if ((type == 'Voltage' || type == 'Current') && label == prefix + "CA")
        return "Wf-" + prefix + "CA";
    if (label == prefix + "NG")
        return "Wf-" + prefix + "NG";
    if (label == prefix + "RES")
        return "Wf-" + prefix + "RES";
    if (label == prefix + "AN RMS")
        return "RMS-" + prefix + "AN";
    if (label == prefix + "BN RMS")
        return "RMS-" + prefix + "BN";
    if (label == prefix + "CN RMS")
        return "RMS-" + prefix + "CN";
    if (label == prefix + "AB RMS")
        return "RMS-" + prefix + "AB";
    if (label == prefix + "BC RMS")
        return "RMS-" + prefix + "BC";
    if (label == prefix + "CA RMS")
        return "RMS-" + prefix + "CA";
    if (label == prefix + "NG RMS")
        return "RMS-" + prefix + "NG";
    if (label == prefix + "RES RMS")
        return "RMS-" + prefix + "RES";
    if (label == prefix + "AN Phase")
        return "Ph-" + prefix + "AN";
    if (label == prefix + "BN Phase")
        return "Ph-" + prefix + "BN";
    if (label == prefix + "CN Phase")
        return "Ph-" + prefix + "CN";
    if (label == prefix + "AB Phase")
        return "Ph-" + prefix + "AB";
    if (label == prefix + "BC Phase")
        return "Ph-" + prefix + "BC";
    if (label == prefix + "CA Phase")
        return "Ph-" + prefix + "CA";
    if (label == prefix + "NG Phase")
        return "Ph-" + prefix + "NG";
    if (label == prefix + "RES Phase")
        return "Ph-" + prefix + "RES";
    if (label == prefix + "AN Amplitude")
        return "Amp-" + prefix + "AN";
    if (label == prefix + "BN Amplitude")
        return "Amp-" + prefix + "BN";
    if (label == prefix + "CN Amplitude")
        return "Amp-" + prefix + "CN";
    if (label == prefix + "AB Amplitude")
        return "Amp-" + prefix + "AB";
    if (label == prefix + "BC Amplitude")
        return "Amp-" + prefix + "BC";
    if (label == prefix + "CA Amplitude")
        return "Amp-" + prefix + "CA";
    if (label == prefix + "NG Amplitude")
        return "Amp-" + prefix + "NG";
    if (label == prefix + "RES Amplitude")
        return "Amp-" + prefix + "RES";
    if (label == "AN Active Power")
        return "AN-W";
    if (label == "BN Active Power")
        return "BN-W";
    if (label == "CN Active Power")
        return "CN-W";
    if (label == "Total Active Power")
        return "Total-W";
    if (label == "AN Apparent Power")
        return "AN-VA";
    if (label == "BN Apparent Power")
        return "BN-VA";
    if (label == "CN Apparent Power")
        return "CN-VA";
    if (label == "Total Apparent Power")
        return "Total-VA";
    if (label == "AN Reactive Power")
        return "AN-VAR";
    if (label == "BN Reactive Power")
        return "BN-VAR";
    if (label == "CN Reactive Power")
        return "CN-VAR";
    if (label == "Total Reactive Power")
        return "Total-VAR";
    if (label == "AN Power Factor")
        return "AN-PF";
    if (label == "BN Power Factor")
        return "BN-PF";
    if (label == "CN Power Factor")
        return "CN-PF";
    if (label == "Total Power Factor")
        return "Total-PF";
    else
        return label;
}
function GetColor(label) {
    if (label.indexOf('VA') >= 0)
        return '#A30000';
    if (label.indexOf('VB') >= 0)
        return '#0029A3';
    if (label.indexOf('VC') >= 0)
        return '#007A29';
    if (label.indexOf('VN') >= 0)
        return '#c3c3c3';
    if (label.indexOf('IA') >= 0)
        return '#FF0000';
    if (label.indexOf('IB') >= 0)
        return '#0066CC';
    if (label.indexOf('IC') >= 0)
        return '#33CC33';
    if (label.indexOf('AN') >= 0)
        return '#FF0000';
    if (label.indexOf('BN') >= 0)
        return '#0066CC';
    if (label.indexOf('CN') >= 0)
        return '#33CC33';
    if (label.indexOf('NG') >= 0)
        return '#c3c3c3';
    if (label.indexOf('RES') >= 0)
        return '#ffc107';
    if (label.indexOf('Average') >= 0)
        return '#9A52A4';
    if (label.indexOf('Total') >= 0)
        return '#9A52A4';
    if (label.indexOf('S0') >= 0)
        return '#A30000';
    if (label.indexOf('S2') >= 0)
        return '#007A29';
    if (label.indexOf('S1') >= 0)
        return '#0029A3';
    else {
        var ranNumOne = Math.floor(Math.random() * 256).toString(16);
        var ranNumTwo = Math.floor(Math.random() * 256).toString(16);
        var ranNumThree = Math.floor(Math.random() * 256).toString(16);
        return "#" + (ranNumOne.length > 1 ? ranNumOne : "0" + ranNumOne) + (ranNumTwo.length > 1 ? ranNumTwo : "0" + ranNumTwo) + (ranNumThree.length > 1 ? ranNumThree : "0" + ranNumThree);
    }
}
function GetCompareColor(label) {
    if (label.indexOf('VA') >= 0)
        return '#E3A909';
    if (label.indexOf('VB') >= 0)
        return '#9800A3';
    if (label.indexOf('VC') >= 0)
        return '#707A00';
    if (label.indexOf('VN') >= 0)
        return '#c3c3c3';
    if (label.indexOf('IA') >= 0)
        return '#FF8000';
    if (label.indexOf('IB') >= 0)
        return '#CF12E0';
    if (label.indexOf('IC') >= 0)
        return '#FFFF00';
    if (label.indexOf('AN') >= 0)
        return '#FF8000';
    if (label.indexOf('BN') >= 0)
        return '#CF12E0';
    if (label.indexOf('CN') >= 0)
        return '#FFFF00';
    if (label.indexOf('NG') >= 0)
        return '#636161';
    if (label.indexOf('RES') >= 0)
        return '#07FFFF';
    if (label.indexOf('Average') >= 0)
        return '#A45289';
    if (label.indexOf('Total') >= 0)
        return '#A45289';
    if (label.indexOf('S0') >= 0)
        return '#E3A909';
    if (label.indexOf('S1') >= 0)
        return '#9800A3';
    if (label.indexOf('S2') >= 0)
        return '#707A00';
    else {
        var ranNumOne = Math.floor(Math.random() * 256).toString(16);
        var ranNumTwo = Math.floor(Math.random() * 256).toString(16);
        var ranNumThree = Math.floor(Math.random() * 256).toString(16);
        return "#" + (ranNumOne.length > 1 ? ranNumOne : "0" + ranNumOne) + (ranNumTwo.length > 1 ? ranNumTwo : "0" + ranNumTwo) + (ranNumThree.length > 1 ? ranNumThree : "0" + ranNumThree);
    }
}
/* harmony default export */ __webpack_exports__["default"] = (WaveformViewer);


/***/ }),

/***/ "./tsx/WaveformViewer/WaveformViewerD3Chart.tsx":
/*!******************************************************!*\
  !*** ./tsx/WaveformViewer/WaveformViewerD3Chart.tsx ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3 */ "../node_modules/d3/index.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ "../node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
//******************************************************************************************************
//  EventSearchPreviewD3Chart.tsx - Gbtc
//
//  Copyright © 2020, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  02/20/2020 - Billy Ernest
//       Generated original version of source code.
//
//******************************************************************************************************
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};



var WaveformViewerD3Chart = function (props) {
    var chart = react__WEBPACK_IMPORTED_MODULE_0___default.a.useRef(null);
    var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(null), 2), xStart = _a[0], setXStart = _a[1];
    var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(null), 2), xEnd = _b[0], setXEnd = _b[1];
    function OnHover(evt) {
        evt.preventDefault();
        props.SetHover(evt.nativeEvent.offsetX);
    }
    function HandleChartAction(evt) {
        evt.preventDefault();
        if (props.ChartAction == 'Click')
            props.HandleChartAction(x.invert(evt.nativeEvent.offsetX));
        else if (props.ChartAction == 'Pan')
            OnPan(evt);
        else if (props.ChartAction == 'ZoomX')
            OnZoom(evt);
    }
    function OnPan(evt) {
        evt.persist();
        $(chart.current).on('mousemove', function (e) {
            props.HandleChartAction({
                X: {
                    Min: x.invert(x.range()[0] + evt.clientX - e.clientX),
                    Max: x.invert(x.range()[1] + evt.clientX - e.clientX)
                }, Y: props.Extent.Y
            });
        });
    }
    function StopDrag(evt) {
        evt.preventDefault();
        $(chart.current).off('mousemove');
        if (props.ChartAction == "ZoomX") {
            props.HandleChartAction({
                X: {
                    Min: Math.min(x.invert(xStart), x.invert(xEnd)),
                    Max: Math.max(x.invert(xStart), x.invert(xEnd))
                }, Y: props.Extent.Y
            });
            setXStart(null);
            setXEnd(null);
        }
    }
    function OnZoom(evt) {
        evt.persist();
        setXStart(evt.nativeEvent.offsetX);
        $(chart.current).on('mousemove', function (e) {
            setXEnd(e.offsetX);
        });
    }
    var x = Object(d3__WEBPACK_IMPORTED_MODULE_1__["scaleLinear"])().rangeRound([props.Margin.Left, props.Width - props.Margin.Right]);
    var y = Object(d3__WEBPACK_IMPORTED_MODULE_1__["scaleLinear"])().rangeRound([props.Height - props.Margin.Bottom, props.Margin.Top]);
    var yextent = [1000000, -1000000];
    var xextent = [0, 1];
    if (props.Data.length > 0)
        xextent = [props.Data[0].Data[0][0], props.Data[0].Data[props.Data[0].Data.length - 1][0]];
    if (props.Extent.X.Min != null)
        xextent = [props.Extent.X.Min, xextent[1]];
    if (props.Extent.X.Max != null)
        xextent = [xextent[0], props.Extent.X.Max];
    $.each(props.Data.filter(function (x) { return x.Show; }), function (index, value) {
        var newyexent = Object(d3__WEBPACK_IMPORTED_MODULE_1__["extent"])(value.Data.filter(function (y) { return y[0] >= xextent[0] && y[0] <= xextent[1]; }), function (d) { return d[1]; });
        if (newyexent[0] != undefined && parseFloat(newyexent[0].toString()) < yextent[0])
            yextent[0] = parseFloat(newyexent[0].toString());
        if (newyexent[1] != undefined && parseFloat(newyexent[1].toString()) > yextent[1])
            yextent[1] = parseFloat(newyexent[1].toString());
    });
    $.each(props.CompareData.filter(function (x) { return x.Show; }), function (index, value) {
        var newyexent = Object(d3__WEBPACK_IMPORTED_MODULE_1__["extent"])(value.Data.filter(function (y) { return y[0] >= xextent[0] && y[0] <= xextent[1]; }), function (d) { return d[1]; });
        if (newyexent[0] != undefined && parseFloat(newyexent[0].toString()) < yextent[0])
            yextent[0] = parseFloat(newyexent[0].toString());
        if (newyexent[1] != undefined && parseFloat(newyexent[1].toString()) > yextent[1])
            yextent[1] = parseFloat(newyexent[1].toString());
    });
    var yspan = yextent[1] - yextent[0];
    yextent = [yextent[0] - yspan / 10, yextent[1] + yspan / 10];
    y.domain(yextent);
    x.domain(xextent);
    var linefunc = Object(d3__WEBPACK_IMPORTED_MODULE_1__["line"])().x(function (d) { return x(d[0]); }).y(function (d) { return y(d[1]); });
    var newPaths = [];
    $.each(props.Data.filter(function (x) { return x.Show; }), function (index, value) {
        newPaths.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { key: value.Key, fill: 'none', strokeLinejoin: 'round', strokeWidth: '1.5', stroke: value.Color, d: linefunc(value.Data.filter(function (d) { return d[0] >= x.domain()[0] && d[0] <= x.domain()[1]; })) }));
    });
    var comparePaths = [];
    $.each(props.CompareData.filter(function (x) { return x.Show; }), function (index, value) {
        comparePaths.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { key: value.Key, fill: 'none', strokeLinejoin: 'round', strokeWidth: '1.5', stroke: value.Color, d: linefunc(value.Data.filter(function (d) { return d[0] >= x.domain()[0] && d[0] <= x.domain()[1]; })) }));
    });
    var svg = Object(d3__WEBPACK_IMPORTED_MODULE_1__["select"])(chart.current);
    svg.selectAll("g.axis").remove();
    svg.append("g")
        .classed("axis", true)
        .attr("transform", "translate(0," + (props.Height - props.Margin.Bottom) + ")")
        .call(Object(d3__WEBPACK_IMPORTED_MODULE_1__["axisBottom"])(x).ticks(10).tickFormat(function (value, index) {
        if (index == 0)
            return moment__WEBPACK_IMPORTED_MODULE_2___default()(value).format("HH:mm:ss.SSS");
        else
            return moment__WEBPACK_IMPORTED_MODULE_2___default()(value).format("ss.SSS");
    }));
    svg.append("g")
        .classed("axis", true)
        .attr("transform", "translate(" + props.Margin.Left + ",0)")
        .call(Object(d3__WEBPACK_IMPORTED_MODULE_1__["axisLeft"])(y).ticks(8));
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("svg", { ref: chart, width: props.Width, height: props.Height, onMouseOver: OnHover, onMouseDown: HandleChartAction, onMouseUp: StopDrag, style: { fill: 'none' } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { stroke: 'black', strokeWidth: '0.5px', d: "M " + props.Margin.Left + " " + props.Margin.Top + " H " + (props.Width - props.Margin.Right) + " V " + (props.Height - props.Margin.Bottom) + " H " + props.Margin.Left + " V " + props.Margin.Top, style: { shapeRendering: 'crispEdges' } }),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("text", { fill: "black", fontSize: "small", y: props.Height - 15, x: '10' }, props.Units),
        newPaths,
        comparePaths,
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { stroke: 'black', d: "M " + props.Hover + "," + props.Margin.Top + " V " + (props.Height - props.Margin.Bottom), style: { stroke: 'black', opacity: props.Hover < props.Margin.Left ? 0 : 1 }, strokeWidth: 0.5 }),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", { stroke: 'black', d: "M " + x(props.Click) + "," + props.Margin.Top + " V " + (props.Height - props.Margin.Bottom), style: { stroke: 'red', opacity: x(props.Click) < props.Margin.Left ? 0 : 1 }, strokeWidth: 1 }),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("text", { fill: "black", fontSize: "small", x: props.Width / 2, y: props.Height - 5 }, "Time"),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("rect", { stroke: 'black', x: Math.min(xStart, xEnd), y: props.Margin.Top, width: Math.abs(xEnd - xStart), height: props.Height - props.Margin.Top - props.Margin.Bottom, style: { stroke: 'grey', fill: 'grey', opacity: 0.5 } })));
};
/* harmony default export */ __webpack_exports__["default"] = (WaveformViewerD3Chart);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,